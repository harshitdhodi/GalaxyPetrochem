{"version":3,"file":"ChemicalTypesTable-P8GZ376t.js","sources":["../../src/chemical/chemicalTypes_Components/Dialog.jsx","../../src/chemical/chemicalTypes_Components/Table.jsx","../../src/chemical/ChemicalTypesTable.jsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function ChemicalTypesDialog({ open, setOpen, chemicalName, setChemicalName, handleSave }) {\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-purple-600\">Manage Chemical Type</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"space-y-2\">\r\n            <Input\r\n              id=\"name\"\r\n              placeholder=\"Chemical Type Name\"\r\n              value={chemicalName}\r\n              onChange={(e) => setChemicalName(e.target.value)}\r\n              className=\"border-purple-200 focus:border-purple-400\"\r\n            />\r\n            {!chemicalName && <p className=\"text-red-500 text-sm\">Please enter name</p>}\r\n          </div>\r\n          <div className=\"flex justify-end gap-2\">\r\n            <Button\r\n              onClick={handleSave}\r\n              disabled={!chemicalName}\r\n              className=\"bg-green-500 hover:bg-green-600\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button variant=\"destructive\" onClick={() => setOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { Button } from \"@/components/ui/button\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Plus } from \"lucide-react\"\r\n\r\nexport default function ChemicalTypesTable({ chemicalTypes, handleEdit, handleDelete }) {\r\n  return (\r\n    <Table className=\"w-1/2 border\">\r\n      <TableHeader>\r\n        <TableRow className=\"bg-gray-100\">\r\n          <TableHead className=\"w-[200px] border-r font-bold  border-gray-300\">Action</TableHead>\r\n          <TableHead className=\"font-bold\">Name</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {chemicalTypes.map((type) => (\r\n          <TableRow key={type.id} className=\"p-1\">\r\n            <TableCell className=\"p-2 border-r border-gray-300\">\r\n              <div className=\"flex gap-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"bg-green-500 px-2 py-1 hover:bg-green-600 w-20 text-white border-none\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleEdit(type)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"bg-red-500 hover:bg-red-600 w-20 text-white border-none\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleDelete(type._id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell className=\"p-2\">{type.name}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","'use client'\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Plus } from \"lucide-react\"\r\nimport { useCreateChemicalTypeMutation, useGetChemicalTypesQuery, useUpdateChemicalTypeMutation, useDeleteChemicalTypeMutation } from \"@/slice/chemicalType/chemicalType\"\r\nimport ChemicalTypesDialog from \"./chemicalTypes_Components/Dialog\"\r\nimport ChemicalTypesTable from \"./chemicalTypes_Components/Table\"\r\n\r\nexport default function ChemicalTypes() {\r\n  const [open, setOpen] = useState(false)\r\n  const [chemicalName, setChemicalName] = useState(\"\")\r\n  const [editingId, setEditingId] = useState(null) // Track the ID of the chemical type being edited\r\n\r\n  // Fetch the chemical types\r\n  const { data: chemicalTypes = [], isLoading, error } = useGetChemicalTypesQuery()\r\n\r\n  // Mutations\r\n  const [createChemicalType] = useCreateChemicalTypeMutation()\r\n  const [updateChemicalType] = useUpdateChemicalTypeMutation()\r\n  const [deleteChemicalType] = useDeleteChemicalTypeMutation()\r\n\r\n  // Save the chemical type (create or update)\r\n  const handleSave = async () => {\r\n    try {\r\n      if (chemicalName) {\r\n        const updatedChemicalType = { name: chemicalName };\r\n        console.log(\"Saving chemical type:\", { id: editingId, updatedChemicalType }); // Log the ID and data\r\n        if (editingId) {\r\n          // Update the chemical type\r\n          await updateChemicalType({ id: editingId, updatedChemicalType }).unwrap();\r\n        } else {\r\n          // Create a new chemical type\r\n          await createChemicalType(updatedChemicalType).unwrap();\r\n        }\r\n        setChemicalName(\"\"); // Clear the input field\r\n        setEditingId(null); // Reset the editing ID\r\n        setOpen(false); // Close the dialog\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to save chemical type:\", error);\r\n    }\r\n  };\r\n  \r\n  // Handle Edit (set chemical name and ID)\r\n  const handleEdit = (type) => {\r\n    if (type && type._id) {\r\n      setChemicalName(type.name);\r\n      setEditingId(type._id);\r\n      setOpen(true);\r\n    } else {\r\n      console.error(\"Invalid chemical type selected:\", type);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle Delete\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteChemicalType(id).unwrap()\r\n    } catch (error) {\r\n      console.error(\"Failed to delete chemical type:\", error)\r\n    }\r\n  }\r\n\r\n  if (isLoading) return <p>Loading...</p>\r\n  if (error) return <p>Error fetching chemical types.</p>\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-semibold text-purple-600\">Chemical Types</h1>\r\n        <Button onClick={() => setOpen(true)} className=\"bg-purple-600 hover:bg-purple-700\">\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Chemical Type\r\n        </Button>\r\n      </div>\r\n\r\n      <ChemicalTypesTable \r\n        chemicalTypes={chemicalTypes} \r\n        handleEdit={handleEdit} \r\n        handleDelete={handleDelete} \r\n      />\r\n\r\n      <ChemicalTypesDialog \r\n        open={open} \r\n        setOpen={setOpen} \r\n        chemicalName={chemicalName} \r\n        setChemicalName={setChemicalName} \r\n        handleSave={handleSave} \r\n        editingId={editingId}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["ChemicalTypesDialog","open","setOpen","chemicalName","setChemicalName","handleSave","Dialog","onOpenChange","children","DialogContent","jsx","DialogHeader","DialogTitle","className","jsxs","Input","id","placeholder","value","onChange","e","target","Button","onClick","disabled","variant","ChemicalTypesTable","chemicalTypes","handleEdit","handleDelete","Table","TableHeader","TableRow","TableHead","TableBody","map","type","TableCell","size","_id","name","ChemicalTypes","useState","editingId","setEditingId","data","isLoading","error","useGetChemicalTypesQuery","createChemicalType","useCreateChemicalTypeMutation","updateChemicalType","useUpdateChemicalTypeMutation","deleteChemicalType","useDeleteChemicalTypeMutation","Plus","async","unwrap","updatedChemicalType"],"mappings":"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"}