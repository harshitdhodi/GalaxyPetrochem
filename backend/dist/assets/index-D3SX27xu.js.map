{"version":3,"file":"index-D3SX27xu.js","sources":["../../node_modules/@radix-ui/react-collection/dist/index.mjs","../../node_modules/@radix-ui/react-direction/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// packages/react/collection/src/collection.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createCollection(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }\n  );\n  const CollectionProvider = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef(null);\n    const itemMap = React.useRef(/* @__PURE__ */ new Map()).current;\n    return /* @__PURE__ */ jsx(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx(Slot, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...itemData });\n        return () => void context.itemMap.delete(ref);\n      });\n      return /* @__PURE__ */ jsx(Slot, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useCollection(scope) {\n    const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n    return getItems;\n  }\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope\n  ];\n}\nexport {\n  createCollection\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/direction/src/Direction.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DirectionContext = React.createContext(void 0);\nvar DirectionProvider = (props) => {\n  const { dir, children } = props;\n  return /* @__PURE__ */ jsx(DirectionContext.Provider, { value: dir, children });\n};\nfunction useDirection(localDir) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\nvar Provider = DirectionProvider;\nexport {\n  DirectionProvider,\n  Provider,\n  useDirection\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["createCollection","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","props","scope","children","ref","React","useRef","jsx","displayName","COLLECTION_SLOT_NAME","CollectionSlot","forwardRef","forwardedRef","context","composedRefs","useComposedRefs","Slot","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","useEffect","set","delete","Provider","ItemSlot","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","values","sort","a","b","indexOf","DirectionContext","React.createContext","createContext","useDirection","localDir","globalDir","React.useContext","useContext"],"mappings":"+GAQA,SAASA,EAAiBC,GACxB,MAAMC,EAAgBD,EAAO,sBACtBE,EAAyBC,GAAyBC,EAAmBH,IACrEI,EAAwBC,GAAwBJ,EACrDD,EACA,CAAEM,cAAe,CAAEC,QAAS,MAAQC,QAAyB,IAAIC,MAE7DC,EAAsBC,IAC1B,MAAMC,MAAEA,EAAKC,SAAEA,GAAaF,EACtBG,EAAMC,EAAMC,OAAO,MACnBR,EAAUO,EAAMC,OAAuB,IAAIP,KAAOF,QACxD,OAAuBU,EAAGA,IAACb,EAAwB,CAAEQ,QAAOJ,UAASF,cAAeQ,EAAKD,YAAW,EAEtGH,EAAmBQ,YAAclB,EACjC,MAAMmB,EAAuBpB,EAAO,iBAC9BqB,EAAiBL,EAAMM,YAC3B,CAACV,EAAOW,KACN,MAAMV,MAAEA,EAAKC,SAAEA,GAAaF,EACtBY,EAAUlB,EAAqBc,EAAsBP,GACrDY,EAAeC,EAAgBH,EAAcC,EAAQjB,eAC3D,OAAuBW,EAAAA,IAAIS,EAAM,CAAEZ,IAAKU,EAAcX,YAAW,IAGrEO,EAAeF,YAAcC,EAC7B,MAAMQ,EAAiB5B,EAAO,qBACxB6B,EAAiB,6BACjBC,EAAqBd,EAAMM,YAC/B,CAACV,EAAOW,KACN,MAAMV,MAAEA,EAAKC,SAAEA,KAAaiB,GAAanB,EACnCG,EAAMC,EAAMC,OAAO,MACnBQ,EAAeC,EAAgBH,EAAcR,GAC7CS,EAAUlB,EAAqBsB,EAAgBf,GAKrD,OAJAG,EAAMgB,WAAU,KACdR,EAAQf,QAAQwB,IAAIlB,EAAK,CAAEA,SAAQgB,IAC5B,KAAWP,EAAQf,QAAQyB,OAAOnB,EAAI,KAExBG,MAAIS,EAAM,CAAOE,CAACA,GAAiB,GAAMd,IAAKU,EAAcX,YAAW,IAkBlG,OAfAgB,EAAmBX,YAAcS,EAe1B,CACL,CAAEO,SAAUxB,EAAoBgB,KAAMN,EAAgBe,SAAUN,GAflE,SAAuBjB,GACrB,MAAMW,EAAUlB,EAAqBN,EAAO,qBAAsBa,GAWlE,OAViBG,EAAMqB,aAAY,KACjC,MAAMC,EAAiBd,EAAQjB,cAAcC,QAC7C,IAAK8B,EAAgB,MAAO,GAC5B,MAAMC,EAAeC,MAAMC,KAAKH,EAAeI,iBAAiB,IAAIb,OAKpE,OAJcW,MAAMC,KAAKjB,EAAQf,QAAQkC,UACdC,MACzB,CAACC,EAAGC,IAAMP,EAAaQ,QAAQF,EAAE9B,IAAIP,SAAW+B,EAAaQ,QAAQD,EAAE/B,IAAIP,UAE1D,GAClB,CAACgB,EAAQjB,cAAeiB,EAAQf,SAEvC,EAIIN,EAEJ,CChEA,IAAI6C,EAAmBC,EAAmBC,mBAAC,GAK3C,SAASC,EAAaC,GACpB,MAAMC,EAAYC,EAAgBC,WAACP,GACnC,OAAOI,GAAYC,GAAa,KAClC","x_google_ignoreList":[0,1]}