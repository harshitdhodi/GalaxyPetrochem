{"version":3,"file":"TextArea-BQkixvnv.js","sources":["../../node_modules/rc-textarea/es/calculateNodeHeight.js","../../node_modules/rc-textarea/es/ResizableTextArea.js","../../node_modules/rc-textarea/es/TextArea.js","../../node_modules/antd/es/input/style/textarea.js","../../node_modules/antd/es/input/TextArea.js"],"sourcesContent":["// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\n\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important;\\n  pointer-events: none !important;\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break', 'white-space'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nexport default function calculateAutoSizeStyle(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    // fix: A form field element should have an id or name attribute\n    // A form field element has neither an id nor a name attribute. This might prevent the browser from correctly autofilling the form.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\n    hiddenTextarea.setAttribute('name', 'hiddenTextarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n    paddingSize = _calculateNodeStyling.paddingSize,\n    borderSize = _calculateNodeStyling.borderSize,\n    boxSizing = _calculateNodeStyling.boxSizing,\n    sizingStyle = _calculateNodeStyling.sizingStyle;\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = undefined;\n  var maxHeight = undefined;\n  var overflowY;\n  var height = hiddenTextarea.scrollHeight;\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n  var style = {\n    height: height,\n    overflowY: overflowY,\n    resize: 'none'\n  };\n  if (minHeight) {\n    style.minHeight = minHeight;\n  }\n  if (maxHeight) {\n    style.maxHeight = maxHeight;\n  }\n  return style;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nimport calculateAutoSizeStyle from \"./calculateNodeHeight\";\nvar RESIZE_START = 0;\nvar RESIZE_MEASURING = 1;\nvar RESIZE_STABLE = 2;\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref = props,\n    prefixCls = _ref.prefixCls,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    autoSize = _ref.autoSize,\n    onResize = _ref.onResize,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    onChange = _ref.onChange,\n    onInternalAutoSize = _ref.onInternalAutoSize,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n\n  // =============================== Value ================================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: function postState(val) {\n        return val !== null && val !== void 0 ? val : '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedValue = _useMergedState2[0],\n    setMergedValue = _useMergedState2[1];\n  var onInternalChange = function onInternalChange(event) {\n    setMergedValue(event.target.value);\n    onChange === null || onChange === void 0 || onChange(event);\n  };\n\n  // ================================ Ref =================================\n  var textareaRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      textArea: textareaRef.current\n    };\n  });\n\n  // ============================== AutoSize ==============================\n  var _React$useMemo = React.useMemo(function () {\n      if (autoSize && _typeof(autoSize) === 'object') {\n        return [autoSize.minRows, autoSize.maxRows];\n      }\n      return [];\n    }, [autoSize]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    minRows = _React$useMemo2[0],\n    maxRows = _React$useMemo2[1];\n  var needAutoSize = !!autoSize;\n\n  // =============================== Scroll ===============================\n  // https://github.com/ant-design/ant-design/issues/21870\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\n    try {\n      // FF has bug with jump of scroll to top. We force back here.\n      if (document.activeElement === textareaRef.current) {\n        var _textareaRef$current = textareaRef.current,\n          selectionStart = _textareaRef$current.selectionStart,\n          selectionEnd = _textareaRef$current.selectionEnd,\n          scrollTop = _textareaRef$current.scrollTop;\n\n        // Fix Safari bug which not rollback when break line\n        // This makes Chinese IME can't input. Do not fix this\n        // const { value: tmpValue } = textareaRef.current;\n        // textareaRef.current.value = '';\n        // textareaRef.current.value = tmpValue;\n\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n        textareaRef.current.scrollTop = scrollTop;\n      }\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  };\n\n  // =============================== Resize ===============================\n  var _React$useState = React.useState(RESIZE_STABLE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    resizeState = _React$useState2[0],\n    setResizeState = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    autoSizeStyle = _React$useState4[0],\n    setAutoSizeStyle = _React$useState4[1];\n  var startResize = function startResize() {\n    setResizeState(RESIZE_START);\n    if (process.env.NODE_ENV === 'test') {\n      onInternalAutoSize === null || onInternalAutoSize === void 0 || onInternalAutoSize();\n    }\n  };\n\n  // Change to trigger resize measure\n  useLayoutEffect(function () {\n    if (needAutoSize) {\n      startResize();\n    }\n  }, [value, minRows, maxRows, needAutoSize]);\n  useLayoutEffect(function () {\n    if (resizeState === RESIZE_START) {\n      setResizeState(RESIZE_MEASURING);\n    } else if (resizeState === RESIZE_MEASURING) {\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows);\n\n      // Safari has bug that text will keep break line on text cut when it's prev is break line.\n      // ZombieJ: This not often happen. So we just skip it.\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\n      // const { value: tmpValue } = textareaRef.current;\n      // textareaRef.current.value = '';\n      // textareaRef.current.value = tmpValue;\n\n      // if (document.activeElement === textareaRef.current) {\n      //   textareaRef.current.scrollTop = scrollTop;\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n      // }\n\n      setResizeState(RESIZE_STABLE);\n      setAutoSizeStyle(textareaStyles);\n    } else {\n      fixFirefoxAutoScroll();\n    }\n  }, [resizeState]);\n\n  // We lock resize trigger by raf to avoid Safari warning\n  var resizeRafRef = React.useRef();\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(resizeRafRef.current);\n  };\n  var onInternalResize = function onInternalResize(size) {\n    if (resizeState === RESIZE_STABLE) {\n      onResize === null || onResize === void 0 || onResize(size);\n      if (autoSize) {\n        cleanRaf();\n        resizeRafRef.current = raf(function () {\n          startResize();\n        });\n      }\n    }\n  };\n  React.useEffect(function () {\n    return cleanRaf;\n  }, []);\n\n  // =============================== Render ===============================\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\n    mergedStyle.overflowY = 'hidden';\n    mergedStyle.overflowX = 'hidden';\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onInternalResize,\n    disabled: !(autoSize || onResize)\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    ref: textareaRef,\n    style: mergedStyle,\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\n    disabled: disabled,\n    value: mergedValue,\n    onChange: onInternalChange\n  })));\n});\nexport default ResizableTextArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\", \"onClear\", \"onPressEnter\", \"readOnly\", \"autoSize\", \"onKeyDown\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max;\n  var defaultValue = _ref.defaultValue,\n    customValue = _ref.value,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    allowClear = _ref.allowClear,\n    maxLength = _ref.maxLength,\n    onCompositionStart = _ref.onCompositionStart,\n    onCompositionEnd = _ref.onCompositionEnd,\n    suffix = _ref.suffix,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n    showCount = _ref.showCount,\n    count = _ref.count,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    hidden = _ref.hidden,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    onResize = _ref.onResize,\n    onClear = _ref.onClear,\n    onPressEnter = _ref.onPressEnter,\n    readOnly = _ref.readOnly,\n    autoSize = _ref.autoSize,\n    onKeyDown = _ref.onKeyDown,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useMergedState = useMergedState(defaultValue, {\n      value: customValue,\n      defaultValue: defaultValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    value = _useMergedState2[0],\n    setValue = _useMergedState2[1];\n  var formatValue = value === undefined || value === null ? '' : String(value);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var compositionRef = React.useRef(false);\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textareaResized = _React$useState4[0],\n    setTextareaResized = _React$useState4[1];\n\n  // =============================== Ref ================================\n  var holderRef = useRef(null);\n  var resizableTextAreaRef = useRef(null);\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n  useImperativeHandle(ref, function () {\n    var _holderRef$current;\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      },\n      nativeElement: ((_holderRef$current = holderRef.current) === null || _holderRef$current === void 0 ? void 0 : _holderRef$current.nativeElement) || getTextArea()\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]);\n\n  // =========================== Select Range ===========================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selection = _React$useState6[0],\n    setSelection = _React$useState6[1];\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]);\n\n  // ============================== Count ===============================\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength;\n\n  // Max length value\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax;\n\n  // ============================== Change ==============================\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  };\n\n  // =========================== Value Update ===========================\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  };\n\n  // ============================== Reset ===============================\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n  var suffixNode = suffix;\n  var dataCount;\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n    onResize === null || onResize === void 0 || onResize(size);\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n  var isPureTextArea = !autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    ref: holderRef,\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-count\"), showCount), \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden,\n    readOnly: readOnly,\n    onClear: onClear\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    autoSize: autoSize,\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef,\n    readOnly: readOnly\n  })));\n});\nexport default TextArea;","import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\nexport { initComponentToken, initInputToken };\nconst genTextAreaStyle = token => {\n  const {\n    componentCls,\n    paddingLG\n  } = token;\n  const textareaPrefixCls = `${componentCls}-textarea`;\n  return {\n    // Raw Textarea\n    [`textarea${componentCls}`]: {\n      maxWidth: '100%',\n      // prevent textarea resize from coming out of its container\n      height: 'auto',\n      minHeight: token.controlHeight,\n      lineHeight: token.lineHeight,\n      verticalAlign: 'bottom',\n      transition: `all ${token.motionDurationSlow}`,\n      resize: 'vertical',\n      [`&${componentCls}-mouse-active`]: {\n        transition: `all ${token.motionDurationSlow}, height 0s, width 0s`\n      }\n    },\n    // Wrapper for resize\n    [`${componentCls}-textarea-affix-wrapper-resize-dirty`]: {\n      width: 'auto'\n    },\n    [textareaPrefixCls]: {\n      position: 'relative',\n      '&-show-count': {\n        // https://github.com/ant-design/ant-design/issues/33049\n        [`> ${componentCls}`]: {\n          height: '100%'\n        },\n        [`${componentCls}-data-count`]: {\n          position: 'absolute',\n          bottom: token.calc(token.fontSize).mul(token.lineHeight).mul(-1).equal(),\n          insetInlineEnd: 0,\n          color: token.colorTextDescription,\n          whiteSpace: 'nowrap',\n          pointerEvents: 'none'\n        }\n      },\n      [`\n        &-allow-clear > ${componentCls},\n        &-affix-wrapper${textareaPrefixCls}-has-feedback ${componentCls}\n      `]: {\n        paddingInlineEnd: paddingLG\n      },\n      [`&-affix-wrapper${componentCls}-affix-wrapper`]: {\n        padding: 0,\n        [`> textarea${componentCls}`]: {\n          fontSize: 'inherit',\n          border: 'none',\n          outline: 'none',\n          background: 'transparent',\n          minHeight: token.calc(token.controlHeight).sub(token.calc(token.lineWidth).mul(2)).equal(),\n          '&:focus': {\n            boxShadow: 'none !important'\n          }\n        },\n        [`${componentCls}-suffix`]: {\n          margin: 0,\n          '> *:not(:last-child)': {\n            marginInline: 0\n          },\n          // Clear Icon\n          [`${componentCls}-clear-icon`]: {\n            position: 'absolute',\n            insetInlineEnd: token.paddingInline,\n            insetBlockStart: token.paddingXS\n          },\n          // Feedback Icon\n          [`${textareaPrefixCls}-suffix`]: {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.paddingInline,\n            bottom: 0,\n            zIndex: 1,\n            display: 'inline-flex',\n            alignItems: 'center',\n            margin: 'auto',\n            pointerEvents: 'none'\n          }\n        }\n      },\n      [`&-affix-wrapper${componentCls}-affix-wrapper-sm`]: {\n        [`${componentCls}-suffix`]: {\n          [`${componentCls}-clear-icon`]: {\n            insetInlineEnd: token.paddingInlineSM\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'TextArea'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return [genTextAreaStyle(inputToken)];\n}, initComponentToken, {\n  resetFont: false\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport RcTextArea from 'rc-textarea';\nimport getAllowClear from '../_util/getAllowClear';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { useComponentConfig } from '../config-provider/context';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport { useCompactItemContext } from '../space/Compact';\nimport { triggerFocus } from './Input';\nimport { useSharedStyle } from './style';\nimport useStyle from './style/textarea';\nconst TextArea = /*#__PURE__*/forwardRef((props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      bordered = true,\n      size: customizeSize,\n      disabled: customDisabled,\n      status: customStatus,\n      allowClear,\n      classNames: classes,\n      rootClassName,\n      className,\n      style,\n      styles,\n      variant: customVariant,\n      showCount,\n      onMouseDown,\n      onResize\n    } = props,\n    rest = __rest(props, [\"prefixCls\", \"bordered\", \"size\", \"disabled\", \"status\", \"allowClear\", \"classNames\", \"rootClassName\", \"className\", \"style\", \"styles\", \"variant\", \"showCount\", \"onMouseDown\", \"onResize\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      deprecated\n    } = devUseWarning('TextArea');\n    deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const {\n    getPrefixCls,\n    direction,\n    allowClear: contextAllowClear,\n    autoComplete: contextAutoComplete,\n    className: contextClassName,\n    style: contextStyle,\n    classNames: contextClassNames,\n    styles: contextStyles\n  } = useComponentConfig('textArea');\n  // =================== Disabled ===================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  // ==================== Status ====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Ref ======================\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => {\n    var _a;\n    return {\n      resizableTextArea: (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.resizableTextArea,\n      focus: option => {\n        var _a, _b;\n        triggerFocus((_b = (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.resizableTextArea) === null || _b === void 0 ? void 0 : _b.textArea, option);\n      },\n      blur: () => {\n        var _a;\n        return (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n  });\n  const prefixCls = getPrefixCls('input', customizePrefixCls);\n  // ==================== Style =====================\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapSharedCSSVar, hashId, cssVarCls] = useSharedStyle(prefixCls, rootClassName);\n  const [wrapCSSVar] = useStyle(prefixCls, rootCls);\n  // ================= Compact Item =================\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  // ===================== Size =====================\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  const [variant, enableVariantCls] = useVariant('textArea', customVariant, bordered);\n  const mergedAllowClear = getAllowClear(allowClear !== null && allowClear !== void 0 ? allowClear : contextAllowClear);\n  // ==================== Resize ====================\n  // https://github.com/ant-design/ant-design/issues/51594\n  const [isMouseDown, setIsMouseDown] = React.useState(false);\n  // When has wrapper, resize will make as dirty for `resize: both` style\n  const [resizeDirty, setResizeDirty] = React.useState(false);\n  const onInternalMouseDown = e => {\n    setIsMouseDown(true);\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(e);\n    const onMouseUp = () => {\n      setIsMouseDown(false);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mouseup', onMouseUp);\n  };\n  const onInternalResize = size => {\n    var _a, _b;\n    onResize === null || onResize === void 0 ? void 0 : onResize(size);\n    // Change to dirty since this maybe from the `resize: both` style\n    if (isMouseDown && typeof getComputedStyle === 'function') {\n      const ele = (_b = (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.nativeElement) === null || _b === void 0 ? void 0 : _b.querySelector('textarea');\n      if (ele && getComputedStyle(ele).resize === 'both') {\n        setResizeDirty(true);\n      }\n    }\n  };\n  // ==================== Render ====================\n  return wrapSharedCSSVar(wrapCSSVar(/*#__PURE__*/React.createElement(RcTextArea, Object.assign({\n    autoComplete: contextAutoComplete\n  }, rest, {\n    style: Object.assign(Object.assign({}, contextStyle), style),\n    styles: Object.assign(Object.assign({}, contextStyles), styles),\n    disabled: mergedDisabled,\n    allowClear: mergedAllowClear,\n    className: classNames(cssVarCls, rootCls, className, rootClassName, compactItemClassnames, contextClassName,\n    // Only for wrapper\n    resizeDirty && `${prefixCls}-textarea-affix-wrapper-resize-dirty`),\n    classNames: Object.assign(Object.assign(Object.assign({}, classes), contextClassNames), {\n      textarea: classNames({\n        [`${prefixCls}-sm`]: mergedSize === 'small',\n        [`${prefixCls}-lg`]: mergedSize === 'large'\n      }, hashId, classes === null || classes === void 0 ? void 0 : classes.textarea, contextClassNames.textarea, isMouseDown && `${prefixCls}-mouse-active`),\n      variant: classNames({\n        [`${prefixCls}-${variant}`]: enableVariantCls\n      }, getStatusClassNames(prefixCls, mergedStatus)),\n      affixWrapper: classNames(`${prefixCls}-textarea-affix-wrapper`, {\n        [`${prefixCls}-affix-wrapper-rtl`]: direction === 'rtl',\n        [`${prefixCls}-affix-wrapper-sm`]: mergedSize === 'small',\n        [`${prefixCls}-affix-wrapper-lg`]: mergedSize === 'large',\n        [`${prefixCls}-textarea-show-count`]: showCount || ((_a = props.count) === null || _a === void 0 ? void 0 : _a.show)\n      }, hashId)\n    }),\n    prefixCls: prefixCls,\n    suffix: hasFeedback && /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-textarea-suffix`\n    }, feedbackIcon),\n    showCount: showCount,\n    ref: innerRef,\n    onResize: onInternalResize,\n    onMouseDown: onInternalMouseDown\n  }))));\n});\nexport default TextArea;"],"names":["hiddenTextarea","SIZING_STYLE","computedStyleCache","calculateAutoSizeStyle","uiTextNode","useCache","arguments","length","undefined","minRows","maxRows","document","createElement","setAttribute","body","appendChild","getAttribute","removeAttribute","_calculateNodeStyling","node","nodeRef","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","nodeInfo","sizingStyle","map","name","concat","join","calculateNodeStyling","value","placeholder","overflowY","minHeight","maxHeight","height","scrollHeight","singleRowHeight","Math","max","min","resize","_excluded","ResizableTextArea","React.forwardRef","forwardRef","props","ref","_ref","prefixCls","defaultValue","autoSize","onResize","className","disabled","onChange","onInternalAutoSize","restProps","_objectWithoutProperties","_useMergedState","useMergedState","postState","val","_useMergedState2","_slicedToArray","mergedValue","setMergedValue","textareaRef","React.useRef","React.useImperativeHandle","useImperativeHandle","textArea","current","_React$useMemo","React.useMemo","_typeof","_React$useMemo2","needAutoSize","_React$useState","React.useState","_React$useState2","resizeState","setResizeState","_React$useState3","useState","_React$useState4","autoSizeStyle","setAutoSizeStyle","startResize","useLayoutEffect","textareaStyles","activeElement","_textareaRef$current","selectionStart","selectionEnd","scrollTop","setSelectionRange","e","fixFirefoxAutoScroll","resizeRafRef","cleanRaf","raf","cancel","React.useEffect","mergedAutoSizeStyle","mergedStyle","_objectSpread","overflowX","React.createElement","ResizeObserver","size","_extends","classNames","_defineProperty","event","target","TextArea","React","_countConfig$max","customValue","onFocus","onBlur","allowClear","maxLength","onCompositionStart","onCompositionEnd","suffix","_ref$prefixCls","showCount","count","hidden","styles","onClear","onPressEnter","readOnly","onKeyDown","rest","setValue","formatValue","String","focused","setFocused","compositionRef","useRef","textareaResized","setTextareaResized","holderRef","resizableTextAreaRef","getTextArea","_resizableTextAreaRef","focus","_holderRef$current","resizableTextArea","blur","nativeElement","useEffect","prev","_React$useState5","_React$useState6","selection","setSelection","_getTextArea","apply","_toConsumableArray","dataCount","countConfig","useCount","mergedMax","hasMaxLength","Number","valueLength","strategy","isOutOfRange","triggerChange","currentValue","cutValue","exceedFormatter","resolveOnChange","currentTarget","suffixNode","show","showFormatter","Fragment","clsx","isPureTextArea","BaseInput","handleReset","affixWrapper","dataAttrs","key","textarea","_getTextArea2","genTextAreaStyle","token","componentCls","paddingLG","textareaPrefixCls","maxWidth","controlHeight","lineHeight","verticalAlign","transition","motionDurationSlow","width","position","bottom","calc","fontSize","mul","equal","insetInlineEnd","color","colorTextDescription","whiteSpace","pointerEvents","paddingInlineEnd","padding","border","outline","background","sub","lineWidth","boxShadow","margin","marginInline","paddingInline","insetBlockStart","paddingXS","top","zIndex","display","alignItems","paddingInlineSM","useStyle","genStyleHooks","inputToken","mergeToken","initInputToken","initComponentToken","resetFont","_a","customizePrefixCls","bordered","customizeSize","customDisabled","status","customStatus","classes","rootClassName","variant","customVariant","onMouseDown","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","getPrefixCls","direction","contextAllowClear","autoComplete","contextAutoComplete","contextClassName","contextStyle","contextClassNames","contextStyles","useComponentConfig","React.useContext","useContext","DisabledContext","mergedDisabled","contextStatus","hasFeedback","feedbackIcon","FormItemInputContext","mergedStatus","getMergedStatus","innerRef","option","_b","triggerFocus","rootCls","useCSSVarCls","wrapSharedCSSVar","hashId","cssVarCls","useSharedStyle","wrapCSSVar","compactSize","compactItemClassnames","useCompactItemContext","mergedSize","useSize","ctx","enableVariantCls","useVariant","mergedAllowClear","getAllowClear","isMouseDown","setIsMouseDown","resizeDirty","setResizeDirty","RcTextArea","assign","getStatusClassNames","ele","querySelector","onMouseUp","removeEventListener","addEventListener"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}