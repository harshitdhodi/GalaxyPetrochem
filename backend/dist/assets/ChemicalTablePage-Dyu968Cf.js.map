{"version":3,"file":"ChemicalTablePage-Dyu968Cf.js","sources":["../../node_modules/lucide-react/dist/esm/icons/user-plus.js","../../src/chemical/EmailForm.jsx","../../src/chemical/chemicalTable/AddSupplierModel.jsx","../../src/chemical/chemicalTable/SupplierTable.jsx","../../src/chemical/chemicalTable/CustomerTable.jsx","../../src/chemical/ChemicalTablePage.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserPlus = createLucideIcon(\"UserPlus\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"8\", y2: \"14\", key: \"1bvyxn\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"11\", y2: \"11\", key: \"1shjgl\" }]\n]);\n\nexport { UserPlus as default };\n//# sourceMappingURL=user-plus.js.map\n","import React, { useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Mail } from 'lucide-react';\r\nimport { useGetAllTemplatesQuery } from '@/slice/template/emailTemplate';\r\n\r\nconst EmailForm = ({ selectedSupplier, supplier, email, name,type, chemicalName }) => {\r\n  console.log(\"Type:\", type);\r\n  console.log(\"Supplier Array:\", supplier);\r\n  console.log(\"Supplier Email:\", supplier[0]?.email);\r\n\r\n  console.log(\"Condition Check:\", type === \"Customer\", supplier.length > 0);\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const { data: templateResponse, isLoading: templatesLoading, error: templatesError } = useGetAllTemplatesQuery();\r\n  const templates = templateResponse?.data || [];\r\n  const recipientEmail = type === \"Customer\" && Array.isArray(supplier) && supplier[0]?.email\r\n  ? supplier[0].email\r\n  : email;\r\n  console.log(\"Recipient Email:\", recipientEmail);\r\n  \r\n  useEffect(() => {\r\n    console.log(\"Supplier updated:\", supplier);\r\n  }, [supplier]);\r\n  \r\n  const handleSendEmail = async () => {\r\n    try {\r\n      setIsLoading(true); \r\n      \r\n      const emailData = {\r\n        subject: subject,\r\n        message: message,\r\n        recipients: Array.isArray(recipientEmail) ? recipientEmail : [recipientEmail],\r\n        chemicalNames: Array.isArray(chemicalName) ? chemicalName : [chemicalName]\r\n      };\r\n\r\n      const response = await fetch('/api/chemicalMail/send', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(emailData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to send email');\r\n      }\r\n\r\n      alert('Email sent successfully!');\r\n      setMessage('');\r\n      setSubject('');\r\n      \r\n    } catch (error) {\r\n      console.log('Error sending email:', error);\r\n      alert('Failed to send email: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTemplateChange = (templateId) => {\r\n    const template = templates.find((t) => t._id === templateId);\r\n    setSelectedTemplate(template);\r\n    setMessage(template?.body || '');\r\n    setSubject(template?.subject || '');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog>\r\n        <DialogTrigger asChild>\r\n          <Button variant=\"secondary\">\r\n            <Mail className=\"w-4 h-4 mr-2\" />\r\n            Send Email ({selectedSupplier.length})\r\n          </Button>\r\n        </DialogTrigger>\r\n        <DialogContent className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>Send Email to Selected Suppliers</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-4 \">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-sm font-medium\">Selected Suppliers</h3>\r\n                <div className=\"p-2 border rounded-lg max-h-[100px] overflow-y-auto\">\r\n                  {recipientEmail}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"mb-2 text-sm font-medium\">Selected Chemicals</h3>\r\n                <div className=\"p-2 border rounded-lg max-h-[100px] overflow-y-auto\">\r\n                  <div className=\"text-sm py-1\">{chemicalName}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Select onValueChange={handleTemplateChange}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select email template\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {templatesLoading ? (\r\n                  <SelectItem value=\"\" disabled>Loading...</SelectItem>\r\n                ) : templatesError ? (\r\n                  <SelectItem value=\"\" disabled>Error loading templates</SelectItem>\r\n                ) : (\r\n                  templates.map((template) => (\r\n                    <SelectItem key={template._id} value={template._id}>\r\n                      {template.name}\r\n                    </SelectItem>\r\n                  ))\r\n                )}\r\n              </SelectContent>\r\n            </Select>\r\n            <Input \r\n              placeholder=\"Subject\" \r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n            <div className=\"max-h-[300px] overflow-y-auto\">\r\n              <ReactQuill\r\n                value={message}\r\n                onChange={setMessage}\r\n                placeholder=\"Write your message here...\"\r\n                theme=\"snow\"\r\n                className=\"bg-white rounded-lg\"\r\n              />\r\n            </div>\r\n            <Button\r\n              className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n              onClick={handleSendEmail}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Sending...' : 'Send Email'}\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dialog, DialogContent, DialogTitle, DialogHeader } from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useAddChemicalIdsToSupplierMutation } from \"@/slice/supplierSlice/chemicalBySupplier\";\r\nimport { useAddChemicalToCustomerMutation } from \"@/slice/customerSlice/customerApiSlice\";\r\n\r\nconst AddSupplierModal = ({ refetch, open, onClose, chemicalName,fetchChemicals, chemicalId, supplier, onAddSupplier = [] }) => {\r\n  const [supplierSearch, setSupplierSearch] = useState(\"\");\r\n  const [selectedSupplier, setSelectedSupplier] = useState(null);\r\n\r\n  // Reset the input field when the modal opens\r\n  useEffect(() => {\r\n    if (open) {\r\n      setSupplierSearch(\"\");\r\n      setSelectedSupplier(null);\r\n    }\r\n  }, [open]);\r\n\r\n  // Conditionally choose the mutation hook based on the supplier value\r\n  const [addChemical, { isLoading }] = supplier === 'Supplier'\r\n    ? useAddChemicalIdsToSupplierMutation()\r\n    : useAddChemicalToCustomerMutation();\r\n\r\n  // Filter suggestions based on the input\r\n  const filteredSuppliers = Array.isArray(onAddSupplier)\r\n    ? onAddSupplier.filter((sup) =>\r\n      sup.name?.toLowerCase().includes(supplierSearch.toLowerCase())\r\n    )\r\n    : [];\r\n\r\n  const handleAddSupplier = async () => {\r\n    if (!selectedSupplier) {\r\n      console.log(\"No supplier or customer selected\");\r\n      return;\r\n    }\r\n    try {\r\n      let response;\r\n      if (supplier === 'Supplier') {\r\n        response = await addChemical({\r\n          chemical_ids: [chemicalName._id],\r\n          supplierId: selectedSupplier._id,\r\n        }).unwrap();\r\n      } else {\r\n        response = await addChemical({\r\n          chemicalId: [chemicalName._id],\r\n          customerId: selectedSupplier._id,\r\n        }).unwrap();\r\n      }\r\n\r\n      console.log(`${supplier} ${selectedSupplier.name} added to ${chemicalName.name}`);\r\n      await refetch();\r\n      fetchChemicals();\r\n      onClose();\r\n      \r\n    } catch (error) {\r\n      console.error(`Failed to add ${supplier.toLowerCase()}:`, error);\r\n      alert(`Failed to add ${supplier.toLowerCase()}. Please try again.`);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (sup) => {\r\n    setSelectedSupplier(sup);\r\n    setSupplierSearch(sup.name);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={(isOpen) => !isOpen && onClose()}>\r\n      <DialogContent className=\"max-w-lg p-6\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-lg font-semibold text-[#3b1f91]\">\r\n            Add {supplier} for {chemicalName.name}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"mt-4\">\r\n          <Input\r\n            placeholder={`Search ${supplier}`}\r\n            value={supplierSearch}\r\n            onChange={(e) => setSupplierSearch(e.target.value)}\r\n            className=\"w-full mb-2\"\r\n          />\r\n          {supplierSearch && !selectedSupplier && (\r\n            <div className=\"bg-white border border-gray-300 rounded shadow max-h-40 overflow-y-auto\">\r\n              {filteredSuppliers.length > 0 ? (\r\n                filteredSuppliers.map((sup) => (\r\n                  <div\r\n                    key={sup.id}\r\n                    onClick={() => handleSuggestionClick(sup)}\r\n                    className=\"p-2 cursor-pointer hover:bg-gray-100\"\r\n                  >\r\n                    {sup.name}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"p-2 text-gray-500\">No matching {supplier.toLowerCase()}s</div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"flex justify-between mt-4\">\r\n            <Button\r\n              onClick={handleAddSupplier}\r\n              className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n              disabled={isLoading || !selectedSupplier}\r\n            >\r\n              {isLoading ? \"Adding...\" : \"+ Add\"}\r\n            </Button>\r\n            <Button onClick={onClose} className=\"bg-red-600 hover:bg-red-700\">\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddSupplierModal;\r\n","import { useState, useContext } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { ChevronLeft, ChevronRight, Plus, Trash2 } from \"lucide-react\";\r\nimport SupplierForm from \"../SupplierForm\";\r\nimport EmailForm from \"../EmailForm\";\r\nimport { ChemicalContext } from \"../ChemicalContext\";\r\nimport AddSupplierModal from \"./AddSupplierModel\";\r\nimport {\r\n  useDeleteChemicalFromSupplierMutation,\r\n  useGetSuppliersByChemicalIdQuery,\r\n  useGetSuppliersQuery,\r\n} from \"@/slice/supplierSlice/SupplierSlice\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from \"@/components/ui/alert-dialog\";\r\n\r\nexport default function SuppliersTable({ chemicalName, supplier,fetchChemicals, chemicalId }) {\r\n  console.log(chemicalId)\r\n  const [selectedSuppliers, setSelectedSuppliers] = useState([]);\r\n  const [showAddSupplierModal, setShowAddSupplierModal] = useState(false);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [emailFilter, setEmailFilter] = useState(\"\");\r\n  const [mobileFilter, setMobileFilter] = useState(\"\");\r\n  const [countryFilter, setCountryFilter] = useState(\"\");\r\n  const [supplierToDelete, setSupplierToDelete] = useState(null);\r\n\r\n  const { selectedItem } = useContext(ChemicalContext);\r\n\r\n  const { data: suppliers = [], isLoading, error ,refetch } = useGetSuppliersByChemicalIdQuery(chemicalId);\r\n  const { data: allSupplier } = useGetSuppliersQuery();\r\n  const [deleteChemical, { isLoading: isDeleting }] = useDeleteChemicalFromSupplierMutation();\r\n\r\n  const countries = [\"Pakistan\", \"India\", \"USA\", \"Canada\", \"Australia\"];\r\n\r\n  const filteredSuppliers = suppliers.filter((supplier) =>\r\n    supplier.name.toLowerCase().includes(nameFilter.toLowerCase()) &&\r\n    supplier.email.toLowerCase().includes(emailFilter.toLowerCase()) &&\r\n    supplier.mobile.toLowerCase().includes(mobileFilter.toLowerCase()) &&\r\n    supplier.country.toLowerCase().includes(countryFilter.toLowerCase())\r\n  );\r\n\r\n  const handleSupplierSelect = (supplierId) => {\r\n    setSelectedSuppliers((prev) =>\r\n      prev.includes(supplierId)\r\n        ? prev.filter((id) => id !== supplierId)\r\n        : [...prev, supplierId]\r\n    );\r\n  };\r\n\r\n  const handleDeleteClick = (supplierId) => {\r\n    setSupplierToDelete(supplierId);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (supplierToDelete) {\r\n      try {\r\n        await deleteChemical({ supplierId: supplierToDelete, chemicalId }).unwrap();\r\n        refetch();\r\n    \r\n      } catch (error) {\r\n        console.error('Failed to delete chemical:', error);\r\n        alert('Failed to delete chemical');\r\n      }\r\n    }\r\n    setSupplierToDelete(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4\">\r\n      {/* Table Header and Add Supplier Modal */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <h1 className=\"text-xl font-semibold text-[#3b1f91]\">\r\n          {supplier} for {selectedItem?.name || \"Chemical\"}\r\n        </h1>\r\n        <Button\r\n          className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n          onClick={() => setShowAddSupplierModal(true)}\r\n        >\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Supplier\r\n        </Button>\r\n        {chemicalName && (\r\n          <AddSupplierModal\r\n            open={showAddSupplierModal}\r\n            onClose={() => setShowAddSupplierModal(false)}\r\n            chemicalName={selectedItem || \"Unknown Chemical\"}\r\n            supplier=\"Supplier\"\r\n            onAddSupplier={allSupplier}\r\n            chemicalId={chemicalId}\r\n            refetch={refetch}\r\n            fetchChemicals={fetchChemicals}\r\n          />\r\n        )}\r\n      </div>\r\n      {selectedSuppliers.length > 0 && (\r\n        <div className=\"p-4 border-b\">\r\n          <EmailForm\r\n            selectedSupplier={selectedSuppliers}\r\n            supplier={suppliers}\r\n            email={suppliers\r\n              .filter((s) => selectedSuppliers.includes(s._id))\r\n              .map((s) => s.email)\r\n              .join(\", \")}\r\n\r\n            name={suppliers\r\n                .filter((s) => selectedSuppliers.includes(s._id))\r\n                .map((s) => s.name)\r\n                .join(\", \")}\r\n            chemicalName ={selectedItem?.name }\r\n          />\r\n        </div>\r\n      )}\r\n      {/* Table for Suppliers */}\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"w-12\"></TableHead>\r\n            <TableHead>Name</TableHead>\r\n            <TableHead>Email</TableHead>\r\n            <TableHead>Mobile</TableHead>\r\n            {/* <TableHead>Country</TableHead> */}\r\n            <TableHead>Action</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {isLoading && (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-8\">\r\n                Loading suppliers...\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n          {error && (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-8 text-red-500/60\">\r\n                No suppliers available.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n          {!isLoading &&\r\n            !error &&\r\n            filteredSuppliers.map((supplier) => (\r\n              <TableRow key={supplier._id}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selectedSuppliers.includes(supplier._id)}\r\n                    onCheckedChange={() => handleSupplierSelect(supplier._id)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{supplier.name}</TableCell>\r\n                <TableCell>{supplier.email}</TableCell>\r\n                <TableCell>{supplier.mobile}</TableCell>\r\n                {/* <TableCell>{supplier.country}</TableCell> */}\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    className=\"text-red-500 hover:text-red-600\"\r\n                    onClick={() => handleDeleteClick(supplier._id)}\r\n                    disabled={isDeleting}\r\n                  >\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <AlertDialog open={!!supplierToDelete} onOpenChange={() => setSupplierToDelete(null)}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              This action cannot be undone. This will permanently delete the supplier from this chemical.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction onClick={handleConfirmDelete}>Delete</AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  );\r\n}","import { useState, useContext } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { ChevronLeft, ChevronRight, Plus, Trash2 } from \"lucide-react\";\r\nimport EmailForm from \"../EmailForm\";\r\nimport { ChemicalContext } from \"../ChemicalContext\";\r\nimport AddSupplierModal from \"./AddSupplierModel\";  // Adjust modal import\r\nimport { useGetCustomersQuery, useGetCustomersByChemicalIdQuery, useRemoveChemicalFromCustomerMutation } from \"@/slice/customerSlice/customerApiSlice\";\r\n\r\nexport default function CustomersTable({ chemicalName, supplier }) {\r\n\r\n    const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n    const { selectedItem } = useContext(ChemicalContext);\r\n    const [showAddCustomerModal, setShowAddCustomerModal] = useState(false);\r\n\r\n    const [nameFilter, setNameFilter] = useState(\"\");\r\n    const [emailFilter, setEmailFilter] = useState(\"\");\r\n    const [mobileFilter, setMobileFilter] = useState(\"\");\r\n    const [countryFilter, setCountryFilter] = useState(\"\");\r\n\r\n    const { data: allCustomers = [] } = useGetCustomersQuery();\r\n    const { data: customers = [], isLoading, error, refetch } = useGetCustomersByChemicalIdQuery(selectedItem._id);\r\n    const [removeChemicalFromCustomer] = useRemoveChemicalFromCustomerMutation();\r\n\r\n    const filteredCustomers = customers.filter((customer) =>\r\n        customer.name.toLowerCase().includes(nameFilter.toLowerCase()) &&\r\n        customer.email.toLowerCase().includes(emailFilter.toLowerCase()) &&\r\n        customer.mobile.toLowerCase().includes(mobileFilter.toLowerCase()) &&\r\n        customer.country.toLowerCase().includes(countryFilter.toLowerCase())\r\n    );\r\n\r\n    const handleCustomerSelect = (customerId) => {\r\n        setSelectedCustomers((prev) =>\r\n            prev.includes(customerId)\r\n                ? prev.filter((id) => id !== customerId)\r\n                : [...prev, customerId]\r\n        );\r\n    };\r\n    console.log(selectedCustomers)\r\n    const handleDeleteCustomer = async (customerId) => {\r\n        try {\r\n            await removeChemicalFromCustomer({\r\n                customerId,\r\n                chemicalId: selectedItem._id\r\n            });\r\n        } catch (error) {\r\n            console.error('Failed to remove customer:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <h1 className=\"text-xl font-semibold text-[#3b1f91]\">\r\n                    {supplier} for {selectedItem.name}\r\n                </h1>\r\n                <Button\r\n                    className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n                    onClick={() => setShowAddCustomerModal(true)}\r\n                >\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Add Customer\r\n                </Button>\r\n            </div>\r\n\r\n            <AddSupplierModal\r\n                open={showAddCustomerModal}\r\n                onClose={() => setShowAddCustomerModal(false)}\r\n                chemicalName={selectedItem}\r\n                supplier=\"Customer\"\r\n                onAddSupplier={allCustomers}\r\n                refetch={refetch}\r\n            />\r\n\r\n            {selectedCustomers.length > 0 && (\r\n                <div className=\"p-4 border-b\">\r\n                    <EmailForm selectedSupplier={selectedCustomers} supplier={customers} chemicalName={chemicalName.name} type={supplier} />\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"border rounded-lg\">\r\n                <Table>\r\n                    <TableHeader>\r\n                        <TableRow>\r\n                            <TableHead className=\"w-12\"></TableHead>\r\n                            <TableHead>Name</TableHead>\r\n                            <TableHead>Email</TableHead>\r\n                            <TableHead>Mobile</TableHead>\r\n                            <TableHead>Country</TableHead>\r\n                            <TableHead>Action</TableHead>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {isLoading && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={6} className=\"text-center py-8\">\r\n                                    Loading customers...\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {error && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={6} className=\"text-center py-8 text-red-500\">\r\n                                    Error loading customers.\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {!isLoading && !error && filteredCustomers.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n                                    No Data Found\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {!isLoading &&\r\n                            !error &&\r\n                            filteredCustomers.map((customer) => (\r\n                                <TableRow key={customer.id}>\r\n                                    <TableCell>\r\n                                        <Checkbox\r\n                                            checked={selectedCustomers.includes(customer.id)}\r\n                                            onCheckedChange={() => handleCustomerSelect(customer.id)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{customer.name}</TableCell>\r\n                                    <TableCell>{customer.email}</TableCell>\r\n                                    <TableCell>{customer.mobile}</TableCell>\r\n                                    <TableCell>{customer.country}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            variant=\"ghost\"\r\n                                            size=\"icon\"\r\n                                            className=\"text-red-500 hover:text-red-600\"\r\n                                            onClick={() => handleDeleteCustomer(customer._id)}\r\n                                        >\r\n                                            <Trash2 className=\"w-4 h-4\" />\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <div className=\"flex items-center justify-between border-t p-4\">\r\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n                        <span>Items per page: 10</span>\r\n                        <span>1 - {filteredCustomers.length} of {filteredCustomers.length}</span>\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                        <Button variant=\"outline\" size=\"icon\" disabled>\r\n                            <ChevronLeft className=\"w-4 h-4\" />\r\n                        </Button>\r\n                        <Button variant=\"outline\" size=\"icon\" disabled>\r\n                            <ChevronRight className=\"w-4 h-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState ,useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { MoreVertical, Edit, UserPlus, Trash2, PlusCircle } from 'lucide-react';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport SuppliersTable from \"./chemicalTable/SupplierTable\";\r\nimport CustomerTable from \"./chemicalTable/CustomerTable\";\r\nimport AddSupplierModal from \"./chemicalTable/AddSupplierModel\";\r\nimport { ChemicalProvider, useChemical } from \"./ChemicalContext\";\r\nimport axios from \"axios\";\r\nimport { useGetSupplierCountByChemicalIdQuery, useGetSuppliersQuery } from \"@/slice/supplierSlice/SupplierSlice\";\r\nimport { useGetCustomersQuery } from \"@/slice/customerSlice/customerApiSlice\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport default function ChemicalTable() {\r\n  const { selectedChemicalName, setChemicalName } = useChemical(); // Get and set chemical name from context\r\n  const [showSuppliers, setShowSuppliers] = useState(false);\r\n  const [showCustomers, setShowCustomers] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [casFilter, setCasFilter] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(20);\r\n  const [showAddSupplierModal, setShowAddSupplierModal] = useState(false);\r\n  const [selectedChemical, setSelectedChemical] = useState(null);\r\n  const [showAddCustomerModal, setShowAddCustomerModal] = useState(false);\r\n  const [modalType, setModalType] = useState(null); // New state to track modal type\r\n  const [chemicals, setChemicals] = useState([]);\r\n  const { data: suppliers = [], isLoading, error } = useGetSuppliersQuery()\r\n  const { data: customers = [], isLoading2, error2 } = useGetCustomersQuery()\r\n  const supplierCountQuery = useGetSupplierCountByChemicalIdQuery(selectedItem?._id);\r\nconst navigate = useNavigate();\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchChemicals();\r\n  }, [refreshTrigger]);\r\n\r\n  const fetchChemicals = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/chemical/get\");\r\n      setChemicals(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching chemicals:\", error);\r\n    }\r\n  };\r\n \r\n\r\n  const filteredChemicals = chemicals.filter((chemical) => {\r\n    const chemicalName = chemical.name || \"\"; // Fallback to empty string if undefined\r\n    const casNumber = chemical.casNumber || \"\"; // Fallback to empty string if undefined\r\n  \r\n    return (\r\n      chemicalName.toLowerCase().includes(nameFilter.toLowerCase()) &&\r\n      casNumber.includes(casFilter)\r\n    );\r\n  });\r\n\r\n  const paginatedData = filteredChemicals.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage * itemsPerPage < filteredChemicals.length) {\r\n      setCurrentPage((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleItemsPerPageChange = (value) => {\r\n    setItemsPerPage(Number(value));\r\n    setCurrentPage(1); // Reset to first page on items change\r\n  };\r\n\r\n  const handleEdit = (chemical) => {\r\n    console.log(\"Edit\", chemical);\r\n    navigate(`/edit-chemical-form/${chemical._id}`)\r\n    // Implement edit functionality\r\n  };\r\n  const handleAddSupplierClick = (chemical) => {\r\n    setSelectedItem(chemical);\r\n    setShowAddSupplierModal(true);\r\n    setModalType('supplier');\r\n  };\r\n\r\n  const handleAddCustomer = (chemical) => {\r\n    setSelectedItem(chemical);\r\n    setShowAddCustomerModal(true);\r\n    setModalType('customer');\r\n  };\r\n\r\n  const handleDelete = async (chemical) => {\r\n  try {\r\n    const confirmResult = await Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action cannot be undone!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'Cancel',\r\n    });\r\n\r\n    if (confirmResult.isConfirmed) {\r\n      const response = await axios.delete(`/api/chemical/delete?id=${chemical._id}`);\r\n\r\n    if (response.data.success || response.data.message === \"Chemical deleted successfully\") {\r\n      // Update the state to remove the deleted chemical\r\n      setChemicals((prevChemicals) =>\r\n        prevChemicals.filter((c) => c._id !== chemical._id)\r\n      );\r\n\r\n      // Re-fetch the chemicals after successful deletion\r\n      await fetchChemicals();\r\n\r\n      await Swal.fire({\r\n        title: 'Deleted!',\r\n        text: 'The chemical has been deleted.',\r\n        icon: 'success',\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      });\r\n    } else {\r\n      throw new Error(response.data.message || 'Failed to delete the chemical');\r\n    }\r\n  } else {\r\n    Swal.fire({\r\n      title: 'Cancelled',\r\n      text: 'Your chemical is safe!',\r\n      icon: 'info',\r\n      timer: 1500,\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n} catch (error) {\r\n  console.error(\"Error deleting chemical:\", error);\r\n  if (error.message === \"Chemical deleted successfully\") {\r\n    // This is actually a success case\r\n    Swal.fire({\r\n      title: 'Deleted!',\r\n      text: 'The chemical has been deleted.',\r\n      icon: 'success',\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    });\r\n  } else {\r\n    Swal.fire({\r\n      title: 'Error!',\r\n      text: error.message || 'An error occurred while deleting the chemical.',\r\n      icon: 'error',\r\n      confirmButtonText: 'Ok',\r\n    });\r\n  }\r\n}\r\n};\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex justify-between items-center mb-5\">\r\n        <div>\r\n          <h2 className=\"text-lg font-bold text-[#3b1f91]\">Chemical List</h2>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/chemical-form\">\r\n          <Button className=\"bg-[#3b1f91] hover:bg-[#2a1664]\">\r\n            <PlusCircle /> Add Chemical\r\n          </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-5\">\r\n        <hr />\r\n      </div>\r\n      <div className=\"rounded-md border\">\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead className=\"w-[50px]\"></TableHead>\r\n              <TableHead>Name</TableHead>\r\n              <TableHead>CAS Number</TableHead>\r\n              <TableHead>Molecular Formula</TableHead>\r\n              <TableHead>Suppliers</TableHead>\r\n              <TableHead>Customers</TableHead>\r\n              <TableHead>Unit Name</TableHead>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableHead className=\"w-[50px]\"></TableHead>\r\n              <TableHead>\r\n                <Input\r\n                  placeholder=\"Filter by Name\"\r\n                  value={nameFilter}\r\n                  onChange={(e) => setNameFilter(e.target.value)}\r\n                />\r\n              </TableHead>\r\n              <TableHead>\r\n                <Input\r\n                  placeholder=\"Filter by CAS Number\"\r\n                  value={casFilter}\r\n                  onChange={(e) => setCasFilter(e.target.value)}\r\n                />\r\n              </TableHead>\r\n              <TableHead></TableHead>\r\n              <TableHead></TableHead>\r\n              <TableHead></TableHead>\r\n              <TableHead></TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {paginatedData.map((chemical) => (\r\n              <TableRow key={chemical.id}>\r\n                <TableCell>\r\n                  <DropdownMenu>\r\n                    <DropdownMenuTrigger asChild>\r\n                      <button className=\"p-3\">\r\n                        <MoreVertical className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </DropdownMenuTrigger>\r\n                    <DropdownMenuContent>\r\n                      <DropdownMenuItem onClick={() => handleEdit(chemical)}>\r\n                        <Edit className=\"mr-2 h-4 w-4\" />\r\n                        Edit\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => handleAddSupplierClick(chemical)}\r\n                      >\r\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\r\n                        Add Supplier\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => handleAddCustomer(chemical)}\r\n                      >\r\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\r\n                        Add Customer\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem onClick={() => handleDelete(chemical)}>\r\n                        <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                        Delete\r\n                      </DropdownMenuItem>\r\n                    </DropdownMenuContent>\r\n                  </DropdownMenu>\r\n                </TableCell>\r\n                <TableCell>{chemical.name}</TableCell>\r\n                <TableCell>{chemical.cas_number}</TableCell>\r\n                <TableCell>{chemical.molecular_formula}</TableCell>\r\n               \r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"default\"\r\n                    className=\"bg-[#3b1f91] hover:bg-[#3b1f91]\"\r\n                    onClick={() => {\r\n                      setSelectedItem(chemical);\r\n                      setShowSuppliers(true);\r\n                    }}\r\n                  >\r\n                     Suppliers ({chemical.supplierCount})\r\n             \r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"default\"\r\n                    className=\"bg-[#3b1f91] hover:bg-[#3b1f91]\"\r\n                    onClick={() => {\r\n                      setSelectedItem(chemical);\r\n                      setShowCustomers(true);\r\n                    }}\r\n                  >\r\n                    Customers({chemical.customerCount})\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell>{chemical.unit}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          {selectedItem && (\r\n            <AddSupplierModal\r\n              open={modalType === 'supplier' ? showAddSupplierModal : showAddCustomerModal}\r\n              onClose={() => {\r\n                if (modalType === 'supplier') {\r\n                  setShowAddSupplierModal(false);\r\n                } else {\r\n                  setShowAddCustomerModal(false);\r\n                }\r\n                setModalType(null);\r\n                setRefreshTrigger(prev => prev + 1);\r\n                fetchChemicals();\r\n              }}\r\n              chemicalName={selectedItem.name}\r\n              supplier={modalType === 'supplier' ? 'Supplier' : 'Customer'}\r\n              onAddSupplier={modalType === 'supplier' ? suppliers : customers}\r\n              chemicalId={selectedItem._id}\r\n              fetchChemicals={fetchChemicals}\r\n            />\r\n          )}\r\n\r\n\r\n\r\n        </Table>\r\n      </div>\r\n\r\n\r\n      {/* pegination section  */}\r\n      <div className=\"flex items-center justify-between space-x-2 py-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <p className=\"text-sm font-medium\">Items per page:</p>\r\n          <Select defaultValue={itemsPerPage.toString()} onValueChange={handleItemsPerPageChange}>\r\n            <SelectTrigger className=\"w-[70px]\">\r\n              <SelectValue placeholder={itemsPerPage.toString()} />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"10\">10</SelectItem>\r\n              <SelectItem value=\"20\">20</SelectItem>\r\n              <SelectItem value=\"30\">30</SelectItem>\r\n              <SelectItem value=\"40\">40</SelectItem>\r\n              <SelectItem value=\"50\">50</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n\r\n          <div className=\"text-sm font-medium\">\r\n            {`${(currentPage - 1) * itemsPerPage + 1} - ${Math.min(\r\n              currentPage * itemsPerPage,\r\n              filteredChemicals.length\r\n            )} of ${filteredChemicals.length}`}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={handlePreviousPage}\r\n            disabled={currentPage === 1}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"icon\"\r\n            onClick={handleNextPage}\r\n            disabled={currentPage * itemsPerPage >= filteredChemicals.length}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ChemicalProvider selectedItem={selectedItem}>\r\n      {selectedItem && (\r\n        <>\r\n        <Dialog open={showSuppliers} onOpenChange={setShowSuppliers}>\r\n          <DialogContent className=\"max-w-6xl\">\r\n            <SuppliersTable \r\n              chemicalName={selectedItem} \r\n              chemicalId={selectedItem._id} \r\n              supplier=\"Supplier\"\r\n              fetchChemicals={fetchChemicals}\r\n            />\r\n          </DialogContent>\r\n        </Dialog><Dialog open={showCustomers} onOpenChange={setShowCustomers}>\r\n            <DialogContent className=\"max-w-6xl\">\r\n              <CustomerTable \r\n                selectedItems={selectedItem} \r\n                supplier=\"Customer\" \r\n                chemicalName={selectedItem} \r\n                chemicalId={selectedItem._id}\r\n                onUpdate={() => {\r\n                  fetchChemicals();\r\n                  setRefreshTrigger(prev => prev + 1);\r\n                }}\r\n              />\r\n            </DialogContent>\r\n          </Dialog></>\r\n      )}\r\n      </ChemicalProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":["UserPlus","createLucideIcon","d","key","cx","cy","r","x1","x2","y1","y2","EmailForm","selectedSupplier","supplier","email","name","type","chemicalName","message","setMessage","useState","subject","setSubject","isLoading","setIsLoading","selectedTemplate","setSelectedTemplate","data","templateResponse","templatesLoading","error","templatesError","useGetAllTemplatesQuery","templates","recipientEmail","Array","isArray","useEffect","jsx","children","jsxs","Dialog","DialogTrigger","asChild","Button","variant","Mail","className","length","DialogContent","DialogHeader","DialogTitle","Select","onValueChange","templateId","template","find","t","_id","body","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","value","disabled","map","Input","onChange","e","target","ReactQuill","theme","onClick","async","emailData","recipients","chemicalNames","response","fetch","method","headers","JSON","stringify","json","ok","Error","alert","AddSupplierModal","refetch","open","onClose","fetchChemicals","chemicalId","onAddSupplier","supplierSearch","setSupplierSearch","setSelectedSupplier","addChemical","useAddChemicalIdsToSupplierMutation","useAddChemicalToCustomerMutation","filteredSuppliers","filter","sup","toLowerCase","includes","onOpenChange","isOpen","handleSuggestionClick","id","chemical_ids","supplierId","unwrap","customerId","SuppliersTable","selectedSuppliers","setSelectedSuppliers","showAddSupplierModal","setShowAddSupplierModal","nameFilter","setNameFilter","emailFilter","setEmailFilter","mobileFilter","setMobileFilter","countryFilter","setCountryFilter","supplierToDelete","setSupplierToDelete","selectedItem","useContext","ChemicalContext","suppliers","useGetSuppliersByChemicalIdQuery","allSupplier","useGetSuppliersQuery","deleteChemical","isDeleting","useDeleteChemicalFromSupplierMutation","mobile","country","Plus","s","join","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","colSpan","Checkbox","checked","onCheckedChange","handleSupplierSelect","prev","size","handleDeleteClick","Trash2","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","CustomersTable","selectedCustomers","setSelectedCustomers","showAddCustomerModal","setShowAddCustomerModal","allCustomers","useGetCustomersQuery","customers","useGetCustomersByChemicalIdQuery","removeChemicalFromCustomer","useRemoveChemicalFromCustomerMutation","filteredCustomers","customer","handleCustomerSelect","handleDeleteCustomer","ChevronLeft","ChevronRight","ChemicalTable","selectedChemicalName","setChemicalName","useChemical","showSuppliers","setShowSuppliers","showCustomers","setShowCustomers","setSelectedItem","casFilter","setCasFilter","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","selectedChemical","setSelectedChemical","modalType","setModalType","chemicals","setChemicals","isLoading2","error2","useGetSupplierCountByChemicalIdQuery","navigate","useNavigate","refreshTrigger","setRefreshTrigger","axios","get","filteredChemicals","chemical","casNumber","paginatedData","slice","Link","to","PlusCircle","DropdownMenu","DropdownMenuTrigger","MoreVertical","DropdownMenuContent","DropdownMenuItem","handleEdit","Edit","handleAddSupplierClick","handleAddCustomer","Swal","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","delete","success","prevChemicals","c","timer","showConfirmButton","handleDelete","cas_number","molecular_formula","supplierCount","customerCount","unit","defaultValue","toString","Number","Math","min","ChemicalProvider","Fragment","CustomerTable","selectedItems","onUpdate"],"mappings":";;;;;;GASA,MAAMA,GAAWC,EAAiB,WAAY,CAC5C,CAAC,OAAQ,CAAEC,EAAG,4CAA6CC,IAAK,WAChE,CAAC,SAAU,CAAEC,GAAI,IAAKC,GAAI,IAAKC,EAAG,IAAKH,IAAK,UAC5C,CAAC,OAAQ,CAAEI,GAAI,KAAMC,GAAI,KAAMC,GAAI,IAAKC,GAAI,KAAMP,IAAK,WACvD,CAAC,OAAQ,CAAEI,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMP,IAAK,aCHpDQ,GAAY,EAAGC,mBAAkBC,WAAUC,QAAOC,OAAKC,OAAMC,mBAOjE,MAAOC,EAASC,GAAcC,EAAAA,SAAS,KAChCC,EAASC,GAAcF,EAAAA,SAAS,KAChCG,EAAWC,GAAgBJ,EAAAA,UAAS,IACpCK,EAAkBC,GAAuBN,EAAAA,SAAS,OACjDO,KAAMC,EAAkBL,UAAWM,EAAkBC,MAAOC,GAAmBC,IACjFC,EAAYL,GAAkBD,MAAQ,GACtCO,EAA0B,aAATlB,GAAuBmB,MAAMC,QAAQvB,IAAaA,EAAS,IAAIC,MACpFD,EAAS,GAAGC,MACZA,EAGFuB,EAAAA,WAAU,KACiC,GACxC,CAACxB,IA+CF,OAAAyB,EAAAA,IAAC,MACC,CAAAC,SAAAC,EAAAA,KAACC,EACC,CAAAF,SAAA,CAAAD,EAAAA,IAACI,GAAcC,SAAO,EACpBJ,SAACC,EAAAA,KAAAI,EAAA,CAAOC,QAAQ,YACdN,SAAA,CAACD,EAAAA,IAAAQ,EAAA,CAAKC,UAAU,iBAAiB,eACpBnC,EAAiBoC,OAAO,SAGzCR,EAAAA,KAACS,EAAc,CAAAF,UAAU,gDACvBR,SAAA,CAAAD,MAACY,EACC,CAAAX,SAAAD,EAAAA,IAACa,EAAY,CAAAZ,SAAA,uCAEfC,EAAAA,KAAC,MAAI,CAAAO,UAAU,cACbR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,yBACbR,SAAA,CAAAC,OAAC,MACC,CAAAD,SAAA,CAACD,EAAAA,IAAA,KAAA,CAAGS,UAAU,2BAA2BR,SAAkB,uBAC1DD,EAAAA,IAAA,MAAA,CAAIS,UAAU,sDACZR,SACHL,cAED,MACC,CAAAK,SAAA,CAACD,EAAAA,IAAA,KAAA,CAAGS,UAAU,2BAA2BR,SAAkB,uBAC3DD,EAAAA,IAAC,OAAIS,UAAU,sDACbR,eAAC,MAAI,CAAAQ,UAAU,eAAgBR,SAAAtB,YAIrCuB,EAAAA,KAACY,EAAO,CAAAC,cAnCYC,IAC5B,MAAMC,EAAWtB,EAAUuB,MAAMC,GAAMA,EAAEC,MAAQJ,IACjD5B,EAAoB6B,GACTpC,EAAAoC,GAAUI,MAAQ,IAClBrC,EAAAiC,GAAUlC,SAAW,GAAE,EAgCxBkB,SAAA,CAAAD,MAACsB,EACC,CAAArB,SAAAD,EAAAA,IAACuB,EAAY,CAAAC,YAAY,4BAE1BxB,MAAAyB,EAAA,CACExB,SACCV,EAAAS,EAAAA,IAAC0B,GAAWC,MAAM,GAAGC,UAAQ,EAAC3B,wBAC5BR,EACDO,MAAA0B,EAAA,CAAWC,MAAM,GAAGC,UAAQ,EAAC3B,SAAA,4BAE9BN,EAAUkC,KAAKZ,GACZjB,EAAAA,IAAA0B,EAAA,CAA8BC,MAAOV,EAASG,IAC5CnB,SAASgB,EAAAxC,MADKwC,EAASG,YAOlCpB,EAAAA,IAAC8B,EAAA,CACCN,YAAY,UACZG,MAAO5C,EACPgD,SAAWC,GAAMhD,EAAWgD,EAAEC,OAAON,SAEvC3B,EAAAA,IAAC,MAAI,CAAAS,UAAU,gCACbR,SAAAD,EAAAA,IAACkC,EAAA,CACCP,MAAO/C,EACPmD,SAAUlD,EACV2C,YAAY,6BACZW,MAAM,OACN1B,UAAU,0BAGdT,EAAAA,IAACM,EAAA,CACCG,UAAU,mCACV2B,QA1GYC,UAClB,IACFnD,GAAa,GAEb,MAAMoD,EAAY,CAChBvD,UACAH,UACA2D,WAAY1C,MAAMC,QAAQF,GAAkBA,EAAiB,CAACA,GAC9D4C,cAAe3C,MAAMC,QAAQnB,GAAgBA,EAAe,CAACA,IAGzD8D,QAAiBC,MAAM,yBAA0B,CACrDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBvB,KAAMwB,KAAKC,UAAUR,KAGjBjD,QAAaoD,EAASM,OAExB,IAACN,EAASO,GACZ,MAAM,IAAIC,MAAM5D,EAAKT,SAAW,wBAGlCsE,MAAM,4BACNrE,EAAW,IACXG,EAAW,UAEJQ,GAED0D,MAAA,yBAA2B1D,EAAMZ,QAAO,CAC9C,QACAM,GAAa,EAAK,GA0EV0C,SAAU3C,EAETgB,WAAY,aAAe,yBAKtC,EC3IEkD,GAAmB,EAAGC,UAASC,OAAMC,UAAS3E,eAAa4E,iBAAgBC,aAAYjF,WAAUkF,gBAAgB,OACrH,MAAOC,EAAgBC,GAAqB7E,EAAAA,SAAS,KAC9CR,EAAkBsF,GAAuB9E,EAAAA,SAAS,MAGzDiB,EAAAA,WAAU,KACJsD,IACFM,EAAkB,IAClBC,EAAoB,MAAI,GAEzB,CAACP,IAGE,MAACQ,GAAa5E,UAAEA,IAA4B,aAAbV,EACjCuF,IACAC,IAGEC,EAAoBnE,MAAMC,QAAQ2D,GACpCA,EAAcQ,QAAQC,GACtBA,EAAIzF,MAAM0F,cAAcC,SAASV,EAAeS,iBAEhD,GAqCJ,OACGnE,EAAAA,IAAAG,EAAA,CAAOkD,OAAYgB,aAAeC,IAAYA,GAAUhB,IACvDrD,SAACC,OAAAS,EAAA,CAAcF,UAAU,eACvBR,SAAA,CAAAD,MAACY,EACC,CAAAX,SAAAC,EAAAA,KAACW,EAAY,CAAAJ,UAAU,uCAAuCR,SAAA,CAAA,OACvD1B,EAAS,QAAMI,EAAaF,UAGrCyB,EAAAA,KAAC,MAAI,CAAAO,UAAU,OACbR,SAAA,CAAAD,EAAAA,IAAC8B,EAAA,CACCN,YAAa,UAAUjD,IACvBoD,MAAO+B,EACP3B,SAAWC,GAAM2B,EAAkB3B,EAAEC,OAAON,OAC5ClB,UAAU,gBAEXiD,IAAmBpF,GAClB0B,EAAAA,IAAC,MAAI,CAAAS,UAAU,0EACZR,SAAA+D,EAAkBtD,OAAS,EAC1BsD,EAAkBnC,KAAKqC,GACrBlE,EAAAA,IAAC,MAAA,CAECoC,QAAS,IA1BG,CAAC8B,IAC7BN,EAAoBM,GACpBP,EAAkBO,EAAIzF,KAAI,EAwBK8F,CAAsBL,GACrCzD,UAAU,uCAETR,SAAIiE,EAAAzF,MAJAyF,EAAIM,MAQZtE,EAAAA,KAAA,MAAA,CAAIO,UAAU,oBAAoBR,SAAA,CAAA,eAAa1B,EAAS4F,cAAc,SAI7EjE,EAAAA,KAAC,MAAI,CAAAO,UAAU,4BACbR,SAAA,CAAAD,EAAAA,IAACM,EAAA,CACC8B,QArEcC,UACxB,GAAK/D,EAID,IACE,IAAAmE,EAEFA,EADe,aAAblE,QACesF,EAAY,CAC3BY,aAAc,CAAC9F,EAAayC,KAC5BsD,WAAYpG,EAAiB8C,MAC5BuD,eAEcd,EAAY,CAC3BL,WAAY,CAAC7E,EAAayC,KAC1BwD,WAAYtG,EAAiB8C,MAC5BuD,eAICvB,IACSG,IACPD,UAED9D,GAEP0D,MAAM,iBAAiB3E,EAAS4F,mCAAkC,GA4C1D1D,UAAU,mCACVmB,SAAU3C,IAAcX,EAEvB2B,WAAY,YAAc,gBAE5BK,EAAO,CAAA8B,QAASkB,EAAS7C,UAAU,8BAA8BR,SAElE,qBAIR,EChFJ,SAAwB4E,IAAelG,aAAEA,EAAAJ,SAAcA,EAASgF,eAAAA,EAAAC,WAAgBA,IAE9E,MAAOsB,EAAmBC,GAAwBjG,EAAAA,SAAS,KACpDkG,EAAsBC,GAA2BnG,EAAAA,UAAS,IAC1DoG,EAAYC,GAAiBrG,EAAAA,SAAS,KACtCsG,EAAaC,GAAkBvG,EAAAA,SAAS,KACxCwG,EAAcC,GAAmBzG,EAAAA,SAAS,KAC1C0G,EAAeC,GAAoB3G,EAAAA,SAAS,KAC5C4G,EAAkBC,GAAuB7G,EAAAA,SAAS,OAEnD8G,aAAEA,GAAiBC,EAAAA,WAAWC,IAE5BzG,KAAM0G,EAAY,GAAC9G,UAAGA,QAAWO,EAAO4D,QAAAA,GAAY4C,EAAiCxC,IACrFnE,KAAM4G,GAAgBC,KACvBC,GAAkBlH,UAAWmH,IAAgBC,IAI9CrC,EAAoB+B,EAAU9B,QAAQ1F,GAC1CA,EAASE,KAAK0F,cAAcC,SAASc,EAAWf,gBAChD5F,EAASC,MAAM2F,cAAcC,SAASgB,EAAYjB,gBAClD5F,EAAS+H,OAAOnC,cAAcC,SAASkB,EAAanB,gBACpD5F,EAASgI,QAAQpC,cAAcC,SAASoB,EAAcrB,iBA8BtD,OAAAjE,EAAAA,KAAC,MAAI,CAAAO,UAAU,gBAEbR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,oCACbR,SAAA,CAACC,EAAAA,KAAA,KAAA,CAAGO,UAAU,uCACXR,SAAA,CAAA1B,EAAS,QAAMqH,GAAcnH,MAAQ,cAExCyB,EAAAA,KAACI,EAAA,CACCG,UAAU,mCACV2B,QAAS,IAAM6C,GAAwB,GAEvChF,SAAA,CAACD,EAAAA,IAAAwG,EAAA,CAAK/F,UAAU,iBAAiB,kBAGlC9B,GACCqB,EAAAA,IAACmD,GAAA,CACCE,KAAM2B,EACN1B,QAAS,IAAM2B,GAAwB,GACvCtG,aAAciH,GAAgB,mBAC9BrH,SAAS,WACTkF,cAAewC,EACfzC,aACAJ,UACAG,sBAILuB,EAAkBpE,OAAS,GACzBV,EAAAA,IAAA,MAAA,CAAIS,UAAU,eACbR,SAAAD,EAAAA,IAAC3B,GAAA,CACCC,iBAAkBwG,EAClBvG,SAAUwH,EACVvH,MAAOuH,EACJ9B,QAAQwC,GAAM3B,EAAkBV,SAASqC,EAAErF,OAC3CS,KAAK4E,GAAMA,EAAEjI,QACbkI,KAAK,MAERjI,KAAMsH,EACD9B,QAAQwC,GAAM3B,EAAkBV,SAASqC,EAAErF,OAC3CS,KAAK4E,GAAMA,EAAEhI,OACbiI,KAAK,MACV/H,aAAeiH,GAAcnH,gBAKlCkI,EACC,CAAA1G,SAAA,CAACD,EAAAA,IAAA4G,EAAA,CACC3G,gBAAC4G,EACC,CAAA5G,SAAA,CAACD,EAAAA,IAAA8G,EAAA,CAAUrG,UAAU,SACrBT,EAAAA,IAAC8G,GAAU7G,SAAI,SACfD,EAAAA,IAAC8G,GAAU7G,SAAK,UAChBD,EAAAA,IAAC8G,GAAU7G,SAAM,WAEjBD,EAAAA,IAAC8G,GAAU7G,SAAM,uBAGpB8G,EACE,CAAA9G,SAAA,CACChB,GAAAe,EAAAA,IAAC6G,GACC5G,SAACD,EAAAA,IAAAgH,EAAA,CAAUC,QAAS,EAAGxG,UAAU,mBAAmBR,SAAA,2BAKvDT,GACEQ,EAAAA,IAAA6G,EAAA,CACC5G,SAACD,EAAAA,IAAAgH,EAAA,CAAUC,QAAS,EAAGxG,UAAU,mCAAmCR,SAAA,+BAKtEhB,IACCO,GACDwE,EAAkBnC,KAAKtD,GACrB2B,EAAAA,KAAC2G,EACC,CAAA5G,SAAA,CAAAD,MAACgH,EACC,CAAA/G,SAAAD,EAAAA,IAACkH,EAAA,CACCC,QAASrC,EAAkBV,SAAS7F,EAAS6C,KAC7CgG,gBAAiB,KAAMC,OAzGX3C,EAyGgCnG,EAAS6C,SAxGrE2D,GAAsBuC,GACpBA,EAAKlD,SAASM,GACV4C,EAAKrD,QAAQO,GAAOA,IAAOE,IAC3B,IAAI4C,EAAM5C,KAJW,IAACA,CAyG4C,MAG3D1E,EAAAA,IAAAgH,EAAA,CAAW/G,SAAA1B,EAASE,OACpBuB,EAAAA,IAAAgH,EAAA,CAAW/G,SAAA1B,EAASC,QACpBwB,EAAAA,IAAAgH,EAAA,CAAW/G,SAAA1B,EAAS+H,eAEpBU,EACC,CAAA/G,SAAAD,EAAAA,IAACM,EAAA,CACCC,QAAQ,QACRgH,KAAK,OACL9G,UAAU,kCACV2B,QAAS,KAAMoF,OA7GN9C,EA6GwBnG,EAAS6C,SA5G1DuE,EAAoBjB,GADI,IAACA,CA6GoC,EAC7C9C,SAAUwE,EAEVnG,SAAAD,EAAAA,IAACyH,EAAO,CAAAhH,UAAU,kBAnBTlC,EAAS6C,aA0B/BpB,EAAAA,IAAA0H,EAAA,CAAYrE,OAAQqC,EAAkBrB,aAAc,IAAMsB,EAAoB,MAC7E1F,SAAAC,EAAAA,KAACyH,EACC,CAAA1H,SAAA,CAAAC,OAAC0H,EACC,CAAA3H,SAAA,CAAAD,EAAAA,IAAC6H,GAAiB5H,SAAa,kBAC/BD,EAAAA,IAAC8H,GAAuB7H,SAExB,0GAED8H,EACC,CAAA9H,SAAA,CAAAD,EAAAA,IAACgI,GAAkB/H,SAAM,WACxBD,EAAAA,IAAAiI,GAAA,CAAkB7F,QA7HDC,UAC1B,GAAIqD,EACE,UACIS,EAAe,CAAEzB,WAAYgB,EAAkBlC,eAAcmB,SAC3DvB,UAED5D,GAEP0D,MAAM,4BAA2B,CAGrCyC,EAAoB,KAAI,EAkHiC1F,SAAM,qBAMnE,CCvLA,SAAwBiI,IAAevJ,aAAEA,EAAcJ,SAAAA,IAEnD,MAAO4J,EAAmBC,GAAwBtJ,EAAAA,SAAS,KACrD8G,aAAEA,GAAiBC,EAAAA,WAAWC,IAC7BuC,EAAsBC,GAA2BxJ,EAAAA,UAAS,IAE1DoG,EAAYC,GAAiBrG,EAAAA,SAAS,KACtCsG,EAAaC,GAAkBvG,EAAAA,SAAS,KACxCwG,EAAcC,GAAmBzG,EAAAA,SAAS,KAC1C0G,EAAeC,GAAoB3G,EAAAA,SAAS,KAE3CO,KAAMkJ,EAAe,IAAOC,KAC5BnJ,KAAMoJ,EAAY,GAACxJ,UAAGA,EAAWO,MAAAA,EAAA4D,QAAOA,GAAYsF,EAAiC9C,EAAaxE,MACnGuH,GAA8BC,IAE/BC,EAAoBJ,EAAUxE,QAAQ6E,GACxCA,EAASrK,KAAK0F,cAAcC,SAASc,EAAWf,gBAChD2E,EAAStK,MAAM2F,cAAcC,SAASgB,EAAYjB,gBAClD2E,EAASxC,OAAOnC,cAAcC,SAASkB,EAAanB,gBACpD2E,EAASvC,QAAQpC,cAAcC,SAASoB,EAAcrB,iBAuBtD,OAAAjE,EAAAA,KAAC,MAAI,CAAAO,UAAU,gBACXR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,oCACXR,SAAA,CAACC,EAAAA,KAAA,KAAA,CAAGO,UAAU,uCACTR,SAAA,CAAA1B,EAAS,QAAMqH,EAAanH,QAEjCyB,EAAAA,KAACI,EAAA,CACGG,UAAU,mCACV2B,QAAS,IAAMkG,GAAwB,GAEvCrI,SAAA,CAACD,EAAAA,IAAAwG,EAAA,CAAK/F,UAAU,iBAAiB,qBAKzCT,EAAAA,IAACmD,GAAA,CACGE,KAAMgF,EACN/E,QAAS,IAAMgF,GAAwB,GACvC3J,aAAciH,EACdrH,SAAS,WACTkF,cAAe8E,EACfnF,YAGH+E,EAAkBzH,OAAS,SACvB,MAAI,CAAAD,UAAU,eACXR,SAACD,EAAAA,IAAA3B,GAAA,CAAUC,iBAAkB6J,EAAmB5J,SAAUkK,EAAW9J,aAAcA,EAAaF,KAAMC,KAAMH,MAIpH2B,EAAAA,KAAC,MAAI,CAAAO,UAAU,oBACXR,SAAA,CAAAC,OAACyG,EACG,CAAA1G,SAAA,CAACD,EAAAA,IAAA4G,EAAA,CACG3G,gBAAC4G,EACG,CAAA5G,SAAA,CAACD,EAAAA,IAAA8G,EAAA,CAAUrG,UAAU,SACrBT,EAAAA,IAAC8G,GAAU7G,SAAI,SACfD,EAAAA,IAAC8G,GAAU7G,SAAK,UAChBD,EAAAA,IAAC8G,GAAU7G,SAAM,WACjBD,EAAAA,IAAC8G,GAAU7G,SAAO,YAClBD,EAAAA,IAAC8G,GAAU7G,SAAM,uBAGxB8G,EACI,CAAA9G,SAAA,CACGhB,GAAAe,EAAAA,IAAC6G,GACG5G,SAACD,EAAAA,IAAAgH,EAAA,CAAUC,QAAS,EAAGxG,UAAU,mBAAmBR,SAAA,2BAK3DT,GACIQ,EAAAA,IAAA6G,EAAA,CACG5G,SAACD,EAAAA,IAAAgH,EAAA,CAAUC,QAAS,EAAGxG,UAAU,gCAAgCR,SAAA,gCAKvEhB,IAAcO,GAAsC,IAA7BqJ,EAAkBnI,QACvCV,EAAAA,IAAC6G,EACG,CAAA5G,SAAAD,EAAAA,IAACgH,GAAUC,QAAS,EAAGxG,UAAU,yCAAyCR,8BAKhFhB,IACGO,GACDqJ,EAAkBhH,KAAKiH,GACnB5I,EAAAA,KAAC2G,EACG,CAAA5G,SAAA,CAAAD,MAACgH,EACG,CAAA/G,SAAAD,EAAAA,IAACkH,EAAA,CACGC,QAASgB,EAAkB/D,SAAS0E,EAAStE,IAC7C4C,gBAAiB,KAAM2B,OA1FjCnE,EA0FsDkE,EAAStE,QAzFzF4D,GAAsBd,GAClBA,EAAKlD,SAASQ,GACR0C,EAAKrD,QAAQO,GAAOA,IAAOI,IAC3B,IAAI0C,EAAM1C,KAJK,IAACA,CA0FiE,MAG/D5E,EAAAA,IAACgH,EAAW,CAAA/G,SAAA6I,EAASrK,OACrBuB,EAAAA,IAACgH,EAAW,CAAA/G,SAAA6I,EAAStK,QACrBwB,EAAAA,IAACgH,EAAW,CAAA/G,SAAA6I,EAASxC,SACrBtG,EAAAA,IAACgH,EAAW,CAAA/G,SAAA6I,EAASvC,gBACpBS,EACG,CAAA/G,SAAAD,EAAAA,IAACM,EAAA,CACGC,QAAQ,QACRgH,KAAK,OACL9G,UAAU,kCACV2B,QAAS,IA9FpBC,OAAOuC,IAC5B,UACM+D,EAA2B,CAC7B/D,aACApB,WAAYoC,EAAaxE,YAExB5B,GAC4C,GAuFFwJ,CAAqBF,EAAS1H,KAE7CnB,SAAAD,EAAAA,IAACyH,EAAO,CAAAhH,UAAU,kBAlBfqI,EAAStE,YA0BxCtE,EAAAA,KAAC,MAAI,CAAAO,UAAU,iDACXR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,wDACXR,SAAA,CAAAD,EAAAA,IAAC,QAAKC,SAAkB,8BACvB,OAAK,CAAAA,SAAA,CAAA,OAAK4I,EAAkBnI,OAAO,OAAKmI,EAAkBnI,aAE/DR,EAAAA,KAAC,MAAI,CAAAO,UAAU,aACXR,SAAA,CAACD,EAAAA,IAAAM,EAAA,CAAOC,QAAQ,UAAUgH,KAAK,OAAO3F,UAAQ,EAC1C3B,SAACD,EAAAA,IAAAiJ,GAAA,CAAYxI,UAAU,cAE1BT,EAAAA,IAAAM,EAAA,CAAOC,QAAQ,UAAUgH,KAAK,OAAO3F,UAAQ,EAC1C3B,SAACD,EAAAA,IAAAkJ,GAAA,CAAazI,UAAU,yBAOpD,CC9HA,SAAwB0I,KACtB,MAAMC,qBAAEA,EAAAC,gBAAsBA,GAAoBC,KAC3CC,EAAeC,GAAoB1K,EAAAA,UAAS,IAC5C2K,EAAeC,GAAoB5K,EAAAA,UAAS,IAC5C8G,EAAc+D,GAAmB7K,EAAAA,SAAS,OAC1CoG,EAAYC,GAAiBrG,EAAAA,SAAS,KACtC8K,EAAWC,GAAgB/K,EAAAA,SAAS,KACpCgL,EAAaC,GAAkBjL,EAAAA,SAAS,IACxCkL,EAAcC,GAAmBnL,EAAAA,SAAS,KAC1CkG,EAAsBC,GAA2BnG,EAAAA,UAAS,IAC1DoL,EAAkBC,GAAuBrL,EAAAA,SAAS,OAClDuJ,EAAsBC,GAA2BxJ,EAAAA,UAAS,IAC1DsL,EAAWC,IAAgBvL,EAAAA,SAAS,OACpCwL,GAAWC,IAAgBzL,EAAAA,SAAS,KACnCO,KAAM0G,GAAY,aAAI9G,GAAWO,MAAAA,IAAU0G,KAC3C7G,KAAMoJ,GAAY,cAAI+B,GAAYC,OAAAA,IAAWjC,IAC1BkC,EAAqC9E,GAAcxE,KAChF,MAAMuJ,GAAWC,KACRC,GAAgBC,IAAqBhM,EAAAA,SAAS,GAErDiB,EAAAA,WAAU,KACOwD,IAAA,GACd,CAACsH,KAEJ,MAAMtH,GAAiBlB,UACjB,IACF,MAAMI,QAAiBsI,GAAMC,IAAI,qBACjCT,GAAa9H,EAASpD,YACfG,GACyC,GAK9CyL,GAAoBX,GAAUrG,QAAQiH,IACpC,MAAAvM,EAAeuM,EAASzM,MAAQ,GAChC0M,EAAYD,EAASC,WAAa,GAGtC,OAAAxM,EAAawF,cAAcC,SAASc,EAAWf,gBAC/CgH,EAAU/G,SAASwF,EAAS,IAI1BwB,GAAgBH,GAAkBI,OACrCvB,EAAc,GAAKE,EACpBF,EAAcE,GAyGd,OAAA9J,EAAAA,KAAC,MAAI,CAAAO,UAAU,SACbR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,yCACbR,SAAA,CAAAD,EAAAA,IAAC,OACCC,SAACD,EAAAA,IAAA,KAAA,CAAGS,UAAU,mCAAmCR,6BAEnDD,EAAAA,IAAC,OACCC,SAACD,EAAAA,IAAAsL,EAAA,CAAKC,GAAG,iBACTtL,SAAAC,EAAAA,KAACI,EAAO,CAAAG,UAAU,kCAChBR,SAAA,CAAAD,EAAAA,IAACwL,GAAW,IAAE,gCAKnB,MAAI,CAAA/K,UAAU,OACbR,SAAAD,MAAC,MAAG,KAELA,MAAA,MAAA,CAAIS,UAAU,oBACbR,gBAAC0G,EACC,CAAA1G,SAAA,CAAAC,OAAC0G,EACC,CAAA3G,SAAA,CAAAC,OAAC2G,EACC,CAAA5G,SAAA,CAACD,EAAAA,IAAA8G,EAAA,CAAUrG,UAAU,aACrBT,EAAAA,IAAC8G,GAAU7G,SAAI,SACfD,EAAAA,IAAC8G,GAAU7G,SAAU,eACrBD,EAAAA,IAAC8G,GAAU7G,SAAiB,sBAC5BD,EAAAA,IAAC8G,GAAU7G,SAAS,cACpBD,EAAAA,IAAC8G,GAAU7G,SAAS,cACpBD,EAAAA,IAAC8G,GAAU7G,SAAS,wBAErB4G,EACC,CAAA5G,SAAA,CAACD,EAAAA,IAAA8G,EAAA,CAAUrG,UAAU,mBACpBqG,EACC,CAAA7G,SAAAD,EAAAA,IAAC8B,EAAA,CACCN,YAAY,iBACZG,MAAOuD,EACPnD,SAAWC,GAAMmD,EAAcnD,EAAEC,OAAON,iBAG3CmF,EACC,CAAA7G,SAAAD,EAAAA,IAAC8B,EAAA,CACCN,YAAY,uBACZG,MAAOiI,EACP7H,SAAWC,GAAM6H,EAAa7H,EAAEC,OAAON,iBAG1CmF,EAAU,UACVA,EAAU,UACVA,EAAU,UACVA,EAAU,CAAA,eAGdC,EACE,CAAA9G,SAAAmL,GAAcvJ,KAAKqJ,UACjBrE,EACC,CAAA5G,SAAA,CAACD,EAAAA,IAAAgH,EAAA,CACC/G,gBAACwL,EACC,CAAAxL,SAAA,CAAAD,EAAAA,IAAC0L,EAAoB,CAAArL,SAAO,EAC1BJ,SAAAD,EAAAA,IAAC,SAAO,CAAAS,UAAU,MAChBR,SAAAD,EAAAA,IAAC2L,GAAa,CAAAlL,UAAU,uBAG3BmL,EACC,CAAA3L,SAAA,CAAAC,EAAAA,KAAC2L,EAAiB,CAAAzJ,QAAS,IAlJ5B,CAAC8I,IAETP,GAAA,uBAAuBO,EAAS9J,MAAK,EAgJK0K,CAAWZ,GAC1CjL,SAAA,CAACD,EAAAA,IAAA+L,EAAA,CAAKtL,UAAU,iBAAiB,UAGnCP,EAAAA,KAAC2L,EAAA,CACCzJ,QAAS,IAlJA,CAAC8I,IAC9BvB,EAAgBuB,GAChBjG,GAAwB,GACxBoF,GAAa,WAAU,EA+IY2B,CAAuBd,GAEtCjL,SAAA,CAACD,EAAAA,IAAAtC,GAAA,CAAS+C,UAAU,iBAAiB,kBAGvCP,EAAAA,KAAC2L,EAAA,CACCzJ,QAAS,IAlJL,CAAC8I,IACzBvB,EAAgBuB,GAChB5C,GAAwB,GACxB+B,GAAa,WAAU,EA+IY4B,CAAkBf,GAEjCjL,SAAA,CAACD,EAAAA,IAAAtC,GAAA,CAAS+C,UAAU,iBAAiB,yBAGtCoL,EAAiB,CAAAzJ,QAAS,IAjJ1BC,OAAO6I,IACxB,IAUF,UAT4BgB,EAAKC,KAAK,CACpCC,MAAO,gBACPC,KAAM,gCACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,kBACnBC,iBAAkB,YAGFC,YAAa,CAC7B,MAAMjK,QAAiBsI,GAAM4B,OAAO,2BAA2BzB,EAAS9J,OAE1E,IAAIqB,EAASpD,KAAKuN,SAAqC,kCAA1BnK,EAASpD,KAAKT,QAiBzC,MAAM,IAAIqE,MAAMR,EAASpD,KAAKT,SAAW,iCAfzC2L,IAAcsC,GACZA,EAAc5I,QAAQ6I,GAAMA,EAAE1L,MAAQ8J,EAAS9J,cAI3CmC,WAEA2I,EAAKC,KAAK,CACdC,MAAO,WACPC,KAAM,iCACNC,KAAM,UACNS,MAAO,IACPC,mBAAmB,GAIvB,MAEAd,EAAKC,KAAK,CACRC,MAAO,YACPC,KAAM,yBACNC,KAAM,OACNS,MAAO,KACPC,mBAAmB,UAGhBxN,GAEe,kCAAlBA,EAAMZ,QAERsN,EAAKC,KAAK,CACRC,MAAO,WACPC,KAAM,iCACNC,KAAM,UACNS,MAAO,IACPC,mBAAmB,IAGrBd,EAAKC,KAAK,CACRC,MAAO,SACPC,KAAM7M,EAAMZ,SAAW,iDACvB0N,KAAM,QACNE,kBAAmB,MAEvB,GAqFqDS,CAAa/B,GAC5CjL,SAAA,CAACD,EAAAA,IAAAyH,EAAA,CAAOhH,UAAU,iBAAiB,oBAM3CT,EAAAA,IAACgH,EAAW,CAAA/G,SAAAiL,EAASzM,OACrBuB,EAAAA,IAACgH,EAAW,CAAA/G,SAAAiL,EAASgC,aACrBlN,EAAAA,IAACgH,EAAW,CAAA/G,SAAAiL,EAASiC,0BAEpBnG,EACC,CAAA/G,SAAAC,EAAAA,KAACI,EAAA,CACCC,QAAQ,UACRE,UAAU,kCACV2B,QAAS,KACPuH,EAAgBuB,GAChB1B,GAAiB,EAAI,EAExBvJ,SAAA,CAAA,cACciL,EAASkC,cAAc,eAIvCpG,EACC,CAAA/G,SAAAC,EAAAA,KAACI,EAAA,CACCC,QAAQ,UACRE,UAAU,kCACV2B,QAAS,KACPuH,EAAgBuB,GAChBxB,GAAiB,EAAI,EAExBzJ,SAAA,CAAA,aACYiL,EAASmC,cAAc,SAGtCrN,EAAAA,IAACgH,EAAW,CAAA/G,SAAAiL,EAASoC,SA7DRpC,EAAS1G,QAiE3BoB,GACC5F,EAAAA,IAACmD,GAAA,CACCE,KAAoB,aAAd+G,EAA2BpF,EAAuBqD,EACxD/E,QAAS,KACW,aAAd8G,EACFnF,GAAwB,GAExBqD,GAAwB,GAE1B+B,GAAa,MACKS,IAAAxD,GAAQA,EAAO,IAClB/D,IAAA,EAEjB5E,aAAciH,EAAanH,KAC3BF,SAAwB,aAAd6L,EAA2B,WAAa,WAClD3G,cAA6B,aAAd2G,EAA2BrE,GAAY0C,GACtDjF,WAAYoC,EAAaxE,IACzBmC,yBAWRrD,EAAAA,KAAC,MAAI,CAAAO,UAAU,mDACbR,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAIO,UAAU,8BACbR,SAAA,CAACD,EAAAA,IAAA,IAAA,CAAES,UAAU,sBAAsBR,SAAe,2BACjDa,EAAO,CAAAyM,aAAcvD,EAAawD,WAAYzM,cA9OrBY,IAChBsI,EAAAwD,OAAO9L,IACvBoI,EAAe,EAAC,EA6OR9J,SAAA,CAACD,EAAAA,IAAAsB,EAAA,CAAcb,UAAU,WACvBR,SAAAD,EAAAA,IAACuB,GAAYC,YAAawI,EAAawD,sBAExC/L,EACC,CAAAxB,SAAA,CAACD,EAAAA,IAAA0B,EAAA,CAAWC,MAAM,KAAK1B,SAAE,OACxBD,EAAAA,IAAA0B,EAAA,CAAWC,MAAM,KAAK1B,SAAE,OACxBD,EAAAA,IAAA0B,EAAA,CAAWC,MAAM,KAAK1B,SAAE,OACxBD,EAAAA,IAAA0B,EAAA,CAAWC,MAAM,KAAK1B,SAAE,OACxBD,EAAAA,IAAA0B,EAAA,CAAWC,MAAM,KAAK1B,SAAE,aAI7BD,EAAAA,IAAC,MAAI,CAAAS,UAAU,sBACZR,SAAA,IAAI6J,EAAc,GAAKE,EAAe,OAAO0D,KAAKC,IACjD7D,EAAcE,EACdiB,GAAkBvK,cACZuK,GAAkBvK,cAI9BR,EAAAA,KAAC,MAAI,CAAAO,UAAU,8BACbR,SAAA,CAAAD,EAAAA,IAACM,EAAA,CACCC,QAAQ,UACRgH,KAAK,OACLnF,QA7QiB,KACrB0H,EAAc,GACDC,GAACzC,GAASA,EAAO,GAAC,EA4Q3B1F,SAA0B,IAAhBkI,EAET7J,SAAA,MAEHD,EAAAA,IAACM,EAAA,CACCC,QAAQ,UACRgH,KAAK,OACLnF,QA3Ra,KACjB0H,EAAcE,EAAeiB,GAAkBvK,QAClCqJ,GAACzC,GAASA,EAAO,GAAC,EA0R3B1F,SAAUkI,EAAcE,GAAgBiB,GAAkBvK,OAEzDT,SAAA,YAKND,MAAA4N,EAAA,CAAiBhI,eACjB3F,SAAA2F,GAEC1F,EAAAA,KAAA2N,WAAA,CAAA5N,SAAA,CAACD,EAAAA,IAAAG,EAAA,CAAOkD,KAAMkG,EAAelF,aAAcmF,EACzCvJ,SAACD,EAAAA,IAAAW,EAAA,CAAcF,UAAU,YACvBR,SAAAD,EAAAA,IAAC6E,GAAA,CACClG,aAAciH,EACdpC,WAAYoC,EAAaxE,IACzB7C,SAAS,WACTgF,wBAGGvD,EAAAA,IAACG,GAAOkD,KAAMoG,EAAepF,aAAcqF,EAChDzJ,SAAAD,EAAAA,IAACW,EAAc,CAAAF,UAAU,YACvBR,SAAAD,EAAAA,IAAC8N,GAAA,CACCC,cAAenI,EACfrH,SAAS,WACTI,aAAciH,EACdpC,WAAYoC,EAAaxE,IACzB4M,SAAU,KACOzK,KACGuH,IAAAxD,GAAQA,EAAO,GAAC,eASpD","x_google_ignoreList":[0]}