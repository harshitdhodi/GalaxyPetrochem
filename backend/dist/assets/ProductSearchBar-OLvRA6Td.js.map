{"version":3,"file":"ProductSearchBar-OLvRA6Td.js","sources":["../../node_modules/lucide-react/dist/esm/icons/loader-circle.js","../../src/website/componets/productSearch/ProductSearchBar.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst LoaderCircle = createLucideIcon(\"LoaderCircle\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { LoaderCircle as default };\n//# sourceMappingURL=loader-circle.js.map\n","import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport Footer from \"../home/Footer\";\n\nexport default function ProductSearchBar() {\n  const [searchParams] = useSearchParams();\n  const slug = searchParams.get(\"tab\"); // Get the 'tab' query parameter for slug\n  const [chemical, setChemical] = useState(null); // State to hold the fetched chemical data\n  const [isLoading, setIsLoading] = useState(true); // State for loading status\n  const [isError, setIsError] = useState(false); // State for error status\n\n  useEffect(() => {\n    if (!slug) return; // Skip fetching if no slug is provided\n\n    const fetchChemicalData = async () => {\n      try {\n        const response = await fetch(`/api/product/getBySlug/${slug}`);\n        if (response.ok) {\n          const data = await response.json();\n          setChemical(data); // Set the fetched chemical data\n        } else {\n          setIsError(true); // Set error state if the request failed\n        }\n      } catch (error) {\n        console.error(\"Error fetching chemical data:\", error);\n        setIsError(true); // Set error state on failure\n      } finally {\n        setIsLoading(false); // Set loading state to false after the request completes\n      }\n    };\n\n    fetchChemicalData();\n  }, [slug]); // Fetch data when the slug changes\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center w-full min-h-[200px] items-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (isError || !chemical) {\n    return (\n      <div className=\"flex justify-center w-full\">\n        <div className=\"w-full max-w-7xl p-6\">\n          <h1 className=\"text-2xl font-semibold mb-4\">No results found</h1>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n    <div className=\"flex justify-center w-full\">\n      <div className=\"w-full max-w-7xl p-6\">\n        <h1 className=\"text-2xl font-semibold mb-4\">\n          Search Results for \"{chemical.name || 'Unknown'}\"\n        </h1>\n        \n        <div className=\"text-sm text-gray-600 mb-4\">\n          Showing details for {chemical.name}\n        </div>\n\n        <Table>\n          <TableHeader className=\"bg-main\">\n            <TableRow>\n             \n              <TableHead className=\"text-white\">Product Name</TableHead>\n              <TableHead className=\"text-white\">Category</TableHead>\n              <TableHead className=\"text-white\">Price</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            <TableRow className=\"bg-blue-50\">\n         \n              <TableCell>\n                <Link \n                  to={`/${chemical.category.slug}/${chemical.slug}`} \n                  className=\"text-main hover:underline cursor-pointer\"\n                >\n                  {chemical.name}\n                </Link>\n              </TableCell>\n              <TableCell>\n              <Link \n                  to={`/${chemical.category.slug}`} \n                  className=\"text-main hover:underline cursor-pointer\"\n                >\n                {chemical.category.category || 'N/A'}\n                </Link>\n                </TableCell>\n              <TableCell>{chemical.price || 'N/A'} /piece</TableCell>\n              \n              \n            </TableRow>\n          </TableBody>\n        </Table>\n\n      \n      </div>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n"],"names":["LoaderCircle","createLucideIcon","d","key","ProductSearchBar","searchParams","useSearchParams","slug","get","chemical","setChemical","useState","isLoading","setIsLoading","isError","setIsError","useEffect","async","response","fetch","ok","data","json","error","fetchChemicalData","jsx","className","children","Loader2","jsxs","Fragment","name","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Link","to","category","price","Footer"],"mappings":";;;;;;GASA,MAAMA,EAAeC,EAAiB,eAAgB,CACpD,CAAC,OAAQ,CAAEC,EAAG,8BAA+BC,IAAK,aCJpD,SAAwBC,IAChB,MAACC,GAAgBC,IACjBC,EAAOF,EAAaG,IAAI,QACvBC,EAAUC,GAAeC,EAAAA,SAAS,OAClCC,EAAWC,GAAgBF,EAAAA,UAAS,IACpCG,EAASC,GAAcJ,EAAAA,UAAS,GAyBvC,OAvBAK,EAAAA,WAAU,KACR,IAAKT,EAAM,OAEeU,WACpB,IACF,MAAMC,QAAiBC,MAAM,0BAA0BZ,KACvD,GAAIW,EAASE,GAAI,CACT,MAAAC,QAAaH,EAASI,OAC5BZ,EAAYW,EAAI,MAEhBN,GAAW,SAENQ,GAEPR,GAAW,EAAI,CACf,QACAF,GAAa,EAAK,GAIJW,EAAA,GACjB,CAACjB,IAEAK,EAEAa,MAAC,OAAIC,UAAU,wDACbC,eAACC,EAAQ,CAAAF,UAAU,2BAKrBZ,IAAYL,EAEXgB,EAAAA,IAAA,MAAA,CAAIC,UAAU,6BACbC,eAAC,MAAI,CAAAD,UAAU,uBACbC,SAAAF,EAAAA,IAAC,KAAG,CAAAC,UAAU,8BAA8BC,SAAA,yBAQlDE,EAAAA,KAAAC,WAAA,CAAAH,SAAA,CAAAF,EAAAA,IAAC,OAAIC,UAAU,6BACbC,SAACE,EAAAA,KAAA,MAAA,CAAIH,UAAU,uBACbC,SAAA,CAACE,EAAAA,KAAA,KAAA,CAAGH,UAAU,8BAA8BC,SAAA,CAAA,uBACrBlB,EAASsB,MAAQ,UAAU,OAGlDF,EAAAA,KAAC,MAAI,CAAAH,UAAU,6BAA6BC,SAAA,CAAA,uBACrBlB,EAASsB,eAG/BC,EACC,CAAAL,SAAA,CAAAF,MAACQ,EAAY,CAAAP,UAAU,UACrBC,SAAAE,EAAAA,KAACK,EAEC,CAAAP,SAAA,CAACF,EAAAA,IAAAU,EAAA,CAAUT,UAAU,aAAaC,SAAY,iBAC7CF,EAAAA,IAAAU,EAAA,CAAUT,UAAU,aAAaC,SAAQ,aACzCF,EAAAA,IAAAU,EAAA,CAAUT,UAAU,aAAaC,SAAK,eAG1CF,MAAAW,EAAA,CACCT,SAACE,EAAAA,KAAAK,EAAA,CAASR,UAAU,aAElBC,SAAA,CAAAF,MAACY,EACC,CAAAV,SAAAF,EAAAA,IAACa,EAAA,CACCC,GAAI,IAAI9B,EAAS+B,SAASjC,QAAQE,EAASF,OAC3CmB,UAAU,2CAETC,SAASlB,EAAAsB,eAGbM,EACD,CAAAV,SAAAF,EAAAA,IAACa,EAAA,CACGC,GAAI,IAAI9B,EAAS+B,SAASjC,OAC1BmB,UAAU,2CAEXC,SAAAlB,EAAS+B,SAASA,UAAY,iBAGhCH,EAAW,CAAAV,SAAA,CAAAlB,EAASgC,OAAS,MAAM,gCAU7CC,EAAM,CAAA,KAGX","x_google_ignoreList":[0]}