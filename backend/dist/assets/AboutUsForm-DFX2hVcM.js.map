{"version":3,"file":"AboutUsForm-DFX2hVcM.js","sources":["../../src/websiteBackend/aboutus/AboutUsForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Upload, message, Breadcrumb, Spin, Select } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { \r\n  useCreateAboutUsMutation, \r\n  useUpdateAboutUsMutation,\r\n  useGetAboutUsByIdQuery \r\n} from '../../slice/aboutUs/aboutUs';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst AboutUsForm = () => {\r\n  const { id } = useParams(); // Get ID from URL\r\n  const navigate = useNavigate();\r\n  const [form] = Form.useForm();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [autoSlug, setAutoSlug] = useState('');\r\n  const [isCustomSlug, setIsCustomSlug] = useState(false);\r\n\r\n  // Fetch data if ID exists\r\n  const { \r\n    data: aboutUsData, \r\n    isLoading: isLoadingData \r\n  } = useGetAboutUsByIdQuery(id);\r\n\r\n  const [createAboutUs] = useCreateAboutUsMutation();\r\n  const [updateAboutUs] = useUpdateAboutUsMutation();\r\n\r\n  // Set form values when data is fetched\r\n  useEffect(() => {\r\n    if (aboutUsData) {\r\n      form.setFieldsValue({\r\n        title: aboutUsData.title,\r\n        shortDescription: aboutUsData.shortDescription,\r\n        description: aboutUsData.description,\r\n        imageTitle: aboutUsData.imageTitle,\r\n        altName: aboutUsData.altName,\r\n        section: aboutUsData.section,\r\n        slug: aboutUsData.slug,\r\n      });\r\n      setAutoSlug(aboutUsData.slug);\r\n      setIsCustomSlug(aboutUsData.slug !== aboutUsData.section.toLowerCase().replace(/\\s+/g, '-'));\r\n\r\n      // Set existing image\r\n      if (aboutUsData.image) {\r\n        setFileList([{\r\n          uid: '-1',\r\n          name: 'Current Image',\r\n          status: 'done',\r\n          url: `/api/image/download/${aboutUsData.image}`,\r\n        }]);\r\n      }\r\n    }\r\n  }, [aboutUsData, form]);\r\n\r\n  // Add this effect to auto-generate slug when section changes\r\n  useEffect(() => {\r\n    const sectionValue = form.getFieldValue('section');\r\n    if (sectionValue && !isCustomSlug) {\r\n      const generatedSlug = sectionValue.toLowerCase().replace(/\\s+/g, '-');\r\n      setAutoSlug(generatedSlug);\r\n      form.setFieldsValue({ slug: generatedSlug });\r\n    }\r\n  }, [form.getFieldValue('section'), isCustomSlug]);\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n      [{ 'color': [] }, { 'background': [] }],\r\n      [{ 'align': ['', 'center', 'right', 'justify'] }],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ]\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', values.title);\r\n      formData.append('shortDescription', values.shortDescription);\r\n      formData.append('description', values.description);\r\n      formData.append('imageTitle', values.imageTitle);\r\n      formData.append('altName', values.altName);\r\n      formData.append('section', values.section);\r\n      formData.append('slug', values.slug);\r\n      \r\n      if (fileList[0]?.originFileObj) {\r\n        formData.append('image', fileList[0].originFileObj);\r\n      }\r\n\r\n      if (id) {\r\n        await updateAboutUs({ id, formData }).unwrap();\r\n        message.success('About Us updated successfully');\r\n      } else {\r\n        await createAboutUs(formData).unwrap();\r\n        message.success('About Us created successfully');\r\n      }\r\n\r\n      navigate('/about-us-table');\r\n    } catch (error) {\r\n      const errorMessage = error.data?.error || `Failed to ${id ? 'update' : 'create'} About Us entry`;\r\n      message.error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const uploadProps = {\r\n    beforeUpload: (file) => {\r\n      const isImage = file.type.startsWith('image/');\r\n      if (!isImage) {\r\n        message.error('You can only upload image files!');\r\n        return false;\r\n      }\r\n      return false;\r\n    },\r\n    onChange: ({ fileList }) => setFileList(fileList),\r\n    fileList,\r\n  };\r\n\r\n  if (isLoadingData && id) {\r\n    return <Spin size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        items={[\r\n          { title: 'Dashboard', onClick: () => navigate('/dashboard') },\r\n          { title: 'About Us', onClick: () => navigate('/about-us-table') },\r\n          { title: id ? 'Edit About Us' : 'Create About Us' },\r\n        ]}\r\n        style={{ marginBottom: '1rem' }}\r\n      />\r\n      \r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={handleSubmit}\r\n      >\r\n        <Form.Item\r\n          name=\"section\"\r\n          label=\"Section\"\r\n          rules={[{ required: true, message: 'Please select a section!' }]}\r\n        >\r\n          <Select \r\n            placeholder=\"Select a section\"\r\n            onChange={(value) => {\r\n              if (!isCustomSlug) {\r\n                const newSlug = value.toLowerCase().replace(/\\s+/g, '-');\r\n                setAutoSlug(newSlug);\r\n                form.setFieldsValue({ slug: newSlug });\r\n              }\r\n            }}\r\n          >\r\n            <Select.Option value=\"Introduction\">Introduction</Select.Option>\r\n            <Select.Option value=\"Mission Vision\">Mission Vision</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"slug\"\r\n          label={\r\n            <span>\r\n              Slug\r\n              <Button \r\n                type=\"link\" \r\n                size=\"small\" \r\n                onClick={() => {\r\n                  setIsCustomSlug(!isCustomSlug);\r\n                  if (!isCustomSlug) {\r\n                    // If switching to custom, keep current value\r\n                    const currentSlug = form.getFieldValue('slug');\r\n                    setAutoSlug(currentSlug);\r\n                  } else {\r\n                    // If switching back to auto, regenerate from section\r\n                    const sectionValue = form.getFieldValue('section');\r\n                    const newSlug = sectionValue.toLowerCase().replace(/\\s+/g, '-');\r\n                    setAutoSlug(newSlug);\r\n                    form.setFieldsValue({ slug: newSlug });\r\n                  }\r\n                }}\r\n                style={{ marginLeft: 8 }}\r\n              >\r\n                {isCustomSlug ? 'Use Auto Slug' : 'Customize Slug'}\r\n              </Button>\r\n            </span>\r\n          }\r\n          rules={[\r\n            { required: true, message: 'Slug is required!' },\r\n            {\r\n              pattern: /^[a-z0-9]+(?:-[a-z0-9]+)*$/,\r\n              message: 'Slug can only contain lowercase letters, numbers, and hyphens'\r\n            }\r\n          ]}\r\n        >\r\n          <Input \r\n            disabled={!isCustomSlug}\r\n            onChange={(e) => {\r\n              if (isCustomSlug) {\r\n                setAutoSlug(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          rules={[{ required: false, message: 'Please input the title!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"shortDescription\"\r\n          label=\"Short Description\"\r\n          rules={[{ required: false, message: 'Please input the short description!' }]}\r\n        >\r\n          <ReactQuill \r\n            modules={modules}\r\n            theme=\"snow\"\r\n            style={{ height: '150px', marginBottom: '50px' }}\r\n            className=\"custom-quill-editor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          rules={[{ required: false, message: 'Please input the description!' }]}\r\n        >\r\n          <ReactQuill \r\n            modules={modules}\r\n            theme=\"snow\"\r\n            style={{ height: '600px', marginBottom: '50px' }}\r\n            className=\"custom-quill-editor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"image\"\r\n          label=\"Image\"\r\n          rules={[{ required: false, message: 'Please upload an image!' }]}\r\n        >\r\n          <Upload {...uploadProps} listType=\"picture\">\r\n            <Button icon={<UploadOutlined />}>\r\n              {id ? 'Change Image' : 'Click to Upload'}\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"imageTitle\"\r\n          label=\"Image Title\"\r\n          rules={[{ required: false, message: 'Please input the image title!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"altName\"\r\n          label=\"Alt Name\"\r\n          rules={[{ required: false, message: 'Please input the alt name!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {id ? 'Update' : 'Submit'}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutUsForm;\r\n"],"names":["AboutUsForm","id","useParams","navigate","useNavigate","form","Form","useForm","fileList","setFileList","useState","autoSlug","setAutoSlug","isCustomSlug","setIsCustomSlug","data","aboutUsData","isLoading","isLoadingData","useGetAboutUsByIdQuery","createAboutUs","useCreateAboutUsMutation","updateAboutUs","useUpdateAboutUsMutation","useEffect","setFieldsValue","title","shortDescription","description","imageTitle","altName","section","slug","toLowerCase","replace","image","uid","name","status","url","sectionValue","getFieldValue","generatedSlug","modules","toolbar","header","list","color","background","align","uploadProps","beforeUpload","file","type","startsWith","message","error","onChange","jsx","Spin","size","jsxs","Fragment","children","Breadcrumb","items","onClick","style","marginBottom","layout","onFinish","async","values","formData","FormData","append","originFileObj","unwrap","success","errorMessage","Item","label","rules","required","Select","placeholder","value","newSlug","Option","Button","currentSlug","marginLeft","pattern","Input","disabled","e","target","ReactQuill","theme","height","className","Upload","listType","icon","UploadOutlined","htmlType"],"mappings":"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"}