{"version":3,"file":"UnitTable-BgUsaw_P.js","sources":["../../src/chemical/unitComponent/UnitDialog.jsx","../../src/chemical/unitComponent/UnitTable.jsx","../../src/chemical/UnitTable.jsx"],"sourcesContent":["// components/UnitDialog.js\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function UnitDialog({\r\n  isOpen,\r\n  onOpenChange,\r\n  unitName,\r\n  setUnitName,\r\n  handleSubmit,\r\n  title\r\n}) {\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>{title}</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"name\">Unit Name</Label>\r\n            <Input\r\n              id=\"name\"\r\n              value={unitName}\r\n              onChange={(e) => setUnitName(e.target.value)}\r\n              placeholder=\"Enter unit name\"\r\n            />\r\n          </div>\r\n          <Button onClick={handleSubmit}>{title}</Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n","// components/UnitTable.js\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Pencil, Trash2 } from 'lucide-react'\r\n\r\nexport default function UnitTable({ units, openEditDialog, handleDelete }) {\r\n  return (\r\n    <div className=\"w-full max-w-4xl border shadow-md\">\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"w-[200px]\">Action</TableHead>\r\n            <TableHead>Name</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {units.map((unit) => (\r\n            <TableRow key={unit.id}>\r\n              <TableCell>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    onClick={() => openEditDialog(unit)}\r\n                    className=\"bg-green-500 hover:bg-green-600\"\r\n                    size=\"sm\"\r\n                  >\r\n                    <Pencil className=\"h-4 w-4\" />\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleDelete(unit._id)}\r\n                    variant=\"destructive\"\r\n                    size=\"sm\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell>{unit.name}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n","'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { PlusCircle } from 'lucide-react'\r\nimport UnitDialog from './unitComponent/UnitDialog'\r\nimport UnitTable from './unitComponent/UnitTable'\r\nimport { \r\n  useGetAllUnitsQuery, \r\n  useCreateUnitMutation, \r\n  useUpdateUnitMutation, \r\n  useDeleteUnitMutation \r\n} from '@/slice/chemicalUnit/unitSlice'\r\n\r\nexport default function UnitsPage() {\r\n  // Fetch units data from the API\r\n  const { data: units = [], isLoading, isError, refetch } = useGetAllUnitsQuery()\r\n  const [createUnit] = useCreateUnitMutation()\r\n  const [updateUnit] = useUpdateUnitMutation()\r\n  const [deleteUnit] = useDeleteUnitMutation()\r\n\r\n  const [isAddOpen, setIsAddOpen] = useState(false)\r\n  const [isEditOpen, setIsEditOpen] = useState(false)\r\n  const [editingUnit, setEditingUnit] = useState(null)\r\n  const [newUnitName, setNewUnitName] = useState('')\r\n  \r\n  // Handle saving a unit (create or update)\r\n  const handleSave = async () => {\r\n    try {\r\n      if (newUnitName) {\r\n        const updatedUnit = { name: newUnitName };\r\n        console.log(\"Saving unit:\", { id: editingUnit?._id, updatedUnit });\r\n  \r\n        // Ensure we're passing the correct data and the ID exists\r\n        if (editingUnit?._id) {\r\n          console.log(newUnitName)\r\n          // Update the unit\r\n          await updateUnit({ id: editingUnit._id, updatedUnit }).unwrap();\r\n        } else {\r\n          // Create a new unit\r\n          await createUnit(updatedUnit).unwrap();\r\n        }\r\n  \r\n        setNewUnitName(''); // Clear the input field\r\n        setEditingUnit(null); // Reset the editing state\r\n        setIsAddOpen(false); // Close the dialog\r\n        setIsEditOpen(false); // Close the edit dialog\r\n        refetch(); // Trigger refetch to get the updated data\r\n      } else {\r\n        console.error(\"Unit name is empty\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to save unit:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle editing a unit (set name and ID)\r\n  const handleEdit = (unit) => {\r\n   \r\n    if (unit && unit._id) {\r\n      setNewUnitName(unit.name)\r\n      setEditingUnit(unit)\r\n      setIsEditOpen(true)\r\n    } else {\r\n      console.error(\"Invalid unit selected:\", unit)\r\n    }\r\n  }\r\n\r\n  // Handle deleting a unit\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteUnit(id).unwrap() // Call the mutation to delete the unit\r\n      refetch() // Trigger refetch to get the updated data\r\n    } catch (error) {\r\n      console.error(\"Failed to delete unit:\", error)\r\n    }\r\n  }\r\n\r\n  // Loading and error states for the fetch query\r\n  if (isLoading) return <div>Loading...</div>\r\n  if (isError) return <div>Error loading units</div>\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-primary\">Units</h1>\r\n        <UnitDialog\r\n          isOpen={isAddOpen}\r\n          onOpenChange={setIsAddOpen}\r\n          unitName={newUnitName}\r\n          setUnitName={setNewUnitName}\r\n          handleSubmit={handleSave} // Use handleSave for both create and update\r\n          title=\"Add New Unit\"\r\n        />\r\n        <Button className=\"bg-purple-600 hover:bg-purple-700\" onClick={() => setIsAddOpen(true)}>\r\n          <PlusCircle className=\"mr-2 h-4 w-4\" />\r\n          Add Unit\r\n        </Button>\r\n      </div>\r\n\r\n      <UnitTable\r\n        units={units}\r\n        openEditDialog={handleEdit} // Edit functionality\r\n        handleDelete={handleDelete} // Delete functionality\r\n      />\r\n\r\n      <UnitDialog\r\n        isOpen={isEditOpen}\r\n        onOpenChange={setIsEditOpen}\r\n        unitName={newUnitName}\r\n        setUnitName={setNewUnitName}\r\n        handleSubmit={handleSave} // Use handleSave for both create and update\r\n        title=\"Edit Unit\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["UnitDialog","isOpen","onOpenChange","unitName","setUnitName","handleSubmit","title","Dialog","open","children","DialogContent","jsx","DialogHeader","DialogTitle","jsxs","className","Label","htmlFor","Input","id","value","onChange","e","target","placeholder","Button","onClick","UnitTable","units","openEditDialog","handleDelete","Table","TableHeader","TableRow","TableHead","TableBody","map","unit","TableCell","size","Pencil","_id","variant","Trash2","name","UnitsPage","data","isLoading","isError","refetch","useGetAllUnitsQuery","createUnit","useCreateUnitMutation","updateUnit","useUpdateUnitMutation","deleteUnit","useDeleteUnitMutation","isAddOpen","setIsAddOpen","useState","isEditOpen","setIsEditOpen","editingUnit","setEditingUnit","newUnitName","setNewUnitName","handleSave","async","updatedUnit","unwrap","error","PlusCircle"],"mappings":"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"}