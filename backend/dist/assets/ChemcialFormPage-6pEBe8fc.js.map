{"version":3,"file":"ChemcialFormPage-6pEBe8fc.js","sources":["../../node_modules/lucide-react/dist/esm/icons/eye.js","../../node_modules/lucide-react/dist/esm/icons/file-text.js","../../src/chemical/chemicalForm/CategorySelect.jsx","../../src/chemical/chemicalForm/ChemicalInfo.jsx","../../src/chemical/chemicalForm/ChemicalProperties.jsx","../../src/chemical/chemicalForm/MetaInfo.jsx","../../src/chemical/chemicalForm/ImageUpload.jsx","../../src/chemical/chemicalForm/ChemcialFormPage.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Eye = createLucideIcon(\"Eye\", [\n  [\n    \"path\",\n    {\n      d: \"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\",\n      key: \"1nclc0\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Eye as default };\n//# sourceMappingURL=eye.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst FileText = createLucideIcon(\"FileText\", [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M10 9H8\", key: \"b1mrlr\" }],\n  [\"path\", { d: \"M16 13H8\", key: \"t4e002\" }],\n  [\"path\", { d: \"M16 17H8\", key: \"z1uh3a\" }]\n]);\n\nexport { FileText as default };\n//# sourceMappingURL=file-text.js.map\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport { useGetAllChemicalCategoriesQuery } from '@/slice/chemicalSlice/chemicalCategory';\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useGetAllUnitsQuery } from '@/slice/chemicalUnit/unitSlice';\r\n\r\nexport const CategorySelectionForm = ({ control, chemicalData, watch, setValue }) => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [subSubCategories, setSubSubCategories] = useState([]);\r\n  const { data: unitsData, isLoading: unitsLoading } = useGetAllUnitsQuery()\r\n  const units = unitsData || []\r\n  const {\r\n    data: categoriesData,\r\n    isLoading: categoriesLoading,\r\n    isSuccess: categoriesSuccess,\r\n    isError,\r\n    error\r\n  } = useGetAllChemicalCategoriesQuery();\r\n\r\n  const categories = categoriesData || [];\r\n  const watchCategory = watch('category');\r\n  const watchSubCategory = watch('sub_category');\r\n  const watchSubSubCategory = watch('subsub_category_id');\r\n  console.log(watchCategory, watchSubCategory, watchSubSubCategory);\r\n  // Handle category, sub-category, and sub-sub-category changes\r\n  useEffect(() => {\r\n    if (!categories.length) return;\r\n\r\n    const selectedCategory = categories.find(cat => cat._id === watchCategory);\r\n    if (selectedCategory) {\r\n      setSubCategories(selectedCategory.subCategories || []);\r\n      setValue(\"categorySlug\", selectedCategory.slug);\r\n    }\r\n\r\n    const selectedSubCategory = watchSubCategory && selectedCategory?.subCategories?.find(subCat => subCat._id === watchSubCategory);\r\n    if (selectedSubCategory) {\r\n      setSubSubCategories(selectedSubCategory.subSubCategory || []);\r\n      setValue(\"subCategorySlug\", selectedSubCategory.slug);\r\n    }\r\n  }, [categories, watchCategory, watchSubCategory, setValue]);\r\n\r\n  // Separate useEffect for subSubCategory\r\n  useEffect(() => {\r\n    if (!subSubCategories.length) return;\r\n\r\n    const selectedSubSubCategory = watchSubSubCategory && subSubCategories.find(subSubCat => subSubCat._id === watchSubSubCategory);\r\n    if (selectedSubSubCategory) {\r\n      setValue(\"subSubCategorySlug\", selectedSubSubCategory.slug);\r\n    }\r\n  }, [subSubCategories, watchSubSubCategory, setValue]);\r\n\r\n  // Error handling for API failure\r\n  useEffect(() => {\r\n    if (isError) {\r\n      console.error('Failed to load categories:', error);\r\n    }\r\n  }, [isError, error]);\r\n\r\n  // Pre-load subCategories and subSubCategories for display purposes only (no setValue)\r\n  useEffect(() => {\r\n    if (chemicalData && chemicalData.category && categories.length > 0) {\r\n      const selectedCategory = categories.find(cat => cat._id === chemicalData.category);\r\n      if (selectedCategory) {\r\n        setSubCategories(selectedCategory.subCategories || []);\r\n        setValue(\"category\", chemicalData.category);\r\n        setValue(\"categorySlug\", selectedCategory.slug);\r\n\r\n        const selectedSubCategory = selectedCategory.subCategories?.find(subCat => subCat._id === chemicalData.sub_category);\r\n        if (selectedSubCategory) {\r\n          setSubSubCategories(selectedSubCategory.subSubCategory || []);\r\n          setValue(\"sub_category\", chemicalData.sub_category);\r\n          setValue(\"subCategorySlug\", selectedSubCategory.slug);\r\n        }\r\n\r\n        const selectedSubSubCategory = selectedSubCategory?.subSubCategory?.find(subSubCat => subSubCat._id === chemicalData.subsub_category_id);\r\n        if (selectedSubSubCategory) {\r\n          setValue(\"subsub_category_id\", chemicalData.subsub_category_id);\r\n          setValue(\"subSubCategorySlug\", selectedSubSubCategory.slug);\r\n        }\r\n      }\r\n    }\r\n  }, [chemicalData, categories, setValue]);\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl border-none mx-auto shadow-none\">\r\n      <CardContent className=\"space-y-6\">\r\n        <div className=\"space-y-4\">\r\n          {/* Category Selection */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"category\">Category</Label>\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              rules={{ required: 'Category is required' }}\r\n              render={({ field }) => (\r\n                <Select\r\n                  value={field.value || ''}\r\n                  onValueChange={(value) => {\r\n                    const selectedCategory = categories.find(cat => cat._id === value);\r\n                    if (selectedCategory) {\r\n                      field.onChange(selectedCategory._id);\r\n                      setValue('categorySlug', selectedCategory.slug);\r\n                    }\r\n                  }}\r\n                >\r\n                  <SelectTrigger id=\"category\">\r\n                    <SelectValue>\r\n                      {field.value && categoriesSuccess\r\n                        ? categories.find(cat => cat._id === field.value)?.category\r\n                        : (chemicalData && chemicalData.category?.name) || 'Select Category'}\r\n                    </SelectValue>\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {categoriesLoading ? (\r\n                      <SelectItem value=\"loading\" disabled>Loading...</SelectItem>\r\n                    ) : categoriesSuccess && categories.length > 0 ? (\r\n                      categories.map(cat => (\r\n                        <SelectItem key={cat._id} value={cat._id}>\r\n                          {cat.category}\r\n                        </SelectItem>\r\n                      ))\r\n                    ) : (\r\n                      <SelectItem value=\"none\" disabled>No categories available</SelectItem>\r\n                    )}\r\n                  </SelectContent>\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          {/* Sub Category Selection */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"sub_category\">Sub Category</Label>\r\n            <Controller\r\n              name=\"sub_category\"\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Select\r\n                  value={field.value || ''}\r\n                  onValueChange={(value) => {\r\n                    const selectedSubCategory = subCategories.find(subCat => subCat._id === value);\r\n                    if (selectedSubCategory) {\r\n                      field.onChange(selectedSubCategory._id);\r\n                      setValue('subCategorySlug', selectedSubCategory.slug);\r\n                    }\r\n                  }}\r\n                  disabled={!watchCategory || subCategories.length === 0}\r\n                >\r\n                  <SelectTrigger id=\"sub_category\">\r\n                    <SelectValue>\r\n                      {field.value && subCategories.length > 0\r\n                        ? subCategories.find(subCat => subCat._id === field.value)?.category\r\n                        : (chemicalData && chemicalData.sub_category?.name) || 'Select Sub Category'}\r\n                    </SelectValue>\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {subCategories.length > 0 ? (\r\n                      subCategories.map(subCat => (\r\n                        <SelectItem key={subCat._id} value={subCat._id}>\r\n                          {subCat.category}\r\n                        </SelectItem>\r\n                      ))\r\n                    ) : (\r\n                      <SelectItem value=\"none\" disabled>No sub-categories available</SelectItem>\r\n                    )}\r\n                  </SelectContent>\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          {/* Sub Sub Category Selection */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"subsub_category_id\">Sub Sub Category</Label>\r\n            <Controller\r\n              name=\"subsub_category_id\"\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Select\r\n                  value={field.value || ''}\r\n                  onValueChange={(value) => {\r\n                    const selectedSubSubCategory = subSubCategories.find(subSubCat => subSubCat._id === value);\r\n                    if (selectedSubSubCategory) {\r\n                      field.onChange(selectedSubSubCategory._id);\r\n                      setValue('subSubCategorySlug', selectedSubSubCategory.slug);\r\n                    }\r\n                  }}\r\n                  disabled={!watchSubCategory || subSubCategories.length === 0}\r\n                >\r\n                  <SelectTrigger id=\"subsub_category_id\">\r\n                    <SelectValue>\r\n                      {field.value && subSubCategories.length > 0\r\n                        ? subSubCategories.find(subSubCat => subSubCat._id === field.value)?.category\r\n                        : (chemicalData && chemicalData.subSubCategory?.category) || 'Select Sub Sub Category'}\r\n                    </SelectValue>\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {subSubCategories.length > 0 ? (\r\n                      subSubCategories.map(subSubCat => (\r\n                        <SelectItem key={subSubCat._id} value={subSubCat._id}>\r\n                          {subSubCat.category}\r\n                        </SelectItem>\r\n                      ))\r\n                    ) : (\r\n                      <SelectItem value=\"none\" disabled>No sub-sub-categories available</SelectItem>\r\n                    )}\r\n                  </SelectContent>\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          {/* //Unit field */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"unit\">Unit</Label>\r\n            <Controller\r\n              name=\"unit\"\r\n              control={control}\r\n              rules={{ required: 'Unit is required' }}\r\n              render={({ field }) => (\r\n                <Select onValueChange={field.onChange} value={field.value || undefined}>\r\n                  <SelectTrigger id=\"unit\">\r\n                    <SelectValue placeholder=\"Select Unit\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {unitsLoading ? (\r\n                      <SelectItem value=\"loading\">Loading...</SelectItem>\r\n                    ) : (\r\n                      units.map((unit) => (\r\n                        <SelectItem key={unit._id} value={unit.name}>\r\n                          {unit.name}\r\n                        </SelectItem>\r\n                      ))\r\n                    )}\r\n                  </SelectContent>\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          {/* //assay field */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"assay\">Assay (%)</Label>\r\n            <Controller\r\n              name=\"assay\"\r\n              control={control}\r\n              render={({ field }) => (\r\n                <div>\r\n                  <input\r\n                    type=\"string\"\r\n                    id=\"assay\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    step=\"0.01\" // Allows decimal values\r\n                    value={field.value || 0}\r\n                    onChange={(e) => field.onChange(e.target.value)}\r\n                    className=\"w-full border \"\r\n                  />\r\n\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCategorySelectionForm.propTypes = {\r\n  control: PropTypes.object.isRequired,\r\n  chemicalData: PropTypes.object, // Optional chemical data for display\r\n  watch: PropTypes.func.isRequired,\r\n  setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategorySelectionForm;","import React, { useEffect } from 'react';\r\nimport { useForm, Controller, useWatch } from 'react-hook-form';\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// ✅ Custom Slug Generator\r\nconst customSlugify = (text) =>\r\n  text\r\n    .toString()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/[^a-z0-9\\s-]/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/-+/g, '-');\r\n\r\nexport const ChemicalInfoForm = ({ control, setValue }) => {\r\n  const name = useWatch({\r\n    control,\r\n    name: 'name',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      const generatedSlug = customSlugify(name);\r\n      setValue('slug', generatedSlug);\r\n    }\r\n  }, [name, setValue]);\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline'],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n    ],\r\n  };\r\n\r\n  const formats = ['header', 'bold', 'italic', 'underline', 'link', 'image'];\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto shadow-none border-none\">\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"name\">Name</Label>\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            rules={{ required: 'Name is required' }}\r\n            render={({ field }) => (\r\n              <Input id=\"name\" {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"slug\">Slug</Label>\r\n          <Controller\r\n            name=\"slug\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                id=\"slug\"\r\n                {...field}\r\n                onChange={(e) => {\r\n                  const customSlug = customSlugify(e.target.value);\r\n                  field.onChange(customSlug);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"description\">Description</Label>\r\n          <Controller\r\n            name=\"description\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <ReactQuill\r\n                value={field.value || ''}\r\n                onChange={field.onChange}\r\n                modules={modules}\r\n                formats={formats}\r\n                theme=\"snow\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChemicalInfoForm;\r\n","import React, { useState } from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { X, FileText, Eye } from \"lucide-react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ChemicalPropertiesForm = ({ control, watch }) => {\r\n  const [isUploading, setIsUploading] = useState({\r\n    specs: false,\r\n    msds: false\r\n  });\r\n\r\n  const currentSpecs = watch('specs');\r\n  const currentMsds = watch('msds');\r\n\r\n  const openPdfInNewTab = (filename, type = 'specs') => {\r\n    if (filename) {\r\n      const endpoint = type === 'msds' ? 'msds' : 'specs';\r\n      \r\n      // Extract just the ID part (remove the extension)\r\n      const fileId = filename.split('.')[0];\r\n      \r\n      // OR if the entire filename is the ID:\r\n      // const fileId = filename;\r\n      \r\n      window.open(`/api/image/${endpoint}/view/${fileId}`, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto border-none shadow-none\">\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"packings\">Packings</Label>\r\n          <Controller\r\n            name=\"packings\"\r\n            control={control}\r\n            defaultValue={[]}\r\n            render={({ field }) => (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex gap-2\">\r\n                  <Input \r\n                    placeholder=\"Enter packing (e.g., 25kg)\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        const value = e.target.value.trim();\r\n                        if (value && !field.value.includes(value)) {\r\n                          field.onChange([...field.value, value]);\r\n                          e.target.value = '';\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={(e) => {\r\n                      const input = e.currentTarget.previousSibling;\r\n                      const value = input.value.trim();\r\n                      if (value && !field.value.includes(value)) {\r\n                        field.onChange([...field.value, value]);\r\n                        input.value = '';\r\n                      }\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {Array.isArray(field.value) && field.value.map((packing, index) => (\r\n                    <div \r\n                      key={index}\r\n                      className=\"flex items-center gap-1 bg-secondary px-2 py-1 rounded-md\"\r\n                    >\r\n                      <span>{packing}</span>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          const newPackings = field.value.filter((_, i) => i !== index);\r\n                          field.onChange(newPackings);\r\n                        }}\r\n                        className=\"text-muted-foreground hover:text-foreground\"\r\n                      >\r\n                        <X className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"grade\">Grade</Label>\r\n          <Controller\r\n            name=\"grade\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id=\"grade\" placeholder=\"Enter grade\" {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"iupac\">IUPAC Name</Label>\r\n          <Controller\r\n            name=\"iupac\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id=\"iupac\" placeholder=\"Enter IUPAC name\" {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"h_s_code\">HS Code</Label>\r\n          <Controller\r\n            name=\"h_s_code\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id=\"h_s_code\" placeholder=\"Enter HS code\" {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"molecular_weight\">Molecular Weight</Label>\r\n          <Controller\r\n            name=\"molecular_weight\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"molecular_weight\" \r\n                type=\"number\" \r\n                placeholder=\"Enter molecular weight\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"molecular_formula\">Molecular Formula</Label>\r\n          <Controller\r\n            name=\"molecular_formula\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"molecular_formula\" \r\n                placeholder=\"Enter molecular formula\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"application\">Applications</Label>\r\n          <Controller\r\n            name=\"application\"\r\n            control={control}\r\n            defaultValue={[]}\r\n            render={({ field }) => (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex gap-2\">\r\n                  <Input \r\n                    placeholder=\"Enter application\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        const value = e.target.value.trim();\r\n                        if (value && !field.value.includes(value)) {\r\n                          field.onChange([...field.value, value]);\r\n                          e.target.value = '';\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={(e) => {\r\n                      const input = e.currentTarget.previousSibling;\r\n                      const value = input.value.trim();\r\n                      if (value && !field.value.includes(value)) {\r\n                        field.onChange([...field.value, value]);\r\n                        input.value = '';\r\n                      }\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {Array.isArray(field.value) && field.value.map((app, index) => (\r\n                    <div \r\n                      key={index}\r\n                      className=\"flex items-center gap-1 bg-secondary px-2 py-1 rounded-md\"\r\n                    >\r\n                      <span>{app}</span>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          const newApplications = field.value.filter((_, i) => i !== index);\r\n                          field.onChange(newApplications);\r\n                        }}\r\n                        className=\"text-muted-foreground hover:text-foreground\"\r\n                      >\r\n                        <X className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"specs\">Specifications (PDF)</Label>\r\n          <Controller\r\n            name=\"specs\"\r\n            control={control}\r\n            render={({ field: { value, onChange, ...field } }) => (\r\n              <div className=\"space-y-2\">\r\n                {/* Show current specs file if it exists */}\r\n                {typeof currentSpecs === 'string' && currentSpecs && (\r\n                  <div className=\"flex items-center gap-2 p-2 bg-secondary rounded-md\">\r\n                    <FileText className=\"h-4 w-4\" />\r\n                    <span className=\"text-sm truncate\">{currentSpecs}</span>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => openPdfInNewTab(currentSpecs, 'specs')}\r\n                    >\r\n                      <Eye className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => onChange('')}\r\n                    >\r\n                      <X className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n\r\n                <Input\r\n                  id=\"specs\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  disabled={isUploading.specs}\r\n                  onChange={async (e) => {\r\n                    const file = e.target.files?.[0];\r\n                    if (file) {\r\n                      setIsUploading(prev => ({ ...prev, specs: true }));\r\n                      onChange(file);\r\n                      setIsUploading(prev => ({ ...prev, specs: false }));\r\n                    }\r\n                  }}\r\n                  {...field}\r\n                />\r\n                {isUploading.specs && (\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Uploading specification file...\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"msds\">MSDS (PDF)</Label>\r\n          <Controller\r\n            name=\"msds\"\r\n            control={control}\r\n            render={({ field: { value, onChange, ...field } }) => (\r\n              <div className=\"space-y-2\">\r\n                {/* Show current MSDS file if it exists */}\r\n                {typeof currentMsds === 'string' && currentMsds && (\r\n                  <div className=\"flex items-center gap-2 p-2 bg-secondary rounded-md\">\r\n                    <FileText className=\"h-4 w-4\" />\r\n                    <span className=\"text-sm truncate\">{currentMsds}</span>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => openPdfInNewTab(currentMsds, 'msds')}\r\n                    >\r\n                      <Eye className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => onChange('')}\r\n                    >\r\n                      <X className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n\r\n                <Input\r\n                  id=\"msds\"\r\n                  type=\"file\"\r\n                  accept=\".pdf\"\r\n                  disabled={isUploading.msds}\r\n                  onChange={async (e) => {\r\n                    const file = e.target.files?.[0];\r\n                    if (file) {\r\n                      setIsUploading(prev => ({ ...prev, msds: true }));\r\n                      onChange(file);\r\n                      setIsUploading(prev => ({ ...prev, msds: false }));\r\n                    }\r\n                  }}\r\n                  {...field}\r\n                />\r\n                {isUploading.msds && (\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Uploading MSDS file...\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nChemicalPropertiesForm.propTypes = {\r\n  control: PropTypes.object.isRequired,\r\n  watch: PropTypes.func\r\n};\r\n\r\nChemicalPropertiesForm.defaultProps = {\r\n  watch: () => undefined\r\n};\r\n\r\nexport default ChemicalPropertiesForm;","import React from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport const MetaInformationForm = ({ control }) => {\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto border-none shadow-none\">\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metatitle\">Meta Title</Label>\r\n          <Controller\r\n            name=\"metatitle\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"metatitle\" \r\n                placeholder=\"Enter meta title\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metadescription\">Meta Description</Label>\r\n          <Controller\r\n            name=\"metadescription\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Textarea \r\n                id=\"metadescription\"\r\n                placeholder=\"Enter meta description\"\r\n                {...field} \r\n                rows={3}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metakeywords\">Meta Keywords</Label>\r\n          <Controller\r\n            name=\"metakeywords\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"metakeywords\" \r\n                placeholder=\"Enter meta keywords\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metacanonical\">Meta Canonical URL</Label>\r\n          <Controller\r\n            name=\"metacanonical\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"metacanonical\" \r\n                placeholder=\"Enter canonical URL\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metalanguage\">Meta Language</Label>\r\n          <Controller\r\n            name=\"metalanguage\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input \r\n                id=\"metalanguage\" \r\n                placeholder=\"Enter language code (e.g., en-US)\"\r\n                {...field} \r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"metaschema\">Meta Schema</Label>\r\n          <Controller\r\n            name=\"metaschema\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Textarea \r\n                id=\"metaschema\"\r\n                placeholder=\"Enter JSON-LD schema\"\r\n                {...field} \r\n                rows={4}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"otherMeta\">Other Meta Information</Label>\r\n          <Controller\r\n            name=\"otherMeta\"\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Textarea \r\n                id=\"otherMeta\"\r\n                placeholder=\"Enter any additional meta information\"\r\n                {...field} \r\n                rows={3}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MetaInformationForm\r\n\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useFieldArray, Controller } from \"react-hook-form\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { X } from \"lucide-react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst ImageUploadForm = ({ control, setValue }) => {\r\n  const { fields, append, remove, update } = useFieldArray({\r\n    control,\r\n    name: \"images\",\r\n  });\r\n\r\n  // ReactQuill modules configuration with enhanced features\r\n  const quillModules = {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n      ['blockquote', 'code-block'],                      // blocks\r\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],     // lists\r\n      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n      [{ 'indent': '-1'}, { 'indent': '+1' }],          // indentation\r\n      [{ 'direction': 'rtl' }],                         // text direction\r\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults\r\n      [{ 'font': [] }],                                 // font family\r\n      [{ 'align': [] }],                                // text align\r\n      ['clean'],                                         // remove formatting\r\n      ['link', 'image']                                  // link and image\r\n    ]\r\n  };\r\n\r\n  // ReactQuill formats configuration\r\n  const quillFormats = [\r\n    'header', 'font', 'size',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image', 'color', 'background', \r\n    'align', 'direction', 'code-block', 'script'\r\n  ];\r\n\r\n  const handleImageChange = useCallback(\r\n    (e, index) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        // Revoke the old preview URL if it exists\r\n        if (fields[index]?.preview?.startsWith(\"blob:\")) {\r\n          URL.revokeObjectURL(fields[index].preview);\r\n        }\r\n\r\n        const preview = URL.createObjectURL(file);\r\n\r\n        // Update the specific index using update() instead of modifying fields directly\r\n        update(index, {\r\n          ...fields[index],\r\n          file,\r\n          preview,\r\n          altText: fields[index]?.altText || \"\",\r\n          title: fields[index]?.title || \"\",\r\n          url: null, // Reset URL for new uploads\r\n        });\r\n      }\r\n    },\r\n    [fields, update]\r\n  );\r\n\r\n  // Cleanup effect to revoke old preview URLs\r\n  useEffect(() => {\r\n    return () => {\r\n      fields.forEach((field) => {\r\n        if (field?.preview?.startsWith(\"blob:\")) {\r\n          URL.revokeObjectURL(field.preview);\r\n        }\r\n      });\r\n    };\r\n  }, [fields]);\r\n\r\n  const handleRemove = useCallback(\r\n    (index) => {\r\n      if (fields[index]?.preview?.startsWith(\"blob:\")) {\r\n        URL.revokeObjectURL(fields[index].preview);\r\n      }\r\n      // Mark the image for deletion if it has an ID\r\n      if (fields[index]._id) {\r\n        setValue(`imagesToDelete.${fields[index]._id}`, true);\r\n      }\r\n      remove(index);\r\n    },\r\n    [fields, remove, setValue]\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Global Tagline Field - as a simple string */}\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"global_tagline\">Global Tagline</Label>\r\n        <Controller\r\n          name=\"global_tagline\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          render={({ field }) => (\r\n            <Input \r\n              id=\"global_tagline\"\r\n              placeholder=\"Enter global tagline\"\r\n              {...field}\r\n            />\r\n          )}\r\n        />\r\n        <p className=\"text-xs text-gray-500\">A brief tagline that will appear globally.</p>\r\n      </div>\r\n\r\n      {/* Description Field */}\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"description\">Description</Label>\r\n        <Controller\r\n          name=\"description\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <div className=\"quill-container\">\r\n              <ReactQuill \r\n                id=\"description\"\r\n                theme=\"snow\"\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"bg-white\"\r\n                modules={quillModules}\r\n                formats={quillFormats}\r\n                placeholder=\"Enter detailed description...\"\r\n              />\r\n            </div>\r\n          )}\r\n        />\r\n        <p className=\"text-xs text-gray-500 mt-1\">\r\n          Format your content using the toolbar above. Use headings, lists, and formatting to create well-structured content.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"synonyms\">Synonyms</Label>\r\n        <Controller\r\n          name=\"synonyms\"\r\n          control={control}\r\n          defaultValue={[]}\r\n          render={({ field }) => (\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex gap-2\">\r\n                <Input \r\n                  placeholder=\"Enter synonym\"\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      e.preventDefault();\r\n                      const value = e.target.value.trim();\r\n                      if (value && !field.value.includes(value)) {\r\n                        field.onChange([...field.value, value]);\r\n                        e.target.value = '';\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    const input = e.currentTarget.previousSibling;\r\n                    const value = input.value.trim();\r\n                    if (value && !field.value.includes(value)) {\r\n                      field.onChange([...field.value, value]);\r\n                      input.value = '';\r\n                    }\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {Array.isArray(field.value) && field.value.map((synonym, index) => (\r\n                  <div \r\n                    key={index}\r\n                    className=\"flex items-center gap-1 bg-secondary px-2 py-1 rounded-md\"\r\n                  >\r\n                    <span>{synonym}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const newSynonyms = field.value.filter((_, i) => i !== index);\r\n                        field.onChange(newSynonyms);\r\n                      }}\r\n                      className=\"text-muted-foreground hover:text-foreground\"\r\n                    >\r\n                      <X className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      <Label>Images</Label>\r\n      {fields.map((field, index) => (\r\n        <div key={field.id} className=\"space-y-2 border p-4 rounded-lg\">\r\n          {/* Image Preview */}\r\n          {field.preview || field.url ? (\r\n            <img\r\n              src={field.preview || `/api/image/download/${field.url}`}\r\n              alt={field.altText || \"Image preview\"}\r\n              className=\"w-32 h-32 object-cover rounded border\"\r\n            />\r\n          ) : (\r\n            <div className=\"w-32 h-32 flex items-center justify-center border rounded bg-gray-100\">\r\n              No Preview\r\n            </div>\r\n          )}\r\n\r\n          {/* File Input */}\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => handleImageChange(e, index)}\r\n            accept=\"image/*\"\r\n            className=\"block w-full text-sm text-gray-500\r\n                file:mr-4 file:py-2 file:px-4\r\n                file:rounded-full file:border-0\r\n                file:text-sm file:font-semibold\r\n                file:bg-blue-50 file:text-blue-700\r\n                hover:file:bg-blue-100\"\r\n          />\r\n\r\n          {/* Alt Text Input */}\r\n          <Label htmlFor={`alt-text-${index}`}>Alt Text</Label>\r\n          <Controller\r\n            name={`images.${index}.altText`}\r\n            control={control}\r\n            defaultValue={field.altText || \"\"}\r\n            render={({ field }) => (\r\n              <Input\r\n                id={`alt-text-${index}`}\r\n                placeholder=\"Alt Text\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* Title Input */}\r\n          <Label htmlFor={`image-title-${index}`}>Image Title</Label>\r\n          <Controller\r\n            name={`images.${index}.title`}\r\n            control={control}\r\n            defaultValue={field.title || \"\"}\r\n            render={({ field }) => (\r\n              <Input\r\n                id={`image-title-${index}`}\r\n                placeholder=\"Image Title\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* Remove Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleRemove(index)}\r\n            className=\"text-red-600 hover:underline\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Add Image Button */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          append({ file: null, preview: null, altText: \"\", title: \"\", url: null })\r\n        }\r\n        className=\"px-4 py-2 mt-4 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n      >\r\n        Add Image\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadForm;","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { CategorySelectionForm } from \"./CategorySelect\";\r\nimport { ChemicalInfoForm } from \"./ChemicalInfo\";\r\nimport { ChemicalPropertiesForm } from \"./ChemicalProperties\";\r\nimport { MetaInformationForm } from \"./MetaInfo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport ImageUploadForm from './ImageUpload';\r\n\r\nexport const ChemicalFormPage = () => {\r\n  const { control, handleSubmit, watch, setValue } = useForm({\r\n    defaultValues: {\r\n      category: \"\",\r\n      sub_category: \"\",\r\n      subsub_category_id: \"\",\r\n      categorySlug: \"\",\r\n      subCategorySlug: \"\",\r\n      subSubCategorySlug: \"\",\r\n      name: \"\",\r\n      slug: \"\",\r\n      images: [],\r\n      catalog: \"\",\r\n      msds: \"\",\r\n      specs: \"\",\r\n      table:\"\",\r\n      synonyms: [],\r\n      application: [],\r\n      chemical_industries: [],\r\n      product_code: \"\",\r\n      auto_p_code: \"\",\r\n     \r\n      metatitle: \"\",\r\n      metadescription: \"\",\r\n      metakeywords: \"\",\r\n      metacanonical: \"\",\r\n      metalanguage: \"\",\r\n      metaschema: \"\",\r\n      otherMeta: \"\",\r\n      imagesToDelete: {}\r\n    }\r\n  });\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [chemicalData, setChemicalData] = useState(null); // Store fetched data\r\n\r\n  useEffect(() => {\r\n    const fetchChemicalData = async () => {\r\n      if (id) {\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await axios.get(`/api/chemical/getChemicalById?id=${id}`);\r\n          const data = response.data;\r\n          setChemicalData(data); // Store the data\r\n\r\n          // Set category-related fields\r\n          if (data.category) {\r\n            setValue(\"category\", data.category._id);\r\n            setValue(\"categorySlug\", data.category.slug);\r\n          }\r\n          if (data.sub_category) {\r\n            setValue(\"sub_category\", data.sub_category._id);\r\n            setValue(\"subCategorySlug\", data.sub_category.slug);\r\n          }\r\n          if (data.subsub_category_id) {\r\n            setValue(\r\n              \"subsub_category_id\",\r\n              typeof data.subsub_category_id === \"object\" ? data.subsub_category_id._id : data.subsub_category_id\r\n            );\r\n            setValue(\"subSubCategorySlug\", data.subsub_category_id.slug || \"\");\r\n          }\r\n\r\n          // Set other fields\r\n          Object.entries(data).forEach(([key, value]) => {\r\n            if (\r\n              key !== \"category\" &&\r\n              key !== \"sub_category\" &&\r\n              key !== \"subsub_category_id\" &&\r\n              key !== \"images\"\r\n            ) {\r\n              setValue(key, value);\r\n            }\r\n          });\r\n\r\n          if (data.images && data.images.length > 0) {\r\n            setValue(\"images\", data.images);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching chemical data:\", error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchChemicalData();\r\n  }, [id, setValue]);\r\n\r\n  const onSubmitForm = async (data) => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      // Handle images\r\n      data.images.forEach((image, index) => {\r\n        if (image.file instanceof File) {\r\n          formData.append(\"images\", image.file);\r\n          formData.append(`altText-${index}`, image.altText || \"\");\r\n          formData.append(`title-${index}`, image.title || \"\");\r\n        } else if (image.url) {\r\n          formData.append(`existingImages[${index}][url]`, image.url);\r\n          formData.append(`existingImages[${index}][altText]`, image.altText || \"\");\r\n          formData.append(`existingImages[${index}][title]`, image.title || \"\");\r\n        }\r\n      });\r\n\r\n      // Append images to delete\r\n      Object.keys(data.imagesToDelete).forEach((imageId) => {\r\n        formData.append(\"imagesToDelete[]\", imageId);\r\n      });\r\n\r\n      // Append other form data\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (\r\n          key !== \"images\" &&\r\n          key !== \"imagesToDelete\" &&\r\n          value !== undefined &&\r\n          value !== null &&\r\n          value !== \"\"\r\n        ) {\r\n          if (Array.isArray(value)) {\r\n            value.forEach((item, index) => {\r\n              formData.append(`${key}[${index}]`, item);\r\n            });\r\n          } else if (key === \"molecular_weight\" && value) {\r\n            formData.append(key, Number(value));\r\n          } else {\r\n            formData.append(key, value);\r\n          }\r\n        }\r\n      });\r\n\r\n      let response;\r\n      if (id) {\r\n        response = await axios.put(`/api/chemical/updateChemicalById?id=${id}`, formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n      } else {\r\n        response = await axios.post(\"/api/chemical/add\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n      }\r\n\r\n      console.log(\"Form submitted successfully\", response.data);\r\n      navigate(\"/chemical-table\");\r\n    } catch (err) {\r\n      console.error(\"Error submitting form:\", err.response?.data?.message || err.message);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading existing chemical data...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4 flex items-center text-sm text-gray-500\">\r\n        <Link to=\"/\" className=\"hover:text-purple-600\">Home</Link>\r\n        <span className=\"mx-2\">/</span>\r\n        <Link to=\"/chemical-table\" className=\"hover:text-purple-600\">Chemicals</Link>\r\n        <span className=\"mx-2\">/</span>\r\n        <span className=\"text-gray-900\">{id ? \"Edit Chemical\" : \"New Chemical\"}</span>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)} className=\"space-y-6 bg-white\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6\">\r\n          <div className=\"border p-4 rounded-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Category Information</h2>\r\n            <CategorySelectionForm control={control} watch={watch} setValue={setValue} chemicalData={chemicalData} />\r\n          </div>\r\n\r\n          <div className=\"border p-4 rounded-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Chemical Details</h2>\r\n            <ChemicalInfoForm control={control} setValue={setValue} chemicalData={chemicalData} />\r\n          </div>\r\n\r\n          <div className=\"border p-4 rounded-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Chemical Properties</h2>\r\n            <ChemicalPropertiesForm control={control} chemicalData={chemicalData} />\r\n          </div>\r\n\r\n          <div className=\"border p-4 rounded-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Image Upload</h2>\r\n            <ImageUploadForm control={control} setValue={setValue} chemicalData={chemicalData} />\r\n          </div>\r\n\r\n          <div className=\"border p-4 rounded-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Meta Information</h2>\r\n            <MetaInformationForm control={control} chemicalData={chemicalData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center mt-6\">\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"px-8 py-3 w-1/4 text-white rounded-md hover:bg-purple-700 transition duration-300 ease-in-out transform hover:scale-105\"\r\n          >\r\n            {id ? \"Update Chemical\" : \"Submit Chemical\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChemicalFormPage;"],"names":["Eye","createLucideIcon","d","key","cx","cy","r","FileText","CategorySelectionForm","control","chemicalData","watch","setValue","subCategories","setSubCategories","useState","subSubCategories","setSubSubCategories","data","unitsData","isLoading","unitsLoading","useGetAllUnitsQuery","units","categoriesData","categoriesLoading","isSuccess","categoriesSuccess","isError","error","useGetAllChemicalCategoriesQuery","categories","watchCategory","watchSubCategory","watchSubSubCategory","useEffect","length","selectedCategory","find","cat","_id","slug","selectedSubCategory","subCat","subSubCategory","selectedSubSubCategory","subSubCat","category","sub_category","subsub_category_id","jsx","Card","className","children","CardContent","jsxs","Label","htmlFor","Controller","name","rules","required","render","field","Select","value","onValueChange","onChange","SelectTrigger","id","SelectValue","SelectContent","SelectItem","disabled","map","placeholder","unit","type","min","max","step","e","target","propTypes","PropTypes","object","isRequired","func","customSlugify","text","toString","normalize","replace","toLowerCase","trim","ChemicalInfoForm","useWatch","generatedSlug","modules","toolbar","header","formats","Input","customSlug","ReactQuill","theme","ChemicalPropertiesForm","isUploading","setIsUploading","specs","msds","currentSpecs","currentMsds","openPdfInNewTab","filename","endpoint","fileId","split","window","open","defaultValue","onKeyDown","preventDefault","includes","Button","onClick","input","currentTarget","previousSibling","isArray","packing","index","newPackings","filter","_","i","X","app","newApplications","variant","size","accept","async","file","files","prev","defaultProps","MetaInformationForm","Textarea","rows","ImageUploadForm","fields","append","remove","update","useFieldArray","quillModules","list","script","indent","direction","color","background","font","align","quillFormats","handleImageChange","useCallback","preview","startsWith","URL","revokeObjectURL","createObjectURL","altText","title","url","forEach","handleRemove","synonym","newSynonyms","src","alt","ChemicalFormPage","handleSubmit","useForm","defaultValues","categorySlug","subCategorySlug","subSubCategorySlug","images","catalog","table","synonyms","application","chemical_industries","product_code","auto_p_code","metatitle","metadescription","metakeywords","metacanonical","metalanguage","metaschema","otherMeta","imagesToDelete","navigate","useNavigate","useParams","setIsLoading","setChemicalData","axios","get","Object","entries","fetchChemicalData","Fragment","Link","to","onSubmit","formData","FormData","response","image","File","keys","imageId","Array","item","Number","put","headers","post","err"],"mappings":"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","x_google_ignoreList":[0,1]}