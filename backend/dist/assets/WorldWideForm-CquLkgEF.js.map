{"version":3,"file":"WorldWideForm-CquLkgEF.js","sources":["../../src/websiteBackend/worldwideTables/WorldWideForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Select, Button, Card, Breadcrumb, message } from 'antd';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { \r\n    useCreateWorldwideMutation,\r\n    useUpdateWorldwideMutation,\r\n    useGetWorldwideByIdQuery\r\n} from '../../slice/worldwide/worldwide';\r\n\r\nconst { Option } = Select;\r\n\r\nconst WorldwideForm = () => {\r\n    const [form] = Form.useForm();\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const isEditMode = !!id;\r\n\r\n    const [createWorldwide] = useCreateWorldwideMutation();\r\n    const [updateWorldwide] = useUpdateWorldwideMutation();\r\n    const { data: editData, isLoading: isLoadingEdit } = useGetWorldwideByIdQuery(id, {\r\n        skip: !isEditMode\r\n    });\r\n\r\n    // Set form values when editing\r\n    useEffect(() => {\r\n        if (isEditMode && editData?.data) {\r\n            form.setFieldsValue(editData.data);\r\n        }\r\n    }, [editData, form, isEditMode]);\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            if (isEditMode) {\r\n                await updateWorldwide({ id, data: values }).unwrap();\r\n                message.success('Location updated successfully!');\r\n            } else {\r\n                await createWorldwide(values).unwrap();\r\n                message.success('Location added successfully!');\r\n            }\r\n            navigate('/worldwide-table');\r\n        } catch (error) {\r\n            message.error(error.message || 'Something went wrong');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <Breadcrumb\r\n                items={[\r\n                    { \r\n                        title: <span onClick={() => navigate('/dashboard')} style={{ cursor: 'pointer' }}>\r\n                            Dashboard\r\n                        </span>\r\n                    },\r\n                    { \r\n                        title: <span onClick={() => navigate('/worldwide-table')} style={{ cursor: 'pointer' }}>\r\n                            Worldwide Locations\r\n                        </span>\r\n                    },\r\n                    { title: isEditMode ? 'Edit Location' : 'Add Location' }\r\n                ]}\r\n                style={{ marginBottom: '16px' }}\r\n            />\r\n\r\n            <Card title={isEditMode ? 'Edit Location' : 'Add New Location'}>\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                    onFinish={onFinish}\r\n                    initialValues={{ category: 'international' }}\r\n                >\r\n                    <Form.Item\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        rules={[{ required: true, message: 'Please select a category' }]}\r\n                    >\r\n                        <Select>\r\n                            <Option value=\"international\">International</Option>\r\n                            <Option value=\"india\">India</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Country Name\"\r\n                        rules={[{ required: true, message: 'Please enter country name' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        noStyle\r\n                        shouldUpdate={(prevValues, currentValues) => \r\n                            prevValues.category !== currentValues.category\r\n                        }\r\n                    >\r\n                        {({ getFieldValue }) => \r\n                            getFieldValue('category') === 'india' && (\r\n                                <>\r\n                                    <Form.Item\r\n                                        name=\"state\"\r\n                                        label=\"State\"\r\n                                        rules={[{ required: true, message: 'Please enter state' }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"cities\"\r\n                                        label=\"Cities (Enter up to 5 cities, one per line)\"\r\n                                        rules={[{ required: true, message: 'Please enter at least one city' }]}\r\n                                    >\r\n                                        <Input.TextArea \r\n                                            rows={5}\r\n                                            placeholder=\"Enter cities, one per line\"\r\n                                            onChange={(e) => {\r\n                                                const cities = e.target.value.split('\\n').slice(0, 5);\r\n                                                form.setFieldsValue({ cities });\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" loading={isLoadingEdit}>\r\n                            {isEditMode ? 'Update' : 'Submit'}\r\n                        </Button>\r\n                        <Button \r\n                            style={{ marginLeft: '10px' }}\r\n                            onClick={() => navigate('/worldwide-table')}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorldwideForm;\r\n"],"names":["Option","Select","WorldwideForm","form","Form","useForm","navigate","useNavigate","id","useParams","isEditMode","createWorldwide","useCreateWorldwideMutation","updateWorldwide","useUpdateWorldwideMutation","data","editData","isLoading","isLoadingEdit","useGetWorldwideByIdQuery","skip","useEffect","setFieldsValue","style","padding","children","jsx","Breadcrumb","items","title","onClick","cursor","marginBottom","Card","jsxs","layout","onFinish","async","values","unwrap","message","success","error","initialValues","category","Item","name","label","rules","required","value","Input","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","Fragment","TextArea","rows","placeholder","onChange","e","cities","target","split","slice","Button","type","htmlType","loading","marginLeft"],"mappings":"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"}