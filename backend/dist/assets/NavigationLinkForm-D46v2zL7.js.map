{"version":3,"file":"NavigationLinkForm-D46v2zL7.js","sources":["../../src/websiteBackend/navigationLinks/NavigationLinkForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Upload, message, Breadcrumb } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { useNavigate, useParams, Link } from 'react-router-dom';\r\nimport { useCreateNavigationLinkMutation, useUpdateNavigationLinkMutation, useGetNavigationLinkByIdQuery } from '@/slice/navigationLink/navigationSlice';\r\n\r\nconst NavigationLinkForm = () => {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const { data: navigationLink, isLoading: isFetching, refetch } = useGetNavigationLinkByIdQuery(id, { skip: !id });\r\n  const [createNavigationLink] = useCreateNavigationLinkMutation();\r\n  const [updateNavigationLink] = useUpdateNavigationLinkMutation();\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (navigationLink) {\r\n      form.setFieldsValue(navigationLink);\r\n      setFileList([{ url: `/api/logo/download/${navigationLink.icon}`, name: navigationLink.icon }]);\r\n    }\r\n  }, [navigationLink, form]);\r\n\r\n  const handleFinish = async (values) => {\r\n    const formData = new FormData();\r\n    formData.append('name', values.name);\r\n    if (fileList[0]?.originFileObj) {\r\n      formData.append('icon', fileList[0].originFileObj);\r\n    }\r\n  \r\n    try {\r\n      if (id) {\r\n        await updateNavigationLink({ id, formData }).unwrap();\r\n        message.success('Navigation link updated successfully');\r\n        await refetch(); // ðŸ”¥ Force data refresh after update\r\n      } else {\r\n        await createNavigationLink(formData).unwrap();\r\n        message.success('Navigation link created successfully');\r\n      }\r\n      navigate('/navigationLink'); \r\n    } catch (error) {\r\n      message.error('Failed to save navigation link');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = ({ fileList }) => setFileList(fileList);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ marginBottom: '16px' }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/navigationLink\">Navigation Links</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{id ? 'Edit Navigation Link' : 'Add Navigation Link'}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form form={form} layout=\"vertical\" onFinish={handleFinish}>\r\n        <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true, message: 'Please enter the name' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"icon\" label=\"Icon\" rules={[{ required: true, message: 'Please upload an icon' }]}>\r\n          <Upload\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            fileList={fileList}\r\n            beforeUpload={() => false}\r\n            onChange={handleFileChange}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Icon</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={isFetching}>\r\n            {id ? 'Update' : 'Create'}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationLinkForm;"],"names":["NavigationLinkForm","form","Form","useForm","navigate","useNavigate","id","useParams","data","navigationLink","isLoading","isFetching","refetch","useGetNavigationLinkByIdQuery","skip","createNavigationLink","useCreateNavigationLinkMutation","updateNavigationLink","useUpdateNavigationLinkMutation","fileList","setFileList","useState","useEffect","setFieldsValue","url","icon","name","jsxs","Fragment","children","Breadcrumb","style","marginBottom","jsx","Item","Link","to","layout","onFinish","async","values","formData","FormData","append","originFileObj","unwrap","message","success","error","label","rules","required","Input","Upload","listType","maxCount","beforeUpload","onChange","Button","UploadOutlined","type","htmlType","loading"],"mappings":"uyBAMA,MAAMA,EAAqB,KACzB,MAAOC,GAAQC,EAAKC,UACdC,EAAWC,KACXC,GAAEA,GAAOC,KACPC,KAAMC,EAAgBC,UAAWC,EAAYC,QAAAA,GAAYC,EAA8BP,EAAI,CAAEQ,MAAOR,KACrGS,GAAwBC,KACxBC,GAAwBC,KACxBC,EAAUC,GAAeC,EAAAA,SAAS,IAEzCC,EAAAA,WAAU,KACJb,IACFR,EAAKsB,eAAed,GACRW,EAAA,CAAC,CAAEI,IAAK,sBAAsBf,EAAegB,OAAQC,KAAMjB,EAAegB,QAAO,GAE9F,CAAChB,EAAgBR,IA0BpB,OAEI0B,EAAAA,KAAAC,WAAA,CAAAC,SAAA,CAAAF,EAAAA,KAACG,EAAW,CAAAC,MAAO,CAAEC,aAAc,QACjCH,SAAA,CAACI,EAAAA,IAAAH,EAAWI,KAAX,CACCL,SAAAI,EAAAA,IAACE,GAAKC,GAAG,aAAaP,yBAExBI,EAAAA,IAACH,EAAWI,KAAX,CACCL,eAACM,EAAK,CAAAC,GAAG,kBAAkBP,SAAA,6BAE5BC,EAAWI,KAAX,CAAiBL,SAAAvB,EAAK,uBAAyB,kCAEjDJ,EAAK,CAAAD,OAAYoC,OAAO,WAAWC,SAnCnBC,MAAOC,IACpB,MAAAC,EAAW,IAAIC,SACZD,EAAAE,OAAO,OAAQH,EAAOd,MAC3BP,EAAS,IAAIyB,eACfH,EAASE,OAAO,OAAQxB,EAAS,GAAGyB,eAGlC,IACEtC,SACIW,EAAqB,CAAEX,KAAImC,aAAYI,SAC7CC,EAAQC,QAAQ,8CACVnC,YAEAG,EAAqB0B,GAAUI,SACrCC,EAAQC,QAAQ,yCAElB3C,EAAS,yBACF4C,GACPF,EAAQE,MAAM,iCAAgC,GAkB5CnB,SAAA,CAAAI,MAAC/B,EAAKgC,KAAL,CAAUR,KAAK,OAAOuB,MAAM,OAAOC,MAAO,CAAC,CAAEC,UAAU,EAAML,QAAS,0BACrEjB,SAAAI,MAACmB,GAAM,WAERlD,EAAKgC,KAAL,CAAUR,KAAK,OAAOuB,MAAM,OAAOC,MAAO,CAAC,CAAEC,UAAU,EAAML,QAAS,0BACrEjB,SAAAI,EAAAA,IAACoB,EAAA,CACCC,SAAS,UACTC,SAAU,EACVpC,WACAqC,aAAc,KAAM,EACpBC,SAvBe,EAAGtC,SAAAA,KAAeC,EAAYD,GAyB7CU,eAAC6B,EAAO,CAAAjC,KAAOQ,MAAA0B,EAAA,CAAe,GAAI9B,SAAW,oBAGhDI,EAAAA,IAAA/B,EAAKgC,KAAL,CACCL,eAAC6B,EAAO,CAAAE,KAAK,UAAUC,SAAS,SAASC,QAASnD,EAC/CkB,SAAKvB,EAAA,SAAW,kBAIzB"}