{"version":3,"file":"Hello-DwXA2WQl.js","sources":["../../src/website/componets/productsByLetter/GradeSidebar.jsx","../../src/website/componets/productsByLetter/ProductsTable.jsx","../../src/website/componets/productsByLetter/Info.jsx","../../src/website/pages/AlphabetBasedProduct.jsx","../../src/Hello.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport function GradeSidebar({ categorySlug, chemicals, selectedGrades, setSelectedGrades }) {\r\n\r\n    // Handles the change in grade selection\r\n    const handleGradeChange = (checked, gradeName) => {\r\n        if (checked) {\r\n            setSelectedGrades((prev) => [...prev, gradeName]);\r\n        } else {\r\n            setSelectedGrades((prev) => prev.filter((item) => item !== gradeName));\r\n        }\r\n    };\r\n\r\n    // Clears all selected filters\r\n    const handleClearAllFilters = () => {\r\n        setSelectedGrades([]);\r\n    };\r\n\r\n    // Removes a specific grade from selected grades\r\n    const removeGrade = (gradeName) => {\r\n        setSelectedGrades((prev) => prev.filter((item) => item !== gradeName));\r\n    };\r\n\r\n    return (\r\n        <Card className=\"md:col-span-1 bg-[#dee8ff] h-fit rounded-none p-3\">\r\n            <CardContent className=\"p-4\">\r\n                <h2 className=\"text-2xl font-normal mb-4\">Your Selections</h2>\r\n\r\n                {/* Display selected grades */}\r\n                {selectedGrades.length > 0 && (\r\n                    <div className=\"mb-6\">\r\n                        <h3 className=\"font-medium mb-2\">Grades:</h3>\r\n                        <div className=\"text-main py-3 flex flex-col gap-2 border-y-2 border-gray-300\">\r\n                            {selectedGrades.map((grade) => (\r\n                                <div key={grade} className=\"flex justify-between items-center px-2 py-1 bg-blue-100 rounded\">\r\n                                    <span className=\"text-sm\">{grade}</span>\r\n                                    <button\r\n                                        onClick={() => removeGrade(grade)}\r\n                                        className=\"text-gray-600 hover:text-red-600\"\r\n                                    >\r\n                                        <X size={16} />\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Grades Filter */}\r\n                <div className=\"space-y-6\">\r\n                    <div>\r\n                        <h3 className=\"mb-2 text-2xl font-normal\">Grades</h3>\r\n                        <div className=\"space-y-2\">\r\n                            {chemicals.map((chemical) => (\r\n                                <div key={chemical._id} className=\"flex items-center space-x-2\">\r\n                                    <Checkbox\r\n                                        id={chemical._id}\r\n                                        checked={selectedGrades.includes(chemical.grade)}\r\n                                        onCheckedChange={(checked) => handleGradeChange(checked, chemical.grade)}\r\n                                    />\r\n                                    <label htmlFor={chemical._id} className=\"text-sm\">\r\n                                        {chemical.grade}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default GradeSidebar;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AlphabetbaseProductTable = ({ chemicals }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  if (!chemicals || chemicals.length === 0) {\r\n    return <div className=\"p-4 text-center\">No products found.</div>;\r\n  }\r\n\r\n  // Calculate pagination values\r\n  const totalItems = chemicals.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const paginatedChemicals = chemicals.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleNameClick = (name) => {\r\n    const formattedName = name.replace(/\\s+/g, '-').toLowerCase(); // Replace spaces with hyphens and convert to lowercase\r\n    console.log(`Redirecting to: /${formattedName}`);\r\n    navigate(`/${formattedName}`); // Redirect to the dynamic route\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Table >\r\n        <TableHeader>\r\n          <TableRow className=\"bg-gray-100\">\r\n            <TableHead>Product Code</TableHead>\r\n            <TableHead>Product Name</TableHead>\r\n            <TableHead>CAS</TableHead>\r\n            {/* <TableHead>Grade</TableHead>\r\n            <TableHead>Molecular Formula</TableHead> */}\r\n            <TableHead>TDS</TableHead>\r\n            <TableHead>MSDS</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {paginatedChemicals.map((chemical) => (\r\n            <TableRow key={chemical.auto_p_code}>\r\n              <TableCell>{chemical.auto_p_code}</TableCell>\r\n              <TableCell>\r\n                <button\r\n                  className=\"text-main hover:no-underline\"\r\n                  onClick={() => handleNameClick(chemical.name)}\r\n                >\r\n                  {chemical.name}\r\n                </button>\r\n              </TableCell>\r\n              <TableCell>{chemical.cas_number}</TableCell>\r\n              {/* <TableCell>{chemical.grade}</TableCell>\r\n              <TableCell>{chemical.molecular_formula}</TableCell> */}\r\n              <TableCell>Specs</TableCell>\r\n              <TableCell>MSDS</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"flex justify-end mt-4\">\r\n        <nav className=\"flex space-x-1\" aria-label=\"Pagination\">\r\n          {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\r\n            <Button\r\n              key={page}\r\n              variant={page === currentPage ? \"outline\" : \"default\"}\r\n              size=\"sm\"\r\n              className={`min-w-[40px] ${\r\n                page === currentPage\r\n                  ? \"bg-main text-white hover:bg-main_light\"\r\n                  : \"hover:bg-blue-50\"\r\n              }`}\r\n              onClick={() => handlePageChange(page)}\r\n            >\r\n              {page}\r\n            </Button>\r\n          ))}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlphabetbaseProductTable;\r\n","import React from \"react\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n\r\nexport default function Info({ letter, totalItems, itemsPerPage, setItemsPerPage }) {\r\n  return (\r\n    <div className=\"w-full mb-5\">\r\n      <div className=\"space-y-4\">\r\n        <h1 className=\"text-2xl font-semibold\">Showing Products for \"{letter}\"</h1>\r\n        <p className=\"text-sm text-muted-foreground uppercase tracking-wide\">\r\n          Fine Chemicals & Laboratory Reagents for Research & Industries\r\n        </p>\r\n\r\n        <div className=\"bg-blue-50 flex items-center px-3 py-1 justify-between\">\r\n          <span className=\"text-sm text-gray-600\">\r\n            1 to {itemsPerPage} of {totalItems} item(s) displayed\r\n          </span>\r\n          <Select\r\n            value={itemsPerPage.toString()}\r\n            onValueChange={(value) => setItemsPerPage(Number(value))}\r\n          >\r\n            <SelectTrigger className=\"w-[120px]\">\r\n              <SelectValue placeholder=\"Show per page\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"10\">10 per page</SelectItem>\r\n              <SelectItem value=\"25\">25 per page</SelectItem>\r\n              <SelectItem value=\"50\">50 per page</SelectItem>\r\n              <SelectItem value=\"100\">100 per page</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport Breadcrumb from \"../componets/SubCategoryPage/BreadCrumb\";\r\nimport { Pagination } from \"../componets/category_subcategory/Pegination\";\r\nimport GradeSidebar from \"../componets/productsByLetter/GradeSidebar\";\r\nimport AlphabetbaseProductTable from \"../componets/productsByLetter/ProductsTable\";\r\nimport Info from \"../componets/productsByLetter/Info\";\r\nimport Footer from \"../componets/home/Footer\";\r\nconst formatText = (text) => {\r\n  if (!text) return '';\r\n  \r\n  // Split by hyphens and spaces\r\n  return text\r\n    .split(/[-\\s]+/)\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(' ');\r\n};\r\nexport default function AlphabetBasedProduct() {\r\n  const location = useLocation();\r\n  const { selectedLetter, chemicals } = location.state || {};\r\n  console.log({selectedLetter, chemicals});\r\n  const [selectedGrades, setSelectedGrades] = useState([]);\r\n  const [itemsPerPage, setItemsPerPage] = useState(50);\r\n  const [chemical, setChemical] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchChemicals = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\r\n          `/api/chemical/getChemicalByCategoryAndAlphabet?categoryslug=${chemicals}&alphabet=${selectedLetter}`\r\n        );\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch chemicals');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setChemical(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (chemicals && selectedLetter) {\r\n      fetchChemicals();\r\n    }\r\n  }, [chemicals, selectedLetter]);\r\n\r\n  // Filter chemicals based on selected grades\r\n  const filteredChemicals = selectedGrades.length\r\n    ? chemical.filter((item) => selectedGrades.includes(item.grade))\r\n    : chemical;\r\n\r\n  const totalItems = filteredChemicals.length;\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n\r\n  if (error) return <div>Error loading chemicals: {error}</div>;\r\n\r\n    return (\r\n    <>\r\n    <div className=\"max-w-7xl mx-auto mb-10 \">\r\n      <Breadcrumb chemicals={chemicals} categorySlug={chemicals} selectedLetter={selectedLetter} />\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-10\">\r\n        <GradeSidebar\r\n          categorySlug={chemicals}\r\n          chemicals={chemical}\r\n          selectedGrades={selectedGrades}\r\n          setSelectedGrades={setSelectedGrades}\r\n        />\r\n        <div className=\"md:col-span-2\">\r\n          <Info\r\n            letter={selectedLetter}\r\n            totalItems={totalItems}\r\n            itemsPerPage={itemsPerPage}\r\n            setItemsPerPage={setItemsPerPage}\r\n          />\r\n          <AlphabetbaseProductTable\r\n            selectedLetter={selectedLetter}\r\n            categorySlug={chemicals}\r\n            chemicals={filteredChemicals}\r\n          />\r\n          {/* <Pagination /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport ChemicalSubcategoryPage from './website/pages/category_subcategoryPage';\r\nimport AlphabetBasedProduct from './website/pages/AlphabetBasedProduct';\r\n\r\nexport default function Hello() {\r\n  const location = useLocation();\r\n  const { number, slug } = useParams();\r\n\r\n  // Check if the URL contains '/products'\r\n  const isProductsPath = location.pathname.startsWith('/products');\r\n\r\n  return (\r\n    <div>\r\n      {isProductsPath ? (\r\n        <AlphabetBasedProduct />\r\n      ) : (\r\n        <ChemicalSubcategoryPage />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["GradeSidebar","categorySlug","chemicals","selectedGrades","setSelectedGrades","Card","className","children","jsxs","CardContent","jsx","length","map","grade","onClick","removeGrade","gradeName","prev","filter","item","X","size","chemical","Checkbox","id","_id","checked","includes","onCheckedChange","handleGradeChange","htmlFor","AlphabetbaseProductTable","currentPage","setCurrentPage","useState","navigate","useNavigate","totalItems","totalPages","Math","ceil","paginatedChemicals","slice","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","auto_p_code","name","formattedName","replace","toLowerCase","handleNameClick","cas_number","Array","from","_","index","page","Button","variant","handlePageChange","Info","letter","itemsPerPage","setItemsPerPage","Select","value","toString","onValueChange","Number","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","AlphabetBasedProduct","location","useLocation","selectedLetter","state","setChemical","isLoading","setIsLoading","error","setError","useEffect","async","response","fetch","ok","Error","data","json","err","message","fetchChemicals","filteredChemicals","Fragment","Breadcrumb","Hello","number","slug","useParams","isProductsPath","pathname","startsWith","ChemicalSubcategoryPage"],"mappings":"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"}