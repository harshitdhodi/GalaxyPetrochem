{"version":3,"file":"EditSupplierForm-BAF1BmFo.js","sources":["../../src/supplier/EditSupplierForm.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useMemo, Suspense } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { useGetSupplierByIdQuery, useUpdateSupplierMutation } from \"@/slice/supplierSlice/SupplierSlice\"\nimport { BreadcrumbWithCustomSeparator } from \"@/breadCrumb/BreadCrumb\"\n\nconst LoadingSpinner = () => (\n  <div className=\"flex items-center justify-center p-4\">\n    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-gray-900\"></div>\n  </div>\n)\n\nconst breadcrumbItems = [\n  { label: \"Dashboard\", href: \"/dashboard\" },\n  { label: \"Supplier Table\", href: \"/supplier-table\" },\n  { label: \"Edit Supplier Form\", href: null },\n]\n\nexport default function EditSupplierForm() {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const { data: supplier, isLoading } = useGetSupplierByIdQuery(id)\n  const [updateSupplier] = useUpdateSupplierMutation()\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [submitError, setSubmitError] = useState(null)\n  const [previewImage, setPreviewImage] = useState(null)\n\n  const form = useForm({\n    defaultValues: {\n      name: \"\",\n      mobile: \"\",\n      email: \"\",\n      website: \"\",\n      contact_person: \"\",\n      address: \"\",\n      country: \"\",\n      city: \"\",\n      description: \"\",\n      image: null,\n    },\n  })\n\n  useEffect(() => {\n    if (supplier) {\n      form.reset({\n        name: supplier.name || \"\",\n        mobile: supplier.mobile || \"\",\n        email: supplier.email || \"\",\n        website: supplier.website || \"\",\n        contact_person: supplier.contact_person || \"\",\n        address: supplier.address || \"\",\n        country: supplier.country || \"\",\n        city: supplier.city || \"\",\n        description: supplier.description || \"\",\n      })\n\n      if (supplier.image) {\n        setPreviewImage(`/api/image/download/${supplier.image}`)\n      }\n    }\n  }, [supplier, form])\n\n  async function onSubmit(values) {\n    if (!id) {\n      setSubmitError('No supplier ID found')\n      return\n    }\n\n    setIsSubmitting(true)\n    setSubmitError(null)\n\n    try {\n      let updateData = { ...values }\n      delete updateData.image // Remove the image field initially\n\n      if (values.image && values.image[0]) {\n        const formData = new FormData()\n        Object.keys(updateData).forEach(key => {\n          formData.append(key, updateData[key])\n        })\n        formData.append('image', values.image[0])\n        await updateSupplier({ updatedSupplier: formData, id }).unwrap()\n      } else {\n        await updateSupplier({ updatedSupplier: updateData, id }).unwrap()\n      }\n\n      navigate(\"/supplier-table\")\n    } catch (error) {\n      console.error('Error updating supplier:', error)\n      setSubmitError(error.data?.message || 'Failed to update supplier. Please try again.')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0]\n    if (file) {\n      setPreviewImage(URL.createObjectURL(file))\n    }\n    form.setValue(\"image\", e.target.files)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"ml-1\">\n        <BreadcrumbWithCustomSeparator items={breadcrumbItems} />\n      </div>\n      <Card className=\"max-w-8xl mt-3 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">Update Supplier</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {submitError && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {submitError}\n            </div>\n          )}\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        Supplier Name <span className=\"text-red-500\">*</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter supplier name\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"contact_person\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Contact Person</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter contact person\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        Email <span className=\"text-red-500\">*</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter email address\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"website\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Website</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter website URL\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"mobile\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        Mobile Number <span className=\"text-red-500\">*</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter mobile number\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"address\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Address</FormLabel>\n                    <FormControl>\n                      <Textarea placeholder=\"Enter address\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <FormField\n                  control={form.control}\n                  name=\"country\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Country</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter country\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"city\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>City</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter city\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea placeholder=\"Enter description\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"image\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Upload Image</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"file\"\n                        onChange={handleImageChange}\n                        accept=\"image/*\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                    {previewImage && (\n                      <div className=\"mt-4\">\n                        <img\n                          src={previewImage}\n                          alt=\"Preview\"\n                          className=\"h-32 w-32 object-cover border\"\n                        />\n                      </div>\n                    )}\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"flex gap-4\">\n                <Button\n                  type=\"submit\"\n                  className=\"bg-green-500 hover:bg-green-600\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Saving...' : 'Save Changes'}\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </>\n  )\n}"],"names":["breadcrumbItems","label","href","EditSupplierForm","navigate","useNavigate","id","useParams","data","supplier","isLoading","useGetSupplierByIdQuery","updateSupplier","useUpdateSupplierMutation","isSubmitting","setIsSubmitting","useState","submitError","setSubmitError","previewImage","setPreviewImage","form","useForm","defaultValues","name","mobile","email","website","contact_person","address","country","city","description","image","useEffect","reset","handleImageChange","e","file","target","files","URL","createObjectURL","setValue","jsx","className","children","jsxs","Fragment","BreadcrumbWithCustomSeparator","items","Card","CardHeader","CardTitle","CardContent","Form","onSubmit","handleSubmit","async","values","updateData","formData","FormData","Object","keys","forEach","key","append","updatedSupplier","unwrap","error","message","FormField","control","render","field","FormItem","FormLabel","FormControl","Input","placeholder","FormMessage","Textarea","type","onChange","accept","src","alt","Button","disabled"],"mappings":"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"}