{"version":3,"file":"Career-Dw0ObKky.js","sources":["../../src/website/pages/Career.jsx","../../src/website/images/career.jpg"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\r\nimport { useSubmitApplicationMutation } from \"@/slice/career/CareerForm\";\r\nimport { useGetBannerByPageSlugQuery } from \"@/slice/banner/banner\";\r\nimport { Banner } from \"../componets/Banner\";\r\nimport axios from 'axios';\r\nimport career from '../images/career.jpg';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function CareerForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    contactNo: '',\r\n    postAppliedFor: '',\r\n  });\r\n  const [resumeFile, setResumeFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [captchaValue, setCaptchaValue] = useState(null);\r\n  const [submitApplication, { isLoading }] = useSubmitApplicationMutation();\r\n  const location = useLocation();\r\n  const path = location.pathname.replace(/^\\//, '') || 'career';\r\n  const { data: banners, isLoading: isBannerLoading } = useGetBannerByPageSlugQuery(path);\r\n  const [careerInfo, setCareerInfo] = useState(null);\r\n\r\n  // Create refs for form and reCAPTCHA\r\n  const formRef = useRef(null);\r\n  const recaptchaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/careerInfo')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          setCareerInfo(response.data[0]);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching career info:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const allowedTypes = [\r\n      'application/pdf',\r\n      'application/msword',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ];\r\n    const maxSize = 5 * 1024 * 1024; // 5MB\r\n\r\n    if (file) {\r\n      if (!allowedTypes.includes(file.type)) {\r\n        alert('Please upload only PDF, DOC, or DOCX files');\r\n        e.target.value = null;\r\n        return;\r\n      }\r\n      if (file.size > maxSize) {\r\n        alert('File size must be less than 5MB');\r\n        e.target.value = null;\r\n        return;\r\n      }\r\n      setResumeFile(file);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    // Reset state\r\n    setFormData({\r\n      name: '',\r\n      address: '',\r\n      email: '',\r\n      contactNo: '',\r\n      postAppliedFor: '',\r\n    });\r\n    setResumeFile(null);\r\n\r\n    // Reset the actual form element\r\n    if (formRef.current) {\r\n      formRef.current.reset();\r\n    }\r\n\r\n    // Reset reCAPTCHA\r\n    if (recaptchaRef.current) {\r\n      recaptchaRef.current.reset();\r\n    }\r\n    setCaptchaValue(null);\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    resetForm();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!captchaValue) {\r\n      alert('Please complete the reCAPTCHA');\r\n      return;\r\n    }\r\n\r\n    // Basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      alert('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      const formDataToSend = new FormData();\r\n      Object.keys(formData).forEach(key => {\r\n        formDataToSend.append(key, formData[key]);\r\n      });\r\n      if (resumeFile) {\r\n        formDataToSend.append('resumeFile', resumeFile);\r\n      }\r\n\r\n      // Directly send data using axios\r\n      const response = await axios.post('/api/career/add', formDataToSend, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      resetForm();\r\n      if (response.status === 201) {\r\n        alert('Application submitted successfully!');\r\n        resetForm(); // Use the new resetForm function\r\n      } else {\r\n        // alert('Failed to submit application. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      alert('Failed to submit application: ' + error.response?.data?.message || error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isBannerLoading ? (\r\n        <div>Loading banner...</div>\r\n      ) : (\r\n        <Banner\r\n          imageUrl={banners && banners.length > 0 ? `/api/image/download/${banners[0].image}` : career}\r\n        />\r\n      )}\r\n      <div className=\"sm:max-w-[75rem] w-full mx-auto\">\r\n        <nav className=\"py-4 px-4 sm:px-0 md:px-6\">\r\n          <div className=\"flex border-b border-gray-300 pb-4 items-center space-x-2 text-sm\">\r\n            <Link to=\"/\" className=\"text-primary hover:text-gray-900\">Home</Link>\r\n            <span className=\"text-primary\">Â»</span>\r\n            <span className=\"text-main\">Careers</span>\r\n          </div>\r\n        </nav>\r\n        <div className=\"mb-7 px-4 md:px-6 sm:px-0\">\r\n          <h1 className=\"text-3xl font-bold\">Careers</h1>\r\n          <div className=\"bg-primary h-1 w-12\"></div>\r\n        </div>\r\n        {careerInfo && (\r\n          <>\r\n            <div className=\"mb-4\">\r\n              <div dangerouslySetInnerHTML={{ __html: careerInfo.info }} />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 overflow-hidden w-full gap-7 px-4 md:px-6 sm:px-0\">\r\n              <form ref={formRef} className=\"space-y-6 w-full\" onSubmit={handleSubmit}>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"name\">Name*</Label>\r\n                  <Input\r\n                    id=\"name\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    value={formData.name}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"address\">Address*</Label>\r\n                  <Textarea\r\n                    id=\"address\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    value={formData.address}\r\n                    onChange={handleInputChange}\r\n                    maxLength={500}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"email\">Email*</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    maxLength={100}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"contactNo\">Contact No*</Label>\r\n                  <Input\r\n                    id=\"contactNo\"\r\n                    type=\"tel\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    value={formData.contactNo}\r\n                    onChange={handleInputChange}\r\n                    maxLength={20}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"resume\">Upload Your Resume*</Label>\r\n                  <div className=\"text-sm text-gray-500\">[doc, docx, or pdf, max 5MB]</div>\r\n                  <Input\r\n                    id=\"resume\"\r\n                    type=\"file\"\r\n                    accept=\".doc,.docx,.pdf\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"postAppliedFor\">Post Applied For*</Label>\r\n                  <Input\r\n                    id=\"postAppliedFor\"\r\n                    required\r\n                    className=\"rounded-none\"\r\n                    value={formData.postAppliedFor}\r\n                    onChange={handleInputChange}\r\n                    maxLength={100}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2   \">\r\n                  <ReCAPTCHA\r\n                    ref={recaptchaRef}\r\n                    sitekey={import.meta.env.VITE_SITE_KEY}\r\n                    onChange={(value) => setCaptchaValue(value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"bg-main rounded-sm text-lg py-3 hover:bg-main_light\"\r\n                    disabled={isLoading || isUploading}\r\n                  >\r\n                    {isLoading || isUploading ? 'Submitting...' : 'Submit'}\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"destructive\"\r\n                    className=\"bg-primary hover:bg-secondary text-lg py-3 rounded-sm\"\r\n                    onClick={handleReset}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n\r\n              <div className=\"flex flex-col items-center justify-start w-full\">\r\n                <div className=\"w-full flex justify-center items-center\">\r\n                  <img\r\n                    src={careerInfo.image ? `/api/image/download/${careerInfo.image}` : \"no-image\"}\r\n                    alt=\"Career growth illustration\"\r\n                    className=\"object-contain w-full max-h-80\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}","export default \"__VITE_ASSET__C9j_GlzF__\""],"names":["CareerForm","formData","setFormData","useState","name","address","email","contactNo","postAppliedFor","resumeFile","setResumeFile","isUploading","setIsUploading","captchaValue","setCaptchaValue","submitApplication","isLoading","useSubmitApplicationMutation","path","useLocation","pathname","replace","data","banners","isBannerLoading","useGetBannerByPageSlugQuery","careerInfo","setCareerInfo","formRef","useRef","recaptchaRef","useEffect","axios","get","then","response","length","catch","error","handleInputChange","e","id","value","target","prev","resetForm","current","reset","jsxs","Fragment","children","jsx","Banner","imageUrl","image","className","Link","to","dangerouslySetInnerHTML","__html","info","ref","onSubmit","async","preventDefault","alert","test","formDataToSend","FormData","Object","keys","forEach","key","append","post","headers","status","message","Label","htmlFor","Input","required","onChange","Textarea","maxLength","type","accept","file","files","includes","size","ReCAPTCHA","sitekey","Button","disabled","variant","onClick","src","alt"],"mappings":"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"}