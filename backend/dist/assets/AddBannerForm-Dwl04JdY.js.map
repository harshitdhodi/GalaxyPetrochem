{"version":3,"file":"AddBannerForm-Dwl04JdY.js","sources":["../../src/websiteBackend/banner/AddBannerForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, message, Upload, Breadcrumb, Select } from 'antd';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useCreateBannerMutation } from '../../slice/banner/banner';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { UploadOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddBannerForm = () => {\r\n  const navigate = useNavigate();\r\n  const [form] = Form.useForm();\r\n  const [createBanner] = useCreateBannerMutation();\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [menuList, setMenuList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMenuList = async () => {\r\n      try {\r\n        const response = await axios.get('/api/menulist/get-menu');\r\n        if (response.data.success) {\r\n          setMenuList(response.data.data);\r\n        } else {\r\n          message.error('Failed to load menu list');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching menu list:', error);\r\n        message.error('Error fetching menu list');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMenuList();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const formData = new FormData();\r\n      if (values.image?.[0]?.originFileObj) {\r\n        formData.append('image', values.image[0].originFileObj);\r\n        formData.append('imgName', values.imgName); // Use the manually entered imgName\r\n      } else {\r\n        message.error('Please select an image');\r\n        return;\r\n      }\r\n\r\n      if (values.photo?.[0]?.originFileObj) {\r\n        formData.append('photo', values.photo[0].originFileObj);\r\n      } else {\r\n        message.error('Please select a photo');\r\n        return;\r\n      }\r\n\r\n      formData.append('title', values.title);\r\n      formData.append('altName', values.altName);\r\n      formData.append('details', values.details);\r\n      formData.append('pageSlug', values.pageSlug);\r\n\r\n      await createBanner(formData);\r\n      message.success('Banner created successfully');\r\n      navigate('/banner-table');\r\n    } catch (error) {\r\n      console.error(error);\r\n      message.error('Failed to create banner');\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (info) => {\r\n    const file = info.fileList[0];\r\n    if (file?.originFileObj) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreviewUrl(reader.result);\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n\r\n      // Only set the image field, not imgName\r\n      form.setFieldsValue({\r\n        image: info.fileList,\r\n      });\r\n    } else {\r\n      setPreviewUrl(null);\r\n    }\r\n  };\r\n\r\n  const handlePhotoChange = (info) => {\r\n    const file = info.fileList[0];\r\n    if (file?.originFileObj) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreviewUrl(reader.result);\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n\r\n      // Only set the photo field\r\n      form.setFieldsValue({\r\n        photo: info.fileList,\r\n      });\r\n    } else {\r\n      setPreviewUrl(null);\r\n    }\r\n  };\r\n\r\n  const renderMenuOptions = (menu) => {\r\n    return (\r\n      <React.Fragment key={menu._id}>\r\n        <Option value={menu.parent.path} style={{ fontWeight: \"bold\" }}>\r\n          {menu.parent.name}\r\n        </Option>\r\n        {menu.children.map((child) => (\r\n          <React.Fragment key={child._id}>\r\n            <Option value={child.path} style={{ paddingLeft: 20 }}>\r\n              <span> ├── </span>{child.name}\r\n            </Option>\r\n            {child.subChildren.map((subChild) => (\r\n              <Option key={subChild._id} value={subChild.path} style={{ paddingLeft: 40 }}>\r\n                <span>├────</span> {subChild.name}\r\n              </Option>\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb style={{ padding: '16px 24px' }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/dashboard\">\r\n            <HomeOutlined /> Dashboard\r\n          </Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/banner-table\">Banner Management</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Add New Banner</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n\r\n      <div style={{ padding: '24px' }}>\r\n        <h1 className=\"text-2xl font-bold mb-6\">Add New Banner</h1>\r\n        <Form form={form} layout=\"vertical\" onFinish={onFinish}>\r\n          <Form.Item name=\"pageSlug\" label=\"Page Slug\" rules={[{ required: true, message: 'Please select a page slug!' }]}>\r\n            <Select placeholder=\"Select a menu item\" loading={loading}>\r\n              {menuList.map(menu => renderMenuOptions(menu))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name=\"image\" label=\"Banner Image\" rules={[{ required: true, message: 'Please upload an image!' }]}>\r\n            <Upload maxCount={1} listType=\"picture\" beforeUpload={() => false} onChange={handleImageChange}>\r\n              <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"photo\" label=\"Photo\" rules={[{ required: true, message: 'Please upload a photo!' }]}>\r\n            <Upload maxCount={1} listType=\"picture\" beforeUpload={() => false} onChange={handlePhotoChange}>\r\n              <Button icon={<UploadOutlined />}>Upload Photo</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"imgName\" label=\"Image Name\" rules={[{ required: true, message: 'Please input image name!' }]}>\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"title\" label=\"Title\">\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"altName\" label=\"Alt Name\" rules={[{ required: true, message: 'Please input alt name!' }]}>\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"details\" label=\"Details\">\r\n            <ReactQuill theme=\"snow\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBannerForm;"],"names":["Option","Select","AddBannerForm","navigate","useNavigate","form","Form","useForm","createBanner","useCreateBannerMutation","previewUrl","setPreviewUrl","useState","menuList","setMenuList","loading","setLoading","useEffect","async","response","axios","get","data","success","message","error","fetchMenuList","children","jsxs","Breadcrumb","style","padding","jsx","Item","Link","to","HomeOutlined","className","layout","onFinish","values","formData","FormData","image","originFileObj","append","imgName","photo","title","altName","details","pageSlug","name","label","rules","required","placeholder","map","menu","React","Fragment","value","parent","path","fontWeight","child","paddingLeft","subChildren","subChild","_id","renderMenuOptions","Upload","maxCount","listType","beforeUpload","onChange","info","file","fileList","reader","FileReader","onload","result","readAsDataURL","setFieldsValue","Button","icon","UploadOutlined","Input","ReactQuill","theme","type","htmlType"],"mappings":"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"}