import{j as l,r as s,aO as z,aP as D,aQ as L,aR as G,aS as v,aT as Y,aU as k,aV as B,aW as Z,aX as q,aY as Q,aZ as y,a_ as U,a$ as X,b0 as d,b1 as x}from"./index-BBIQ2JaG-1746426193025.js";var J=s.forwardRef((e,a)=>{const{children:t,...o}=e,r=s.Children.toArray(t),n=r.find(K);if(n){const i=n.props.children,p=r.map(g=>g===n?s.Children.count(i)>1?s.Children.only(null):s.isValidElement(i)?i.props.children:null:g);return l.jsx(m,{...o,ref:a,children:s.isValidElement(i)?s.cloneElement(i,void 0,p):null})}return l.jsx(m,{...o,ref:a,children:t})});J.displayName="Slot";var m=s.forwardRef((e,a)=>{const{children:t,...o}=e;if(s.isValidElement(t)){const r=ae(t),n=ee(o,t.props);return t.type!==s.Fragment&&(n.ref=a?z(a,r):r),s.cloneElement(t,n)}return s.Children.count(t)>1?s.Children.only(null):null});m.displayName="SlotClone";var N=({children:e})=>l.jsx(l.Fragment,{children:e});function K(e){return s.isValidElement(e)&&e.type===N}function ee(e,a){const t={...a};for(const o in a){const r=e[o],n=a[o];/^on[A-Z]/.test(o)?r&&n?t[o]=(...p)=>{n(...p),r(...p)}:r&&(t[o]=r):o==="style"?t[o]={...r,...n}:o==="className"&&(t[o]=[r,n].filter(Boolean).join(" "))}return{...e,...t}}function ae(e){var o,r;let a=(o=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:o.get,t=a&&"isReactWarning"in a&&a.isReactWarning;return t?e.ref:(a=(r=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:r.get,t=a&&"isReactWarning"in a&&a.isReactWarning,t?e.props.ref:e.props.ref||e.ref)}var R="AlertDialog",[te,Re]=k(R,[D]),c=D(),h=e=>{const{__scopeAlertDialog:a,...t}=e,o=c(a);return l.jsx(L,{...o,...t,modal:!0})};h.displayName=R;var oe="AlertDialogTrigger",re=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,r=c(t);return l.jsx(X,{...r,...o,ref:a})});re.displayName=oe;var se="AlertDialogPortal",j=e=>{const{__scopeAlertDialog:a,...t}=e,o=c(a);return l.jsx(G,{...o,...t})};j.displayName=se;var le="AlertDialogOverlay",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,r=c(t);return l.jsx(U,{...r,...o,ref:a})});E.displayName=le;var f="AlertDialogContent",[ne,ie]=te(f),C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:o,...r}=e,n=c(t),i=s.useRef(null),p=v(a,i),g=s.useRef(null);return l.jsx(Y,{contentName:f,titleName:_,docsSlug:"alert-dialog",children:l.jsx(ne,{scope:t,cancelRef:g,children:l.jsxs(B,{role:"alertdialog",...n,...r,ref:p,onOpenAutoFocus:Z(r.onOpenAutoFocus,u=>{var A;u.preventDefault(),(A=g.current)==null||A.focus({preventScroll:!0})}),onPointerDownOutside:u=>u.preventDefault(),onInteractOutside:u=>u.preventDefault(),children:[l.jsx(N,{children:o}),l.jsx(de,{contentRef:i})]})})})});C.displayName=f;var _="AlertDialogTitle",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,r=c(t);return l.jsx(q,{...r,...o,ref:a})});b.displayName=_;var w="AlertDialogDescription",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,r=c(t);return l.jsx(Q,{...r,...o,ref:a})});P.displayName=w;var ce="AlertDialogAction",S=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,r=c(t);return l.jsx(y,{...r,...o,ref:a})});S.displayName=ce;var O="AlertDialogCancel",T=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...o}=e,{cancelRef:r}=ie(O,t),n=c(t),i=v(a,r);return l.jsx(y,{...n,...o,ref:i})});T.displayName=O;var de=({contentRef:e})=>{const a=`\`${f}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${f}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${f}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var o;document.getElementById((o=e.current)==null?void 0:o.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},pe=h,fe=j,$=E,M=C,V=S,I=T,W=b,F=P;const he=pe,ge=fe,H=s.forwardRef(({className:e,...a},t)=>l.jsx($,{className:d("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));H.displayName=$.displayName;const ue=s.forwardRef(({className:e,...a},t)=>l.jsxs(ge,{children:[l.jsx(H,{}),l.jsx(M,{ref:t,className:d("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));ue.displayName=M.displayName;const me=({className:e,...a})=>l.jsx("div",{className:d("flex flex-col space-y-2 text-center sm:text-left",e),...a});me.displayName="AlertDialogHeader";const Ae=({className:e,...a})=>l.jsx("div",{className:d("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});Ae.displayName="AlertDialogFooter";const De=s.forwardRef(({className:e,...a},t)=>l.jsx(W,{ref:t,className:d("text-lg font-semibold",e),...a}));De.displayName=W.displayName;const ve=s.forwardRef(({className:e,...a},t)=>l.jsx(F,{ref:t,className:d("text-sm text-muted-foreground",e),...a}));ve.displayName=F.displayName;const ye=s.forwardRef(({className:e,...a},t)=>l.jsx(V,{ref:t,className:d(x(),e),...a}));ye.displayName=V.displayName;const xe=s.forwardRef(({className:e,...a},t)=>l.jsx(I,{ref:t,className:d(x({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));xe.displayName=I.displayName;export{he as A,ue as a,me as b,De as c,ve as d,Ae as e,xe as f,ye as g};
