{"version":3,"file":"TermsCondtion-Cu3qny9S.js","sources":["../../src/websiteBackend/privacy/TermsCondtion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, message, Breadcrumb } from 'antd';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios';\r\n\r\nconst TermsConditionForm = () => {\r\n  const navigate = useNavigate();\r\n  const [form] = Form.useForm();\r\n  const [termsCondition, setTermsCondition] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isExistingData, setIsExistingData] = useState(false);\r\n  const [termsConditionId, setTermsConditionId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTermsConditionData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/terms');\r\n        if (response.data.length > 0) {\r\n          const termsConditionData = response.data[0]; // Assuming the API returns an array with one object\r\n          setTermsCondition(termsConditionData.termsCondition);\r\n          setTermsConditionId(termsConditionData._id);\r\n          form.setFieldsValue({\r\n            termsCondition: termsConditionData.termsCondition,\r\n          });\r\n          setIsExistingData(true);\r\n        }\r\n      } catch (error) {\r\n        message.error('Failed to fetch terms and conditions data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTermsConditionData();\r\n  }, [form]);\r\n\r\n  const handleFinish = async () => {\r\n    try {\r\n      if (isExistingData) {\r\n        await axios.put(`/api/terms/${termsConditionId}`, { termsCondition });\r\n        message.success('Terms and conditions data updated successfully');\r\n      } else {\r\n        await axios.post('/api/terms/add', { termsCondition });\r\n        message.success('Terms and conditions data created successfully');\r\n      }\r\n      // navigate('/termscondition');\r\n    } catch (error) {\r\n      message.error('Failed to save terms and conditions data');\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb style={{ marginBottom: '16px' }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Terms and Conditions Form</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form form={form} layout=\"vertical\" onFinish={handleFinish}>\r\n        <Form.Item \r\n          name=\"termsCondition\" \r\n          label=\"Terms and Conditions\" \r\n          rules={[{ required: true, message: 'Please enter the terms and conditions' }]}\r\n        >\r\n          <ReactQuill \r\n            theme=\"snow\" \r\n            value={termsCondition} \r\n            onChange={setTermsCondition} \r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TermsConditionForm;"],"names":["TermsConditionForm","useNavigate","form","Form","useForm","termsCondition","setTermsCondition","useState","isLoading","setIsLoading","isExistingData","setIsExistingData","termsConditionId","setTermsConditionId","useEffect","async","response","axios","get","data","length","termsConditionData","_id","setFieldsValue","error","message","fetchTermsConditionData","jsx","children","jsxs","Fragment","Breadcrumb","style","marginBottom","Item","Link","to","layout","onFinish","put","success","post","name","label","rules","required","ReactQuill","theme","value","onChange","Button","type","htmlType"],"mappings":"sfAOA,MAAMA,EAAqB,KACRC,IACjB,MAAOC,GAAQC,EAAKC,WACbC,EAAgBC,GAAqBC,EAAAA,SAAS,KAC9CC,EAAWC,GAAgBF,EAAAA,UAAS,IACpCG,EAAgBC,GAAqBJ,EAAAA,UAAS,IAC9CK,EAAkBC,GAAuBN,EAAAA,SAAS,MAEzDO,EAAAA,WAAU,KACwBC,WAC1B,IACF,MAAMC,QAAiBC,EAAMC,IAAI,cAC7B,GAAAF,EAASG,KAAKC,OAAS,EAAG,CACtB,MAAAC,EAAqBL,EAASG,KAAK,GACzCb,EAAkBe,EAAmBhB,gBACrCQ,EAAoBQ,EAAmBC,KACvCpB,EAAKqB,eAAe,CAClBlB,eAAgBgB,EAAmBhB,iBAErCM,GAAkB,EAAI,QAEjBa,GACPC,EAAQD,MAAM,4CAA2C,CACzD,QACAf,GAAa,EAAK,GAIEiB,EAAA,GACvB,CAACxB,IAiBJ,OAAIM,EAAmBmB,EAAAA,IAAA,IAAA,CAAEC,SAAU,eAI/BC,EAAAA,KAAAC,WAAA,CAAAF,SAAA,CAAAC,EAAAA,KAACE,EAAW,CAAAC,MAAO,CAAEC,aAAc,QACjCL,SAAA,CAACD,EAAAA,IAAAI,EAAWG,KAAX,CACCN,SAAAD,EAAAA,IAACQ,GAAKC,GAAG,aAAaR,yBAEvBD,EAAAA,IAAAI,EAAWG,KAAX,CAAgBN,SAAyB,wCAE3CzB,EAAK,CAAAD,OAAYmC,OAAO,WAAWC,SAzBnBvB,UACf,IACEL,SACIO,EAAMsB,IAAI,cAAc3B,IAAoB,CAAEP,mBACpDoB,EAAQe,QAAQ,0DAEVvB,EAAMwB,KAAK,iBAAkB,CAAEpC,mBACrCoB,EAAQe,QAAQ,yDAGXhB,GACPC,EAAQD,MAAM,2CAA0C,GAetDI,SAAA,CAAAD,EAAAA,IAACxB,EAAK+B,KAAL,CACCQ,KAAK,iBACLC,MAAM,uBACNC,MAAO,CAAC,CAAEC,UAAU,EAAMpB,QAAS,0CAEnCG,SAAAD,EAAAA,IAACmB,EAAA,CACCC,MAAM,OACNC,MAAO3C,EACP4C,SAAU3C,MAGdqB,EAAAA,IAACxB,EAAK+B,KAAL,CACCN,SAAAD,EAAAA,IAACuB,EAAO,CAAAC,KAAK,UAAUC,SAAS,SAASxB,SAAA,gBAK/C"}