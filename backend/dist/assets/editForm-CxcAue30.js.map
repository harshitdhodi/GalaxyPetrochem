{"version":3,"file":"editForm-CxcAue30.js","sources":["../../src/email/smtp_setting/editForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useGetServerByIdQuery, useUpdateServerMutation } from '@/slice/smtpSlice/smtp';\r\n\r\nconst EditSMTP = () => {\r\n  const { id } = useParams(); // Get the server ID from the URL params\r\n  const navigate = useNavigate();\r\n  \r\n  const { data: serverResponse, isLoading, error } = useGetServerByIdQuery(id); // Fetch the server data by ID\r\n  const [updateServer, { isLoading: isUpdating, error: updateError }] = useUpdateServerMutation();\r\n\r\n  const [formData, setFormData] = useState({\r\n    host: '',\r\n    name: '',\r\n    isSSL: false,\r\n    isDefault: false,\r\n    password: '', // Assuming password can be updated\r\n  });\r\n\r\n  // Set initial form values when server data is fetched\r\n  useEffect(() => {\r\n    if (serverResponse && serverResponse.data) {\r\n      const server = serverResponse.data;\r\n      setFormData({\r\n        host: server.host || '',\r\n        name: server.name || '',\r\n        isSSL: server.isSSL || false,\r\n        isDefault: server.isDefault || false,\r\n        password: server.password || '', // Set the password if needed\r\n      });\r\n    }\r\n  }, [serverResponse]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!id) {\r\n      console.error(\"Server ID is not defined.\");\r\n      return;\r\n    }\r\n  \r\n    // Ensure the form data is passed as 'updatedServer'\r\n    const updatedServer = { ...formData };\r\n  \r\n    try {\r\n      // Pass the server ID and updated server data to the mutation\r\n      await updateServer({ id, updatedServer }).unwrap(); // Ensure id and updatedServer are passed correctly\r\n      navigate('/smtp-table'); // Redirect after update\r\n    } catch (err) {\r\n      console.error('Failed to update server:', err);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error fetching server data: {error.message}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 w-full max-w-2xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Edit SMTP Server</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Host */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"host\">\r\n            Host\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"host\"\r\n            name=\"host\"\r\n            value={formData.host}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full p-2 border rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Name */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full p-2 border rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* SSL */}\r\n        <div className=\"mb-4 flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isSSL\"\r\n            name=\"isSSL\"\r\n            checked={formData.isSSL}\r\n            onChange={handleChange}\r\n            className=\"mr-2\"\r\n          />\r\n          <label className=\"text-sm font-medium text-gray-700\" htmlFor=\"isSSL\">\r\n            Use SSL\r\n          </label>\r\n        </div>\r\n\r\n        {/* Default */}\r\n        <div className=\"mb-4 flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isDefault\"\r\n            name=\"isDefault\"\r\n            checked={formData.isDefault}\r\n            onChange={handleChange}\r\n            className=\"mr-2\"\r\n          />\r\n          <label className=\"text-sm font-medium text-gray-700\" htmlFor=\"isDefault\">\r\n            Set as Default\r\n          </label>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full p-2 border rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isUpdating}\r\n            className=\"w-full\"\r\n          >\r\n            {isUpdating ? 'Updating...' : 'Update SMTP Server'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Error Display */}\r\n      {updateError && (\r\n        <div className=\"mt-4 text-red-500\">\r\n          <p>Error updating the server: {updateError.message}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditSMTP;\r\n"],"names":["EditSMTP","id","useParams","navigate","useNavigate","data","serverResponse","isLoading","error","useGetServerByIdQuery","updateServer","isUpdating","updateError","useUpdateServerMutation","formData","setFormData","useState","host","name","isSSL","isDefault","password","useEffect","server","handleChange","e","value","type","checked","target","prev","jsx","children","message","jsxs","className","onSubmit","async","preventDefault","updatedServer","unwrap","err","htmlFor","onChange","required","Button","variant","disabled"],"mappings":"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"}