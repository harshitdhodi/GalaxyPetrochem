{"version":3,"file":"CareerInfoForm-DTcYl_w6.js","sources":["../../src/websiteBackend/career/CareerInfoForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Upload, message, Image, Breadcrumb, Typography } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst CareerInfoForm = () => {\r\n  const [form] = Form.useForm();\r\n  const [info, setInfo] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [careerInfo, setCareerInfo] = useState(null);\r\n\r\n  const fetchCareerInfo = async () => {\r\n    try {\r\n      const response = await axios.get('/api/careerInfo');\r\n      if (response.data.length > 0) {\r\n        const data = response.data[0];\r\n        setCareerInfo(data);\r\n        setInfo(data.info);\r\n        form.setFieldsValue({ info: data.info });\r\n        if (data.image) {\r\n          setImageUrl(`/api/image/download/${data.image}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching career info:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCareerInfo();\r\n  }, [form]);\r\n\r\n  const handleInfoChange = (newInfo) => {\r\n    setInfo(newInfo);\r\n\r\n    // Convert white text to black for visibility\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(newInfo, 'text/html');\r\n    const elements = doc.getElementsByTagName('*');\r\n    for (let element of elements) {\r\n      if (element.style.color === 'white' || element.style.color === '#ffffff') {\r\n        element.style.color = 'black';\r\n      }\r\n    }\r\n    setInfo(doc.body.innerHTML);\r\n  };\r\n\r\n  const handleImageChange = ({ file }) => {\r\n    setImage(file);\r\n    setImageUrl(URL.createObjectURL(file));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const formData = new FormData();\r\n    formData.append('info', info);\r\n    if (image) {\r\n      formData.append('image', image);\r\n    }\r\n\r\n    try {\r\n      if (careerInfo) {\r\n        await axios.put(`/api/careerInfo/${careerInfo._id}`, formData);\r\n        message.success('Career info updated successfully');\r\n      } else {\r\n        await axios.post('/api/careerInfo', formData);\r\n        message.success('Career info created successfully');\r\n      }\r\n      fetchCareerInfo();\r\n    } catch (error) {\r\n      console.error('Error saving career info:', error);\r\n      message.error('Error saving career info');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/dashboard\">Dashboard</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Career Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Title level={2} style={{ margin: '16px 0' }}>Career Info</Title>\r\n      <Form form={form} onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item label=\"Info\" name=\"info\" rules={[{ required: true, message: 'Please enter the info' }]}>\r\n          <ReactQuill\r\n            value={info}\r\n            onChange={handleInfoChange}\r\n            modules={{\r\n              toolbar: [\r\n                [{ header: '1' }, { header: '2' }, { font: [] }],\r\n                [{ list: 'ordered' }, { list: 'bullet' }],\r\n                ['bold', 'italic', 'underline', 'blockquote'],\r\n                [{ align: [] }],\r\n                ['link', 'image', 'video'],\r\n                ['clean']\r\n              ]\r\n            }}\r\n            formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'blockquote', 'align', 'link', 'image', 'video']}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Image\" name=\"image\">\r\n          {imageUrl && <Image width={200} src={imageUrl} alt=\"Career Info Image\" />}\r\n          <Upload beforeUpload={() => false} onChange={handleImageChange} maxCount={1}>\r\n            <Button icon={<UploadOutlined />}>Select Image</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {careerInfo ? 'Update' : 'Submit'}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CareerInfoForm;"],"names":["Title","Typography","CareerInfoForm","form","Form","useForm","info","setInfo","useState","image","setImage","imageUrl","setImageUrl","careerInfo","setCareerInfo","fetchCareerInfo","async","response","axios","get","data","length","setFieldsValue","error","useEffect","children","jsxs","Breadcrumb","jsx","Item","href","level","style","margin","onFinish","formData","FormData","append","put","_id","message","success","post","layout","label","name","rules","required","ReactQuill","value","onChange","newInfo","doc","DOMParser","parseFromString","elements","getElementsByTagName","element","color","body","innerHTML","modules","toolbar","header","font","list","align","formats","Image","width","src","alt","Upload","beforeUpload","file","URL","createObjectURL","maxCount","Button","icon","UploadOutlined","type","htmlType"],"mappings":"2zBAOA,MAAMA,MAAEA,GAAUC,EAEZC,EAAiB,KACrB,MAAOC,GAAQC,EAAKC,WACbC,EAAMC,GAAWC,EAAAA,SAAS,KAC1BC,EAAOC,GAAYF,EAAAA,SAAS,OAC5BG,EAAUC,GAAeJ,EAAAA,SAAS,OAClCK,EAAYC,GAAiBN,EAAAA,SAAS,MAEvCO,EAAkBC,UAClB,IACF,MAAMC,QAAiBC,EAAMC,IAAI,mBAC7B,GAAAF,EAASG,KAAKC,OAAS,EAAG,CACtB,MAAAD,EAAOH,EAASG,KAAK,GAC3BN,EAAcM,GACdb,EAAQa,EAAKd,MACbH,EAAKmB,eAAe,CAAEhB,KAAMc,EAAKd,OAC7Bc,EAAKX,OACKG,EAAA,uBAAuBQ,EAAKX,QAC1C,QAEKc,GAC2C,GAItDC,EAAAA,WAAU,KACQT,GAAA,GACf,CAACZ,IA4CJ,cACG,MACC,CAAAsB,SAAA,CAAAC,OAACC,EACC,CAAAF,SAAA,CAAAG,EAAAA,IAACD,EAAWE,KAAX,CAAgBC,KAAK,aAAaL,SAAS,cAC3CG,EAAAA,IAAAD,EAAWE,KAAX,CAAgBJ,SAAW,mBAE9BG,EAAAA,IAAC5B,GAAM+B,MAAO,EAAGC,MAAO,CAAEC,OAAQ,UAAYR,SAAW,uBACxDrB,EAAK,CAAAD,OAAY+B,SA7BDlB,UACb,MAAAmB,EAAW,IAAIC,SACZD,EAAAE,OAAO,OAAQ/B,GACpBG,GACO0B,EAAAE,OAAO,QAAS5B,GAGvB,IACEI,SACIK,EAAMoB,IAAI,mBAAmBzB,EAAW0B,MAAOJ,GACrDK,EAAQC,QAAQ,4CAEVvB,EAAMwB,KAAK,kBAAmBP,GACpCK,EAAQC,QAAQ,qCAEF1B,UACTQ,GAEPiB,EAAQjB,MAAM,2BAA0B,GAWEoB,OAAO,WAC/ClB,SAAA,CAAAG,EAAAA,IAACxB,EAAKyB,KAAL,CAAUe,MAAM,OAAOC,KAAK,OAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,0BACrEf,SAAAG,EAAAA,IAACoB,EAAA,CACCC,MAAO3C,EACP4C,SArDgBC,IACxB5C,EAAQ4C,GAGF,MACAC,GADS,IAAIC,WACAC,gBAAgBH,EAAS,aACtCI,EAAWH,EAAII,qBAAqB,KAC1C,IAAA,IAASC,KAAWF,EACU,UAAxBE,EAAQzB,MAAM0B,OAA6C,YAAxBD,EAAQzB,MAAM0B,QACnDD,EAAQzB,MAAM0B,MAAQ,SAGlBnD,EAAA6C,EAAIO,KAAKC,UAAS,EA0ClBC,QAAS,CACPC,QAAS,CACP,CAAC,CAAEC,OAAQ,KAAO,CAAEA,OAAQ,KAAO,CAAEC,KAAM,KAC3C,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,OAAQ,SAAU,YAAa,cAChC,CAAC,CAAEC,MAAO,KACV,CAAC,OAAQ,QAAS,SAClB,CAAC,WAGLC,QAAS,CAAC,SAAU,OAAQ,OAAQ,OAAQ,SAAU,YAAa,aAAc,QAAS,OAAQ,QAAS,oBAG9G/D,EAAKyB,KAAL,CAAUe,MAAM,QAAQC,KAAK,QAC3BpB,SAAA,CAAAd,SAAayD,EAAM,CAAAC,MAAO,IAAKC,IAAK3D,EAAU4D,IAAI,4BAClDC,EAAO,CAAAC,aAAc,KAAM,EAAOvB,SAtDjB,EAAGwB,WAC3BhE,EAASgE,GACG9D,EAAA+D,IAAIC,gBAAgBF,GAAK,EAoDiCG,SAAU,EACxEpD,SAAAG,EAAAA,IAACkD,GAAOC,KAAMnD,MAACoD,EAAe,CAAA,GAAIvD,+BAGrCG,EAAAA,IAAAxB,EAAKyB,KAAL,CACCJ,SAACG,EAAAA,IAAAkD,EAAA,CAAOG,KAAK,UAAUC,SAAS,SAC7BzD,SAAaZ,EAAA,SAAW,kBAIjC"}