{"version":3,"file":"StatusTable-_fTEyWcs.js","sources":["../../src/inquiry/status/AddStatus.jsx","../../src/inquiry/status/StatusTable.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { \r\n  useCreateStatusMutation, \r\n  useUpdateStatusMutation,\r\n  useGetStatusByIdQuery \r\n} from '@/slice/status/status';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogClose\r\n} from '@/components/ui/dialog';\r\n\r\nexport const StatusForm = ({ closeModal, statusToEdit }) => {\r\n    console.log(statusToEdit)\r\n  const { \r\n    register, \r\n    handleSubmit, \r\n    reset, \r\n    formState: { errors } \r\n  } = useForm();\r\n\r\n  // Fetch existing status data\r\n  const { data: existingStatus } = useGetStatusByIdQuery(statusToEdit?._id, {\r\n    skip: !statusToEdit\r\n  });\r\nconsole.log(existingStatus)\r\n  const [createStatus, { isLoading: isCreating, isSuccess: isCreateSuccess, isError: isCreateError }] = useCreateStatusMutation();\r\n  const [updateStatus, { isLoading: isUpdating, isSuccess: isUpdateSuccess, isError: isUpdateError }] = useUpdateStatusMutation(statusToEdit?._id);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (statusToEdit) {\r\n        await updateStatus({ id: statusToEdit._id, ...data }).unwrap();\r\n      } else {\r\n        await createStatus(data).unwrap();\r\n      }\r\n      reset();\r\n    } catch (error) {\r\n      console.error('Failed to save status:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isCreateSuccess || isUpdateSuccess) {\r\n      closeModal();\r\n    }\r\n  }, [isCreateSuccess, isUpdateSuccess, closeModal]);\r\n\r\n  useEffect(() => {\r\n    const statusToPopulate = existingStatus || statusToEdit;\r\n    if (statusToPopulate) {\r\n      reset({ status: statusToPopulate.status });\r\n    }\r\n  }, [existingStatus, statusToEdit, reset]);\r\n\r\n  return (\r\n    <DialogContent>\r\n      <DialogHeader>\r\n        <DialogTitle>{statusToEdit ? 'Edit Status' : 'Add Status'}</DialogTitle>\r\n        <DialogDescription>\r\n          {statusToEdit ? 'Edit the status details below.' : 'Fill out the form below to create a new status.'}\r\n        </DialogDescription>\r\n      </DialogHeader>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"status\" className=\"block text-sm font-medium mb-2\">\r\n            Status\r\n          </label>\r\n          <input\r\n            id=\"status\"\r\n            {...register('status', { \r\n              required: 'Status is required',\r\n              minLength: { value: 2, message: 'Status must be at least 2 characters' }\r\n            })}\r\n            className={`w-full px-3 py-2 border rounded ${errors.status ? 'border-red-500' : ''}`}\r\n            placeholder=\"Enter status name\"\r\n          />\r\n          {errors.status && <p className=\"text-red-500 text-sm mt-1\">{errors.status.message}</p>}\r\n        </div>\r\n        \r\n        <Button \r\n          type=\"submit\" \r\n          className=\"w-full\" \r\n          disabled={isCreating || isUpdating}\r\n        >\r\n          {isCreating || isUpdating ? 'Submitting...' : statusToEdit ? 'Update' : 'Submit'}\r\n        </Button>\r\n\r\n        {(isCreateSuccess || isUpdateSuccess) && (\r\n          <p className=\"text-green-500\">\r\n            {statusToEdit ? 'Status updated successfully!' : 'Status added successfully!'}\r\n          </p>\r\n        )}\r\n        {(isCreateError || isUpdateError) && (\r\n          <p className=\"text-red-500\">Error processing status.</p>\r\n        )}\r\n      </form>\r\n\r\n      <DialogClose />\r\n    </DialogContent>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useGetAllStatusesQuery, useDeleteStatusMutation } from '@/slice/status/status';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus,Edit, Trash } from 'lucide-react';\r\nimport { StatusForm } from './AddStatus';\r\nimport {\r\n  Dialog,\r\n  DialogTrigger\r\n} from '@/components/ui/dialog';\r\n\r\nexport const StatusTable = () => {\r\n  const { data: statusesResponse, isLoading, isError } = useGetAllStatusesQuery();\r\n  const [deleteStatus] = useDeleteStatusMutation(); // Hook for delete mutation\r\n  const [statusToEdit, setStatusToEdit] = useState(null); // Track the status being edited\r\n  const statuses = statusesResponse?.data;\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteStatus(id).unwrap(); // Perform the delete operation\r\n      alert('Status deleted successfully!');\r\n    } catch (error) {\r\n      alert('Failed to delete status.');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (status) => {\r\n    console.log(status)\r\n    setStatusToEdit(status);  // Set the status being edited\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setStatusToEdit(null);  // Clear the statusToEdit when modal is closed\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError) return <div>Error fetching statuses.</div>;\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-xl font-semibold\">Status List</h1>\r\n        <Dialog>\r\n          <DialogTrigger asChild>\r\n            <Button className=\"gap-2\">\r\n              <Plus className=\"h-4 w-4\" />\r\n              Add Status\r\n            </Button>\r\n          </DialogTrigger>\r\n          <StatusForm closeModal={handleCloseModal} />\r\n        </Dialog>\r\n      </div>\r\n      \r\n      <table className=\"table-auto border-collapse border border-gray-300 w-1/2 text-left\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border border-gray-300 px-4 py-2\">Name</th>\r\n            <th className=\"border border-gray-300 px-4 py-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {statuses?.map((status) => (\r\n            <tr key={status._id}>\r\n              <td className=\"border border-gray-300 px-4 py-2\">{status.status}</td>\r\n              <td className=\"border border-gray-300 px-4 py-2\">\r\n                <Edit \r\n                  className=\"inline-block mx-2 cursor-pointer text-blue-500\" \r\n                  title=\"Edit\" \r\n                  onClick={() => handleEdit(status)}  // Trigger edit when clicked\r\n                />\r\n                <Trash \r\n                  className=\"inline-block mx-2 cursor-pointer text-red-500\" \r\n                  title=\"Delete\" \r\n                  onClick={() => handleDelete(status._id)} // Trigger delete on click\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {statusToEdit && (\r\n        <Dialog open={true} onOpenChange={handleCloseModal}>\r\n          <StatusForm closeModal={handleCloseModal} statusToEdit={statusToEdit} />\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["StatusForm","closeModal","statusToEdit","register","handleSubmit","reset","formState","errors","useForm","data","existingStatus","useGetStatusByIdQuery","_id","skip","createStatus","isLoading","isCreating","isSuccess","isCreateSuccess","isError","isCreateError","useCreateStatusMutation","updateStatus","isUpdating","isUpdateSuccess","isUpdateError","useUpdateStatusMutation","useEffect","statusToPopulate","status","DialogContent","children","jsxs","DialogHeader","jsx","DialogTitle","DialogDescription","onSubmit","async","id","unwrap","error","className","htmlFor","required","minLength","value","message","placeholder","Button","type","disabled","DialogClose","StatusTable","statusesResponse","useGetAllStatusesQuery","deleteStatus","useDeleteStatusMutation","setStatusToEdit","useState","statuses","handleCloseModal","Dialog","DialogTrigger","asChild","Plus","map","Edit","title","onClick","handleEdit","Trash","alert","handleDelete","open","onOpenChange"],"mappings":"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"}