{"version":3,"file":"InquiryTable-BrxKnyOZ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/save.js","../../src/inquiry/followup/FollowUpTable.jsx","../../src/inquiry/followup/AddFollwUpModel.jsx","../../src/inquiry/followup/EditFollowUp.jsx","../../src/inquiry/FollowUpModel.jsx","../../src/inquiry/InquiryTable.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Save = createLucideIcon(\"Save\", [\n  [\n    \"path\",\n    {\n      d: \"M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\",\n      key: \"1c8476\"\n    }\n  ],\n  [\"path\", { d: \"M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7\", key: \"1ydtos\" }],\n  [\"path\", { d: \"M7 3v4a1 1 0 0 0 1 1h7\", key: \"t51u73\" }]\n]);\n\nexport { Save as default };\n//# sourceMappingURL=save.js.map\n","import { Table, Modal } from \"antd\";\r\nimport { useUpdateMessageMutation, useGetMessagesQuery } from \"@/slice/followUp/followUp\";\r\n\r\nimport { useState } from \"react\";\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nexport function FollowUpTable({\r\n    followUps,\r\n    onEdit,\r\n    onDelete,\r\n    currentPage,\r\n    totalPages,\r\n    onPageChange,\r\n}) {\r\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n    const [deleteItemId, setDeleteItemId] = useState(null);\r\n\r\n    const [updateMessage] = useUpdateMessageMutation();\r\n    const { refetch } = useGetMessagesQuery();\r\n\r\n    const handleUpdate = async (id, updateData) => {\r\n        try {\r\n            const result = await updateMessage({ \r\n                id,\r\n                ...updateData\r\n            }).unwrap();\r\n            await refetch();\r\n            console.log('Update result:', result);\r\n        } catch (error) {\r\n            console.error(`Failed to update message ID: ${id}`, error);\r\n        }\r\n    };\r\n\r\n    const handleStatusChange = (id, newStatus) => {\r\n        handleUpdate(id, { status: newStatus });\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setDeleteItemId(id);\r\n        setIsDeleteModalOpen(true);\r\n    };\r\n\r\n    const handleConfirmDelete = async () => {\r\n        if (deleteItemId) {\r\n            await onDelete(deleteItemId);\r\n            await refetch();\r\n            \r\n            if (followUps.length === 1 && currentPage > 1) {\r\n                onPageChange(currentPage - 1);\r\n            } else {\r\n                refetch();\r\n            }\r\n            \r\n            setIsDeleteModalOpen(false);\r\n            setDeleteItemId(null);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            render: (date) => new Date(date).toLocaleDateString(),\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status, record) => (\r\n                <select\r\n                    value={status || \"New\"}\r\n                    onChange={(e) => handleStatusChange(record._id, e.target.value)}\r\n                    className=\"border rounded px-2 py-1\"\r\n                >\r\n                    <option value=\"New\">New</option>\r\n                    <option value=\"In Progress\">In Progress</option>\r\n                    <option value=\"Completed\">Completed</option>\r\n                </select>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <div className=\"flex gap-4 \">\r\n                    <EditOutlined\r\n                        className=\"cursor-pointer bg-blue-700 text-white p-2 rounded-full\"\r\n                        onClick={() => onEdit(record._id)}\r\n                    />\r\n                    <DeleteOutlined\r\n                        className=\"cursor-pointer bg-red-600 text-white p-2 rounded-full\"\r\n                        onClick={() => handleDeleteClick(record._id)}\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={followUps}\r\n                rowKey=\"_id\"\r\n                pagination={{\r\n                    current: currentPage,\r\n                    total: totalPages * 10,\r\n                    onChange: onPageChange,\r\n                }}\r\n            />\r\n\r\n            <Modal\r\n                title=\"Confirm Delete\"\r\n                open={isDeleteModalOpen}\r\n                onOk={handleConfirmDelete}\r\n                onCancel={() => setIsDeleteModalOpen(false)}\r\n                okText=\"Yes, delete\"\r\n                cancelText=\"Cancel\"\r\n                className=\"mt-16\"\r\n            >\r\n                <p>Are you sure you want to delete this follow-up?</p>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import { Button } from \"@/components/ui/button\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { useState } from \"react\";\r\n\r\nexport function AddFollowUpModal({ isOpen, onClose, onAddFollowUp }) {\r\n    const [newFollowUp, setNewFollowUp] = useState({\r\n        date: '',\r\n        message: ''\r\n    });\r\n\r\n    const handleAddFollowUp = () => {\r\n        onAddFollowUp(newFollowUp);\r\n        setNewFollowUp({ date: '', message: '' });\r\n    };\r\n\r\n    return (\r\n        <Dialog open={isOpen} onOpenChange={onClose}>\r\n            <DialogContent className=\"sm:max-w-[425px]\">\r\n                <DialogHeader>\r\n                    <DialogTitle>Add Follow Up</DialogTitle>\r\n                </DialogHeader>\r\n                <div className=\"grid gap-4 py-4\">\r\n                    <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                        <Label htmlFor=\"date\" className=\"text-right\">\r\n                            Date\r\n                        </Label>\r\n                        <Input\r\n                        className=\" w-auto md:w-[4cm]\"\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                            value={newFollowUp.date ? new Date(newFollowUp.date).toISOString().slice(0, 10) : ''}\r\n                            onChange={(e) => setNewFollowUp({ ...newFollowUp, date: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                        <Label htmlFor=\"message\" className=\"text-right\">\r\n                            Message\r\n                        </Label>\r\n                        <Textarea\r\n                            id=\"message\"\r\n                            value={newFollowUp.message}\r\n                            onChange={(e) => setNewFollowUp({ ...newFollowUp, message: e.target.value })}\r\n                            className=\"col-span-3\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-end space-x-2\">\r\n                    <Button className=\"bg-red-600\" variant=\"outline\" onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddFollowUp}>\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Save } from 'lucide-react';\r\nimport { useGetMessageByIdQuery, useUpdateMessageMutation } from '@/slice/followUp/followUp';\r\n\r\nexport default function EditFollowUpModal({ \r\n  isOpen, \r\n  onClose, \r\n  followUpId, \r\n  onSave \r\n}) {\r\n  const [editedFollowUp, setEditedFollowUp] = useState({\r\n    date: '',\r\n    message: ''\r\n  });\r\n\r\n  console.log('Follow Up ID:', followUpId);\r\n  \r\n  const { data: followUpData, isLoading, error: fetchError } = useGetMessageByIdQuery(followUpId, {\r\n    skip: !isOpen || !followUpId,\r\n  });\r\n\r\n  const [updateMessage, { isLoading: isUpdating, error: updateError }] = useUpdateMessageMutation();\r\n\r\n  useEffect(() => {\r\n    if (followUpData) {\r\n      // Format the date to mm/dd/yyyy\r\n      const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const mm = String(date.getMonth() + 1).padStart(2, '0');\r\n        const dd = String(date.getDate()).padStart(2, '0');\r\n        const yyyy = date.getFullYear();\r\n        return `${mm}/${dd}/${yyyy}`;\r\n      };\r\n\r\n      setEditedFollowUp({\r\n        date: formatDate(followUpData?.data?.date || ''),\r\n        message: followUpData?.data?.message || ''\r\n      });\r\n    }\r\n  }, [followUpData]);\r\n\r\n  const handleSave = async () => {\r\n    console.log(\"Saving follow-up:\", editedFollowUp);\r\n    console.log(\"Follow Up ID in handleSave:\", followUpId);\r\n\r\n    if (!editedFollowUp.date) {\r\n        alert(\"Please select a date.\");\r\n        return;\r\n    }\r\n\r\n    if (!editedFollowUp.message) {\r\n        alert(\"Please enter a message.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        console.log(\"Attempting to update message\");\r\n\r\n        const result = await updateMessage({\r\n            message: editedFollowUp.message,\r\n            // Convert mm/dd/yyyy to yyyy-mm-dd before sending to API\r\n            date: new Date(editedFollowUp.date).toISOString().split('T')[0],\r\n            id: followUpId\r\n        }).unwrap();\r\n\r\n       \r\n\r\n        onSave({\r\n            ...followUpData?.data,\r\n            date: editedFollowUp.date,\r\n            message: editedFollowUp.message,\r\n        });\r\n\r\n        onClose();\r\n    } catch (error) {\r\n        console.error('Failed to update message:', error);\r\n        alert(`Update failed: ${error.message || 'Unknown error'}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      console.error('Fetch Error:', fetchError);\r\n      alert(`Fetch Error: ${fetchError.message}`);\r\n    }\r\n    if (updateError) {\r\n      console.error('Update Error:', updateError);\r\n      alert(`Update Error: ${updateError.message}`);\r\n    }\r\n  }, [fetchError, updateError]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Edit Follow Up</DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"edit-date\" className=\"text-right\">\r\n                Date\r\n              </Label>\r\n              <Input\r\n                id=\"edit-date\"\r\n                type=\"text\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                value={editedFollowUp.date}\r\n                onChange={(e) => setEditedFollowUp({\r\n                  ...editedFollowUp, \r\n                  date: e.target.value\r\n                })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"edit-message\" className=\"text-right\">\r\n                Message\r\n              </Label>\r\n              <Textarea\r\n                id=\"edit-message\"\r\n                value={editedFollowUp.message}\r\n                onChange={(e) => setEditedFollowUp({\r\n                  ...editedFollowUp, \r\n                  message: e.target.value\r\n                })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end gap-2\">\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={onClose}\r\n                disabled={isUpdating}\r\n                className=\"bg-red-600\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button \r\n                onClick={handleSave}\r\n                disabled={isUpdating}\r\n              >\r\n                <Save className=\"mr-2 h-4 w-4\" /> {isUpdating ? 'Saving...' : 'Save'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\r\nimport { FollowUpTable } from './followup/FollowUpTable';\r\nimport { AddFollowUpModal } from './followup/AddFollwUpModel';\r\nimport {\r\n    useGetMessagesCountByInquiryIdQuery,\r\n    useCreateMessageMutation,\r\n    useDeleteMessageMutation,\r\n    useGetMessageByInquiryIdQuery\r\n} from '@/slice/followUp/followUp';\r\nimport EditFollowUpModal from './followup/EditFollowUp';\r\nimport { Badge } from '@/components/ui/badge';\r\n\r\n// Main FollowUpModal Container Component\r\n// Main FollowUpModal Container Component\r\nexport default function FollowUpModal({ inquiry, onFollowUpAdded }) {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [selectedFollowUp, setSelectedFollowUp] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 5;\r\n\r\n    // Fetch message count using the inquiryId\r\n    const { data: followUpCountData, error, isLoading, refetch } = useGetMessageByInquiryIdQuery(inquiry._id);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            console.error(\"Error fetching follow-up count:\", error);\r\n        }\r\n    }, [error]);\r\n\r\n    // Extract follow-ups and calculate pagination\r\n    const followUps = followUpCountData?.data || [];\r\n    const followUpCount = followUps.length;\r\n    const totalPages = Math.ceil(followUpCount / itemsPerPage);\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentFollowUps = followUps.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const [createMessage, { isLoading: isCreating }] = useCreateMessageMutation();\r\n    const [deleteMessage, { isLoading: isDeleting }] = useDeleteMessageMutation();\r\n\r\n    // Handle modal open/close\r\n    const handleOpenChange = (open) => {\r\n        setIsOpen(open);\r\n        if (open) {\r\n            refetch();\r\n        }\r\n    };\r\n\r\n    // Handle page change\r\n    const handlePageChange = (page) => {\r\n        if (page > 0 && page <= totalPages) {\r\n            setCurrentPage(page);\r\n        }\r\n    };\r\n\r\n    // Handle add follow-up\r\n    const handleAddFollowUp = async (newFollowUp) => {\r\n        if (newFollowUp.date && newFollowUp.message) {\r\n            const newMessage = {\r\n                inquiryId: inquiry._id,\r\n                date: newFollowUp.date,\r\n                message: newFollowUp.message,\r\n            };\r\n            try {\r\n                await createMessage(newMessage).unwrap();\r\n                refetch();\r\n                onFollowUpAdded(inquiry, followUpCount + 1);\r\n                setIsAddModalOpen(false);\r\n            } catch (error) {\r\n                console.error(\"Failed to add follow-up:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle edit follow-up\r\n    const handleEditFollowUp = (followUp) => {\r\n        setSelectedFollowUp(followUp);\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    // Handle delete follow-up\r\n    const handleDeleteFollowUp = async (followUpId) => {\r\n        try {\r\n            await deleteMessage(followUpId).unwrap();\r\n            refetch();\r\n            onFollowUpAdded(inquiry, followUpCount - 1);\r\n        } catch (error) {\r\n            console.error(\"Failed to delete follow-up:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={isOpen} onOpenChange={handleOpenChange}>\r\n                <DialogTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"text-right bg-[#3b1f91] text-white\">\r\n                        Follow Up \r\n                        <Badge variant=\"outline\" className=\"bg-[#ffffff] text-black\">{followUpCount}\r\n\r\n                        </Badge>\r\n                    </Button>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"sm:max-w-[60%] h-auto\">\r\n                    <div className=\"grid gap-4\">\r\n                        <div className=\"flex justify-between items-center mt-5 mb-4\">\r\n                            <DialogHeader>\r\n                                <DialogTitle>Follow Up - {inquiry.firstName} {inquiry.lastName}</DialogTitle>\r\n                            </DialogHeader>\r\n                            <Button\r\n                                onClick={() => setIsAddModalOpen(true)}\r\n                                className=\"flex items-center gap-2\"\r\n                            >\r\n                                Add Follow Up\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <FollowUpTable\r\n                            followUps={currentFollowUps}\r\n                            onEdit={handleEditFollowUp}\r\n                            onDelete={handleDeleteFollowUp}\r\n                            currentPage={currentPage}\r\n                            totalPages={totalPages}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AddFollowUpModal\r\n                isOpen={isAddModalOpen}\r\n                onClose={() => setIsAddModalOpen(false)}\r\n                onAddFollowUp={handleAddFollowUp}\r\n            />\r\n\r\n            <EditFollowUpModal\r\n                isOpen={editModalOpen}\r\n                onClose={() => setEditModalOpen(false)}\r\n                followUpId={selectedFollowUp}\r\n                onSave={() => {\r\n                    refetch();\r\n                    setEditModalOpen(false);\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n    SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { ChevronDown, EllipsisVertical, MoreVertical, Plus } from \"lucide-react\";\r\nimport FollowUpModal from \"./FollowUpModel\";\r\nimport { useDeleteInquiryMutation } from \"@/slice/inquiry/inquiry\";\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\r\nimport { useGetInquiriesQuery } from \"@/slice/inquiry/inquiry\";\r\nimport { Link, Links } from \"react-router-dom\";\r\nimport { useGetAllStatusesQuery } from \"@/slice/status/status\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport EmailForm from \"@/email/emailForm/EmailForm\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Modal } from \"antd\";\r\n\r\n// Define all possible statuses\r\nconst ALL_STATUSES = [\r\n    \"Contact in Future\",\r\n    \"Pending\",\r\n    \"Completed\",\r\n    \"In Progress\",\r\n    \"New Inquiry\",\r\n    \"Rejected\",\r\n    \"On Hold\"\r\n];\r\n\r\nexport default function InquiryList() {\r\n    const { data: inquiryData = [], isLoading, isError } = useGetInquiriesQuery();\r\n    console.log(inquiryData)\r\n    const [itemsPerPage, setItemsPerPage] = useState(15);\r\n    const [data, setData] = useState(inquiryData);\r\n    const [deleteInquiry] = useDeleteInquiryMutation();\r\n    const { data: statuses, isLoading: statusesLoading } = useGetAllStatusesQuery();\r\n    console.log(statuses)\r\n    // State for filters\r\n    const [companyNameFilter, setCompanyNameFilter] = useState(\"\");\r\n    const [statusFilter, setStatusFilter] = useState(null);\r\n    const [sourceFilter, setSourceFilter] = useState(null);\r\n    const [nameFilter, setNameFilter] = useState(null);\r\n    const [emailFilter, setEmailFilter] = useState(\"\");\r\n    const [mobileFilter, setMobileFilter] = useState(\"\");\r\n    const [cityFilter, setCityFilter] = useState(\"\");\r\n    const [selectedInquiries, setSelectedInquiries] = useState([]);\r\n    const [showEmailModal, setShowEmailModal] = useState(false);\r\n\r\n    // Filtering function\r\n    const filteredData = inquiryData.filter(item => {\r\n        return (\r\n            (companyNameFilter === \"\" ||\r\n                item.organisation.toLowerCase().includes(companyNameFilter.toLowerCase())) &&\r\n            (statusFilter === null || item.status === statusFilter) &&\r\n            (sourceFilter === null || item.source === sourceFilter) &&\r\n            (nameFilter === null || \r\n                `${item.firstName} ${item.lastName}`.toLowerCase().includes(nameFilter.toLowerCase())) &&\r\n            (emailFilter === \"\" ||\r\n                item.email.toLowerCase().includes(emailFilter.toLowerCase())) &&\r\n            (mobileFilter === \"\" ||\r\n                item.phone.toLowerCase().includes(mobileFilter.toLowerCase()))\r\n        );\r\n    });\r\n\r\n    // Get selected inquiry emails\r\n    const selectedInquiryEmails = filteredData\r\n        ?.filter((inquiry) => selectedInquiries.includes(inquiry._id))\r\n        ?.map((inquiry) => inquiry.email)\r\n        ?.join(\", \");\r\n\r\n    const handleDelete = async (inquiryId) => {\r\n        Modal.confirm({\r\n            title: 'Are you sure you want to delete this inquiry?',\r\n            content: 'This action cannot be undone.',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk: async () => {\r\n                try {\r\n                    await deleteInquiry(inquiryId);\r\n                    setData(prevData => prevData.filter(item => item._id !== inquiryId));\r\n                } catch (error) {\r\n                    console.error(\"Error deleting inquiry:\", error);\r\n                }\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    // Handle status update for a specific inquiry\r\n    const handleStatusUpdate = (inquiry, newStatus) => {\r\n        setData(prevData =>\r\n            prevData.map(item =>\r\n                item.companyName === inquiry.companyName\r\n                    ? { ...item, status: newStatus }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleFollowUpAdded = (inquiry, newTotalTasks) => {\r\n        setData(prevData =>\r\n            prevData.map(item =>\r\n                item.companyName === inquiry.companyName\r\n                    ? { ...item, totalTasks: newTotalTasks }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleInquirySelect = (inquiryId) => {\r\n        setSelectedInquiries((prev) =>\r\n            prev.includes(inquiryId)\r\n                ? prev.filter((id) => id !== inquiryId)\r\n                : [...prev, inquiryId]\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            {selectedInquiries.length > 0 && (\r\n                <div className=\"mb-4\">\r\n                    <Button \r\n                        onClick={() => setShowEmailModal(true)}\r\n                        className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n                    >\r\n                        Send Email to Selected ({selectedInquiries.length})\r\n                    </Button>\r\n                </div>\r\n            )}\r\n\r\n            <Dialog open={showEmailModal} onOpenChange={setShowEmailModal}>\r\n                <DialogContent className=\"max-w-4xl\">\r\n                    <DialogHeader>\r\n                        <DialogTitle>Send Email to Selected Inquiries</DialogTitle>\r\n                    </DialogHeader>\r\n                    <EmailForm \r\n                        defaultTo={selectedInquiryEmails}\r\n                        onSuccess={() => {\r\n                            setShowEmailModal(false);\r\n                            setSelectedInquiries([]);\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n                <h1 className=\"text-xl font-semibold\">Inquiry List</h1>\r\n                <Link to='/add-inquiry'>\r\n                    <Button className=\"gap-2\">\r\n                        <Plus className=\"h-4 w-4\" />\r\n                        Add Inquiry\r\n                    </Button>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n            <Table className=\"border\">\r\n                <TableHeader>\r\n                    <TableRow className=\"border-b bg-gray-100\">\r\n                        <TableHead className=\"w-12\"></TableHead>\r\n                        <TableHead className=\"lg:w-[100px] w-[50px] sticky left-0 bg-background z-50\">Date</TableHead>\r\n                        <TableHead className=\"text-left\">Info</TableHead>\r\n                        {/* <TableHead className=\"text-left\">Email</TableHead> */}\r\n                        <TableHead className=\"text-left\">Message</TableHead>\r\n                        <TableHead className=\"text-left\">Follow Up</TableHead>\r\n                        <TableHead className=\"w-[80px] text-left\">Actions</TableHead>\r\n                    </TableRow>\r\n                    <TableRow className=\"border-b\">\r\n                        <TableHead></TableHead>\r\n                        <TableHead></TableHead>\r\n                        <TableHead>\r\n                            <Input\r\n                                placeholder=\"Search Info\"\r\n                                className=\"w-[200px]\"\r\n                                value={nameFilter || \"\"}\r\n                                onChange={(e) => setNameFilter(e.target.value)}\r\n                            />\r\n                        </TableHead>\r\n                        {/* <TableHead>\r\n                            <Input\r\n                                placeholder=\"Email\"\r\n                                className=\"w-[200px]\"\r\n                                value={emailFilter}\r\n                                onChange={(e) => setEmailFilter(e.target.value)}\r\n                            />\r\n                        </TableHead> */}\r\n                        <TableHead>\r\n                            <Select\r\n                                value={statusFilter || \"reset\"}\r\n                                onValueChange={(value) => setStatusFilter(value === \"reset\" ? null : value)}\r\n                            >\r\n                                {/* <SelectTrigger className=\"w-[160px]\">\r\n                                    <SelectValue placeholder=\"Status\" />\r\n                                </SelectTrigger> */}\r\n                                <SelectContent>\r\n                                    <SelectItem value=\"reset\">All Statuses</SelectItem>\r\n                                    {statuses?.data?.map((status) => (\r\n                                        <SelectItem key={status._id} value={status.status}>\r\n                                            {status.status}\r\n                                        </SelectItem>\r\n                                    ))}\r\n                                </SelectContent>\r\n                            </Select>\r\n                        </TableHead>\r\n                        <TableHead></TableHead>\r\n                        <TableHead></TableHead>\r\n                    </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                    {filteredData.map((item, index) => (\r\n                        <TableRow key={index} className=\"border-b\">\r\n                            <TableCell className=\"p-5\">\r\n                                <Checkbox\r\n                                    checked={selectedInquiries.includes(item._id)}\r\n                                    onCheckedChange={() => handleInquirySelect(item._id)}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"sticky left-0 bg-background\">{item.createdAt.slice(0, 10)}</TableCell>\r\n                            <TableCell>\r\n                                <div className=\"space-y-1\">\r\n                                    <div className=\"font-medium\">{item.firstName} {item.lastName},</div>\r\n                                    {item.organisation} ,\r\n                                    <div className=\"text-sm text-muted-foreground\">\r\n                                    {item.email}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-muted-foreground\">\r\n                                    \r\n                                        {item.phone} • {item.address} \r\n                                    </div>\r\n                                </div>\r\n                            </TableCell>\r\n                            {/* <TableCell>{item.email}</TableCell> */}\r\n                            <TableCell>{item.message}</TableCell>\r\n                            <TableCell className=\"text-left\">\r\n                                <FollowUpModal\r\n                                    inquiry={item}\r\n                                    onFollowUpAdded={handleFollowUpAdded}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"text-center\">\r\n                                <DropdownMenu>\r\n                                    <DropdownMenuTrigger asChild>\r\n                                        <button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 p-0\">\r\n                                            <EllipsisVertical className=\"h-4 w-4\" />\r\n                                        </button>\r\n                                    </DropdownMenuTrigger>\r\n                                    <DropdownMenuContent align=\"end\" className=\"w-[160px]\">\r\n                                        <Link to={`/edit-inquiry/${item._id}`}>\r\n                                            <DropdownMenuItem>Edit</DropdownMenuItem>\r\n                                        </Link>\r\n                                        <DropdownMenuItem onClick={() => handleDelete(item._id)}>\r\n                                            Delete\r\n                                        </DropdownMenuItem>\r\n                                    </DropdownMenuContent>\r\n                                </DropdownMenu>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <div className=\"flex items-center justify-between mt-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-sm\">Items per page:</span>\r\n                    <Select value={itemsPerPage.toString()} onValueChange={(value) => setItemsPerPage(Number(value))}>\r\n                        <SelectTrigger className=\"w-[70px]\">\r\n                            <SelectValue>{itemsPerPage}</SelectValue>\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                            <SelectItem value=\"15\">15</SelectItem>\r\n                            <SelectItem value=\"25\">25</SelectItem>\r\n                            <SelectItem value=\"50\">50</SelectItem>\r\n                            <SelectItem value=\"100\">100</SelectItem>\r\n                        </SelectContent>\r\n                    </Select>\r\n                </div>\r\n                <div className=\"text-sm text-muted-foreground\">\r\n                    {`1-${Math.min(itemsPerPage, filteredData.length)} of ${filteredData.length}`}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["Save","createLucideIcon","d","key","FollowUpTable","followUps","onEdit","onDelete","currentPage","totalPages","onPageChange","isDeleteModalOpen","setIsDeleteModalOpen","useState","deleteItemId","setDeleteItemId","updateMessage","useUpdateMessageMutation","refetch","useGetMessagesQuery","handleStatusChange","id","newStatus","async","updateData","unwrap","error","handleUpdate","status","columns","title","dataIndex","render","date","Date","toLocaleDateString","record","jsxs","value","onChange","e","_id","target","className","children","jsx","_","EditOutlined","onClick","DeleteOutlined","handleDeleteClick","Fragment","Table","dataSource","rowKey","pagination","current","total","Modal","open","onOk","length","onCancel","okText","cancelText","AddFollowUpModal","isOpen","onClose","onAddFollowUp","newFollowUp","setNewFollowUp","message","Dialog","onOpenChange","DialogContent","DialogHeader","DialogTitle","Label","htmlFor","Input","type","toISOString","slice","Textarea","Button","variant","EditFollowUpModal","followUpId","onSave","editedFollowUp","setEditedFollowUp","data","followUpData","isLoading","fetchError","useGetMessageByIdQuery","skip","isUpdating","updateError","useEffect","dateString","String","getMonth","padStart","getDate","getFullYear","formatDate","alert","placeholder","disabled","split","FollowUpModal","inquiry","onFollowUpAdded","setIsOpen","isAddModalOpen","setIsAddModalOpen","editModalOpen","setEditModalOpen","selectedFollowUp","setSelectedFollowUp","setCurrentPage","followUpCountData","useGetMessageByInquiryIdQuery","followUpCount","Math","ceil","indexOfLastItem","indexOfFirstItem","currentFollowUps","createMessage","isCreating","useCreateMessageMutation","deleteMessage","isDeleting","useDeleteMessageMutation","DialogTrigger","asChild","Badge","firstName","lastName","followUp","page","newMessage","inquiryId","InquiryList","inquiryData","isError","useGetInquiriesQuery","itemsPerPage","setItemsPerPage","setData","deleteInquiry","useDeleteInquiryMutation","statuses","statusesLoading","useGetAllStatusesQuery","companyNameFilter","setCompanyNameFilter","statusFilter","setStatusFilter","sourceFilter","setSourceFilter","nameFilter","setNameFilter","emailFilter","setEmailFilter","mobileFilter","setMobileFilter","cityFilter","setCityFilter","selectedInquiries","setSelectedInquiries","showEmailModal","setShowEmailModal","filteredData","filter","item","organisation","toLowerCase","includes","source","email","phone","selectedInquiryEmails","map","join","handleFollowUpAdded","newTotalTasks","prevData","companyName","totalTasks","EmailForm","defaultTo","onSuccess","Link","to","Plus","TableHeader","TableRow","TableHead","Select","onValueChange","SelectContent","SelectItem","TableBody","index","TableCell","Checkbox","checked","onCheckedChange","handleInquirySelect","prev","createdAt","address","DropdownMenu","DropdownMenuTrigger","size","EllipsisVertical","DropdownMenuContent","align","DropdownMenuItem","confirm","content","okType","handleDelete","toString","Number","SelectTrigger","SelectValue","min"],"mappings":"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","x_google_ignoreList":[0]}