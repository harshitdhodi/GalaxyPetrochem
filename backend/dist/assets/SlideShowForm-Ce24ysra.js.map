{"version":3,"file":"SlideShowForm-Ce24ysra.js","sources":["../../src/website/componets/slideshow/SlideShowForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Upload, Button, message, Card, Breadcrumb } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst ImageUploadForm = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [preview, setPreview] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); \r\n  const isEditMode = !!id;\r\n\r\n  // Fetch existing data if in edit mode\r\n  useEffect(() => {\r\n    if (isEditMode) {\r\n      fetchSlideShowData();\r\n    }\r\n  }, [isEditMode]);\r\n\r\n  const fetchSlideShowData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`/api/slideShow/getById?id=${id}`);\r\n      const slideShowData = response.data;\r\n\r\n      // Set form values\r\n      form.setFieldsValue({\r\n        title: slideShowData.title,\r\n        altText: slideShowData.altText,\r\n      });\r\n\r\n      // Set preview if image exists\r\n      if (slideShowData.image) {\r\n        setPreview(`/api/logo/download/${slideShowData.image}`);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch slide show data.\");\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    const formData = new FormData();\r\n\r\n    if (fileList.length > 0) {\r\n      formData.append(\"image\", fileList[0].originFileObj);\r\n    } else if (!isEditMode) {\r\n      message.error(\"Please upload an image.\");\r\n      return;\r\n    }\r\n\r\n    formData.append(\"altText\", values.altText);\r\n    formData.append(\"title\", values.title);\r\n\r\n    if (isEditMode) {\r\n      formData.append(\"id\", id);\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      let response;\r\n\r\n      if (isEditMode) {\r\n        response = await axios.put(`/api/slideShow/update?id=${id}`, formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        message.success(\"Image updated successfully!\");\r\n      } else {\r\n        response = await axios.post(\"/api/slideShow/addimages\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        message.success(\"Image uploaded successfully!\");\r\n      }\r\n\r\n      navigate(\"/slideShow-table\");\r\n    } catch (error) {\r\n      message.error(isEditMode ? \"Failed to update image.\" : \"Failed to upload image.\");\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = ({ fileList }) => {\r\n    setFileList(fileList.slice(-1));\r\n\r\n    if (fileList.length > 0) {\r\n      const file = fileList[0].originFileObj;\r\n\r\n      // Revoke previous object URL to free memory\r\n      if (preview) {\r\n        URL.revokeObjectURL(preview);\r\n      }\r\n\r\n      const objectUrl = URL.createObjectURL(file);\r\n      setPreview(objectUrl);\r\n    } else if (!isEditMode) {\r\n      setPreview(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center px-6\">\r\n      {/* Breadcrumb Navigation */}\r\n      <Breadcrumb className=\"self-start mb-4 text-gray-600\">\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/slideShow-table\">SlideShow Table</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{isEditMode ? \"Edit\" : \"Upload\"} Image</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n\r\n      <Card className=\"w-full max-w-4lg shadow-lg rounded-xl\">\r\n        <h2 className=\"text-xl font-semibold text-left mb-4\">\r\n          {isEditMode ? \"Edit\" : \"Upload\"} Image\r\n        </h2>\r\n        <Form \r\n          form={form}\r\n          layout=\"vertical\" \r\n          onFinish={onFinish} \r\n          className=\"w-full lg:w-1/2\"\r\n        >\r\n          <Form.Item\r\n            label=\"Image Title\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: \"Please enter image title\" }]}\r\n          >\r\n            <Input placeholder=\"Enter image title\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Alt Name\"\r\n            name=\"altText\"\r\n            rules={[{ required: true, message: \"Please enter alt text\" }]}\r\n          >\r\n            <Input placeholder=\"Enter alt text\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Upload Image\">\r\n            <Upload\r\n              fileList={fileList}\r\n              beforeUpload={() => false}\r\n              maxCount={1}\r\n              onChange={handleFileChange}\r\n              accept=\"image/*\"\r\n            >\r\n              <Button icon={<UploadOutlined />}>Select Image</Button>\r\n            </Upload>\r\n            {isEditMode && !fileList.length && (\r\n              <div className=\"mt-2 text-gray-500\">\r\n                Only upload a new image if you want to replace the existing one.\r\n              </div>\r\n            )}\r\n          </Form.Item>\r\n\r\n          {preview && (\r\n            <div className=\"flex justify-center mb-4\">\r\n              <img\r\n                src={preview}\r\n                alt=\"Preview\"\r\n                className=\"w-32 h-32 object-cover rounded-lg border border-gray-300\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block loading={loading} className=\"mt-4\">\r\n              {loading ? (isEditMode ? \"Updating...\" : \"Uploading...\") : (isEditMode ? \"Update Image\" : \"Upload Image\")}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadForm;\r\n"],"names":["ImageUploadForm","loading","setLoading","useState","fileList","setFileList","preview","setPreview","form","Form","useForm","navigate","useNavigate","id","useParams","isEditMode","useEffect","fetchSlideShowData","async","slideShowData","axios","get","data","setFieldsValue","title","altText","image","error","message","jsxs","className","children","Breadcrumb","jsx","Item","Link","to","Card","layout","onFinish","values","formData","FormData","length","append","originFileObj","response","put","headers","success","post","label","name","rules","required","Input","placeholder","Upload","beforeUpload","maxCount","onChange","slice","file","URL","revokeObjectURL","objectUrl","createObjectURL","accept","Button","icon","UploadOutlined","src","alt","type","htmlType","block"],"mappings":"q4BAMA,MAAMA,EAAkB,KACtB,MAAOC,EAASC,GAAcC,EAAAA,UAAS,IAChCC,EAAUC,GAAeF,EAAAA,SAAS,KAClCG,EAASC,GAAcJ,EAAAA,SAAS,OAChCK,GAAQC,EAAKC,UACdC,EAAWC,KACXC,GAAEA,GAAOC,IACTC,IAAeF,EAGrBG,EAAAA,WAAU,KACJD,GACiBE,GAAA,GAEpB,CAACF,IAEJ,MAAME,EAAqBC,UACzBhB,GAAW,GACP,IACF,MACMiB,SADiBC,EAAMC,IAAI,6BAA6BR,MAC/BS,KAG/Bd,EAAKe,eAAe,CAClBC,MAAOL,EAAcK,MACrBC,QAASN,EAAcM,UAIrBN,EAAcO,OACLnB,EAAA,sBAAsBY,EAAcO,eAE1CC,GACPC,EAAQD,MAAM,mCACK,CACnB,QACAzB,GAAW,EAAK,GAiElB,OAAA2B,EAAAA,KAAC,MAAI,CAAAC,UAAU,kCAEbC,SAAA,CAACF,EAAAA,KAAAG,EAAA,CAAWF,UAAU,gCACpBC,SAAA,CAACE,EAAAA,IAAAD,EAAWE,KAAX,CACCH,SAAAE,EAAAA,IAACE,GAAKC,GAAG,aAAaL,yBAExBE,EAAAA,IAACD,EAAWE,KAAX,CACCH,eAACI,EAAK,CAAAC,GAAG,mBAAmBL,SAAA,sBAE9BF,EAAAA,KAACG,EAAWE,KAAX,CAAiBH,SAAA,CAAAhB,EAAa,OAAS,SAAS,eAGnDc,EAAAA,KAACQ,EAAK,CAAAP,UAAU,wCACdC,SAAA,CAACF,EAAAA,KAAA,KAAA,CAAGC,UAAU,uCACXC,SAAA,CAAAhB,EAAa,OAAS,SAAS,YAElCc,EAAAA,KAACpB,EAAA,CACCD,OACA8B,OAAO,WACPC,SAhFSrB,MAAOsB,IAChB,MAAAC,EAAW,IAAIC,SAEjB,GAAAtC,EAASuC,OAAS,EACpBF,EAASG,OAAO,QAASxC,EAAS,GAAGyC,oBACvC,IAAY9B,EAEV,YADAa,EAAQD,MAAM,2BAIPc,EAAAG,OAAO,UAAWJ,EAAOf,SACzBgB,EAAAG,OAAO,QAASJ,EAAOhB,OAE5BT,GACO0B,EAAAG,OAAO,KAAM/B,GAGxBX,GAAW,GACP,IACE,IAAA4C,EAEA/B,GACF+B,QAAiB1B,EAAM2B,IAAI,4BAA4BlC,IAAM4B,EAAU,CACrEO,QAAS,CAAE,eAAgB,yBAE7BpB,EAAQqB,QAAQ,iCAEhBH,QAAiB1B,EAAM8B,KAAK,2BAA4BT,EAAU,CAChEO,QAAS,CAAE,eAAgB,yBAE7BpB,EAAQqB,QAAQ,iCAGlBtC,EAAS,0BACFgB,GACCC,EAAAD,MAAMZ,EAAa,0BAA4B,0BACpC,CACnB,QACAb,GAAW,EAAK,GA2CZ4B,UAAU,kBAEVC,SAAA,CAAAE,EAAAA,IAACxB,EAAKyB,KAAL,CACCiB,MAAM,cACNC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAM1B,QAAS,6BAEnCG,SAAAE,EAAAA,IAACsB,EAAM,CAAAC,YAAY,wBAGrBvB,EAAAA,IAACxB,EAAKyB,KAAL,CACCiB,MAAM,WACNC,KAAK,UACLC,MAAO,CAAC,CAAEC,UAAU,EAAM1B,QAAS,0BAEnCG,SAAAE,EAAAA,IAACsB,EAAM,CAAAC,YAAY,qBAGpB3B,EAAAA,KAAApB,EAAKyB,KAAL,CAAUiB,MAAM,eACfpB,SAAA,CAAAE,EAAAA,IAACwB,EAAA,CACCrD,WACAsD,aAAc,KAAM,EACpBC,SAAU,EACVC,SA9Da,EAAGxD,SAAAA,MAGtBA,GAFQA,EAAAA,EAASyD,OAAM,IAEvBzD,EAASuC,OAAS,EAAG,CACjB,MAAAmB,EAAO1D,EAAS,GAAGyC,cAGrBvC,GACFyD,IAAIC,gBAAgB1D,GAGhB,MAAA2D,EAAYF,IAAIG,gBAAgBJ,GACtCvD,EAAW0D,EAAS,MACVlD,GACVR,EAAW,KAAI,EAiDP4D,OAAO,UAEPpC,eAACqC,EAAO,CAAAC,KAAOpC,MAAAqC,EAAA,CAAe,GAAIvC,SAAY,mBAE/ChB,IAAeX,EAASuC,cACtB,MAAI,CAAAb,UAAU,qBAAqBC,SAEpC,wEAIHzB,GACC2B,EAAAA,IAAC,MAAI,CAAAH,UAAU,2BACbC,SAAAE,EAAAA,IAAC,MAAA,CACCsC,IAAKjE,EACLkE,IAAI,UACJ1C,UAAU,+DAKhBG,EAAAA,IAACxB,EAAKyB,KAAL,CACCH,eAACqC,EAAO,CAAAK,KAAK,UAAUC,SAAS,SAASC,OAAK,EAAC1E,UAAkB6B,UAAU,OACxEC,SAAW9B,EAAAc,EAAa,cAAgB,eAAmBA,EAAa,eAAiB,2BAKpG"}