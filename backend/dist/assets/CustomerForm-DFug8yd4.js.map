{"version":3,"file":"CustomerForm-DFug8yd4.js","sources":["../../src/customer/CustomerForm.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useAddCustomerMutation } from '@/slice/customerSlice/customerApiSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { BreadcrumbWithCustomSeparator } from '@/breadCrumb/BreadCrumb';\nimport { toast } from 'react-toastify';\n\nconst breadcrumbItems = [\n  { label: \"Dashboard\", href: \"/dashboard\" },\n  { label: \"Customer Table\", href: \"/customer-table\" },\n  { label: \"Customer Form\", href: null },\n];\n\nexport default function CustomerForm() {\n  const [addCustomer, { isLoading }] = useAddCustomerMutation();\n  const [formData, setFormData] = useState({\n    name: '',\n    contactPerson: '',\n    email: '',\n    mobile: '',\n    website: '',\n    address: '',\n    country: '',\n    state: '',\n    city: '',\n    description: '',\n    image: null,\n  });\n\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [id]: value,\n    }));\n  };\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        toast({\n          title: \"Invalid file type\",\n          description: \"Please upload an image file\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      if (file.size > 5 * 1024 * 1024) {\n        toast({\n          title: \"File too large\",\n          description: \"Image size should be less than 5MB\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      setFormData((prev) => ({\n        ...prev,\n        image: file,\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const requiredFields = ['name', 'email', 'mobile'];\n    const missingFields = requiredFields.filter((field) => !formData[field]);\n\n    if (missingFields.length > 0) {\n      toast({\n        title: \"Validation Error\",\n        description: `Please fill in all required fields: ${missingFields.join(', ')}`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      toast({\n        title: \"Validation Error\",\n        description: \"Please enter a valid email address\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      const submitData = new FormData();\n      Object.keys(formData).forEach((key) => {\n        if (formData[key] !== null) {\n          if (key === 'image' && formData[key]) {\n            submitData.append(key, formData[key]);\n          } else if (key === 'description') {\n            submitData.append(key, formData[key] || '');\n          } else {\n            submitData.append(key, formData[key]);\n          }\n        }\n      });\n\n      const result = await addCustomer(submitData);\n\n      if (result.data) {\n        toast({\n          title: \"Success\",\n          description: \"Customer added successfully\",\n        });\n\n        setFormData({\n          name: '',\n          contactPerson: '',\n          email: '',\n          mobile: '',\n          website: '',\n          address: '',\n          country: '',\n          state: '',\n          city: '',\n          description: '',\n          image: null,\n        });\n\n        navigate('/customer-table');\n      }\n    } catch (err) {\n      toast({\n        title: \"Error\",\n        description: err.message || \"Failed to add customer\",\n        variant: \"destructive\",\n      });\n      console.error(\"Submission Error:\", err);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"ml-1\">\n        <BreadcrumbWithCustomSeparator items={breadcrumbItems} />\n      </div>\n      <Card className=\"w-full mt-4 mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-purple-700\">Manage Customer</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {/* Customer Name */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">\n                  Customer Name <span className=\"text-red-500\">*</span>\n                </Label>\n                <Input\n                  id=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n\n              {/* Contact Person */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"contactPerson\">Contact Person</Label>\n                <Input\n                  id=\"contactPerson\"\n                  value={formData.contactPerson}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              {/* Email */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">\n                  Email <span className=\"text-red-500\">*</span>\n                </Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n\n              {/* Mobile Number */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"mobile\">\n                  Mobile Number <span className=\"text-red-500\">*</span>\n                </Label>\n                <Input\n                  id=\"mobile\"\n                  value={formData.mobile}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n\n              {/* Website */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"website\">Website</Label>\n                <Input\n                  id=\"website\"\n                  type=\"url\"\n                  value={formData.website}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n\n            {/* Location Information */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {/* Country */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"country\">Country</Label>\n                <Input\n                  id=\"country\"\n                  value={formData.country}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              {/* State */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"state\">State/Province</Label>\n                <Input\n                  id=\"state\"\n                  value={formData.state}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              {/* City */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"city\">City</Label>\n                <Input\n                  id=\"city\"\n                  value={formData.city}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n\n            {/* Address */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"address\">Address</Label>\n              <Textarea\n                id=\"address\"\n                className=\"min-h-[100px]\"\n                value={formData.address}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            {/* Upload image */}\n            <div className=\"space-y-2\">\n              <Label>Upload image</Label>\n              <div className=\"border-2 border-dashed border-gray-200 rounded-lg p-4 text-center\">\n                <div className=\"w-32 h-32 mx-auto mb-4\">\n                  <img\n                    src={formData.image ? URL.createObjectURL(formData.image) : \"/placeholder.svg\"}\n                    alt=\"image preview\"\n                    className=\"w-full h-full object-contain\"\n                  />\n                </div>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  className=\"bg-green-500 text-white hover:bg-green-600\"\n                  onClick={() => document.getElementById('imageUpload').click()}\n                >\n                  Add image\n                </Button>\n                <input\n                  type=\"file\"\n                  id=\"imageUpload\"\n                  accept=\"image/*\"\n                  onChange={handleImageUpload}\n                  className=\"hidden\"\n                />\n              </div>\n            </div>\n\n            {/* Description */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                className=\"min-h-[200px]\"\n                placeholder=\"Enter customer description\"\n              />\n            </div>\n\n            {/* Form Actions */}\n            <div className=\"flex gap-4\">\n              <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"bg-green-500 text-white hover:bg-green-600\"\n              >\n                {isLoading ? 'Saving...' : 'Save'}\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"destructive\"\n                onClick={() =>\n                  setFormData({\n                    name: '',\n                    contactPerson: '',\n                    email: '',\n                    mobile: '',\n                    website: '',\n                    address: '',\n                    country: '',\n                    state: '',\n                    city: '',\n                    description: '',\n                    image: null,\n                  })\n                }\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </>\n  );\n}"],"names":["breadcrumbItems","label","href","CustomerForm","addCustomer","isLoading","useAddCustomerMutation","formData","setFormData","useState","name","contactPerson","email","mobile","website","address","country","state","city","description","image","navigate","useNavigate","handleInputChange","e","id","value","target","prev","jsxs","Fragment","children","jsx","className","BreadcrumbWithCustomSeparator","items","Card","CardHeader","CardTitle","CardContent","onSubmit","async","preventDefault","missingFields","filter","field","length","toast","title","join","variant","test","submitData","FormData","Object","keys","forEach","key","append","data","err","message","Label","htmlFor","Input","onChange","required","type","Textarea","src","URL","createObjectURL","alt","Button","onClick","document","getElementById","click","accept","file","files","startsWith","size","placeholder","disabled"],"mappings":"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"}