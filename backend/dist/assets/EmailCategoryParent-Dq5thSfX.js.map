{"version":3,"file":"EmailCategoryParent-Dq5thSfX.js","sources":["../../src/email/emailCategory/EmailCategory.jsx","../../src/email/emailCategory/emailCategoryForm.jsx","../../src/email/emailCategory/EmailCategoryParent.jsx"],"sourcesContent":["import { useGetEmailCategoriesQuery, useDeleteEmailCategoryMutation } from '@/slice/emailCategory/emailCategory';\r\nimport { Table, Button, Space, Popconfirm, message } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst EmailCategoryTable = ({ onEditClick }) => {\r\n    const { data: categories, isLoading } = useGetEmailCategoriesQuery();\r\n    const [deleteCategory] = useDeleteEmailCategoryMutation();\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await deleteCategory(id).unwrap();\r\n            message.success('Category deleted successfully');\r\n        } catch (error) {\r\n            message.error('Failed to delete category');\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Category Name',\r\n            dataIndex: 'emailCategory',\r\n            key: 'emailCategory',\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (_, record) => (\r\n                <Space>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        icon={<EditOutlined />}\r\n                        onClick={() => onEditClick(record)}\r\n                    />\r\n                    <Popconfirm\r\n                        title=\"Are you sure you want to delete this category?\"\r\n                        onConfirm={() => handleDelete(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button \r\n                            type=\"primary\" \r\n                            danger \r\n                            icon={<DeleteOutlined />}\r\n                        />\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={categories}\r\n            rowKey=\"_id\"\r\n            loading={isLoading}\r\n            pagination={{\r\n                pageSize: 10,\r\n                showSizeChanger: true,\r\n                showTotal: (total) => `Total ${total} items`,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default EmailCategoryTable;\r\n","import { Form, Input, Modal, message } from 'antd';\r\nimport { useCreateEmailCategoryMutation, useUpdateEmailCategoryMutation } from '@/slice/emailCategory/emailCategory';\r\n\r\nconst EmailCategoryForm = ({ visible, onClose, editingCategory }) => {\r\n    const [form] = Form.useForm();\r\n    const [createCategory] = useCreateEmailCategoryMutation();\r\n    const [updateCategory] = useUpdateEmailCategoryMutation();\r\n\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n            if (editingCategory) {\r\n                await updateCategory({\r\n                    id: editingCategory._id,\r\n                    data: values\r\n                }).unwrap();\r\n                message.success('Category updated successfully');\r\n            } else {\r\n                await createCategory(values).unwrap();\r\n                message.success('Category created successfully');\r\n            }\r\n            onClose();\r\n        } catch (error) {\r\n            message.error('Failed to save category');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title={editingCategory ? 'Edit Category' : 'Add New Category'}\r\n            open={visible}\r\n            onCancel={onClose}\r\n            onOk={() => form.submit()}\r\n        >\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                onFinish={handleSubmit}\r\n                initialValues={editingCategory}\r\n            >\r\n                <Form.Item\r\n                    name=\"emailCategory\"\r\n                    label=\"Category Name\"\r\n                    rules={[\r\n                        { required: true, message: 'Please enter category name' }\r\n                    ]}\r\n                >\r\n                    <Input placeholder=\"Enter category name\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EmailCategoryForm;","import { useState } from 'react';\r\nimport { Card, Button, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport EmailCategoryTable from './EmailCategory';\r\nimport EmailCategoryForm from './emailCategoryForm';\r\n\r\nconst EmailCategoryParent = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [editingCategory, setEditingCategory] = useState(null);\r\n\r\n    const handleAddNew = () => {\r\n        setEditingCategory(null);\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleEditClick = (category) => {\r\n        setEditingCategory(category);\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n        setEditingCategory(null);\r\n    };\r\n\r\n    return (\r\n        <Card title=\"Email Categories\">\r\n            <Button \r\n                type=\"primary\" \r\n                icon={<PlusOutlined />} \r\n                onClick={handleAddNew}\r\n                style={{ marginBottom: 16 }}\r\n            >\r\n                Add New Category\r\n            </Button>\r\n\r\n            <EmailCategoryTable onEditClick={handleEditClick} />\r\n\r\n            {isModalVisible && (\r\n                <EmailCategoryForm\r\n                    visible={isModalVisible}\r\n                    onClose={handleModalClose}\r\n                    editingCategory={editingCategory}\r\n                />\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EmailCategoryParent;"],"names":["EmailCategoryTable","onEditClick","data","categories","isLoading","useGetEmailCategoriesQuery","deleteCategory","useDeleteEmailCategoryMutation","columns","title","dataIndex","key","render","_","record","Space","children","jsx","Button","type","icon","EditOutlined","onClick","Popconfirm","onConfirm","async","id","unwrap","message","success","error","handleDelete","_id","okText","cancelText","danger","DeleteOutlined","Table","dataSource","rowKey","loading","pagination","pageSize","showSizeChanger","showTotal","total","EmailCategoryForm","visible","onClose","editingCategory","form","Form","useForm","createCategory","useCreateEmailCategoryMutation","updateCategory","useUpdateEmailCategoryMutation","Modal","open","onCancel","onOk","submit","layout","onFinish","values","initialValues","Item","name","label","rules","required","Input","placeholder","EmailCategoryParent","isModalVisible","setIsModalVisible","useState","setEditingCategory","jsxs","Card","PlusOutlined","style","marginBottom","category"],"mappings":"qzCAIA,MAAMA,EAAqB,EAAGC,kBAC1B,MAAQC,KAAMC,EAAYC,UAAAA,GAAcC,KACjCC,GAAkBC,IAWnBC,EAAU,CACZ,CACIC,MAAO,gBACPC,UAAW,gBACXC,IAAK,iBAET,CACIF,MAAO,UACPE,IAAK,UACLC,OAAQ,CAACC,EAAGC,WACPC,EACG,CAAAC,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACGC,KAAK,UACLC,WAAOC,EAAa,IACpBC,QAAS,IAAMrB,EAAYa,KAE/BG,EAAAA,IAACM,EAAA,CACGd,MAAM,iDACNe,UAAW,IA3BVC,OAAOC,IACpB,UACMpB,EAAeoB,GAAIC,SACzBC,EAAQC,QAAQ,uCACXC,GACLF,EAAQE,MAAM,4BAA2B,GAsBZC,CAAajB,EAAOkB,KACrCC,OAAO,MACPC,WAAW,KAEXlB,SAAAC,EAAAA,IAACC,EAAA,CACGC,KAAK,UACLgB,QAAM,EACNf,WAAOgB,EAAe,CAAA,YAS1C,OAAAnB,EAAAA,IAACoB,EAAA,CACG7B,UACA8B,WAAYnC,EACZoC,OAAO,MACPC,QAASpC,EACTqC,WAAY,CACRC,SAAU,GACVC,iBAAiB,EACjBC,UAAYC,GAAU,SAASA,YAEvC,EC1DFC,EAAoB,EAAGC,UAASC,UAASC,sBAC3C,MAAOC,GAAQC,EAAKC,WACbC,GAAkBC,KAClBC,GAAkBC,IAqBrB,OAAAvC,EAAAA,IAACwC,EAAA,CACGhD,MAAOwC,EAAkB,gBAAkB,mBAC3CS,KAAMX,EACNY,SAAUX,EACVY,KAAM,IAAMV,EAAKW,SAEjB7C,SAAAC,EAAAA,IAACkC,EAAA,CACGD,OACAY,OAAO,WACPC,SA5BStC,MAAOuC,IACpB,IACIf,SACMM,EAAe,CACjB7B,GAAIuB,EAAgBjB,IACpB9B,KAAM8D,IACPrC,SACHC,EAAQC,QAAQ,yCAEVwB,EAAeW,GAAQrC,SAC7BC,EAAQC,QAAQ,kCAEZmB,UACHlB,GACLF,EAAQE,MAAM,0BAAyB,GAenCmC,cAAehB,EAEfjC,SAAAC,EAAAA,IAACkC,EAAKe,KAAL,CACGC,KAAK,gBACLC,MAAM,gBACNC,MAAO,CACH,CAAEC,UAAU,EAAM1C,QAAS,+BAG/BZ,SAAAC,EAAAA,IAACsD,EAAM,CAAAC,YAAY,6BAG/B,EC3CFC,EAAsB,KACxB,MAAOC,EAAgBC,GAAqBC,EAAAA,UAAS,IAC9C3B,EAAiB4B,GAAsBD,EAAAA,SAAS,MAkBnD,OAAAE,EAAAA,KAACC,EAAK,CAAAtE,MAAM,mBACRO,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACGC,KAAK,UACLC,WAAO4D,EAAa,IACpB1D,QApBS,KACjBuD,EAAmB,MACnBF,GAAkB,EAAI,EAmBdM,MAAO,CAAEC,aAAc,IAC1BlE,SAAA,qBAIDC,EAAAA,IAACjB,EAAmB,CAAAC,YArBHkF,IACrBN,EAAmBM,GACnBR,GAAkB,EAAI,IAqBjBD,GACGzD,EAAAA,IAAC6B,EAAA,CACGC,QAAS2B,EACT1B,QArBS,KACrB2B,GAAkB,GAClBE,EAAmB,KAAI,EAoBX5B,sBAGZ"}