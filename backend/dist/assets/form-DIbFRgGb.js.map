{"version":3,"file":"form-DIbFRgGb.js","sources":["../../src/components/ui/form.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { Controller, FormProvider, useFormContext } from \"react-hook-form\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\nconst FormFieldContext = React.createContext({})\r\n\r\nconst FormField = (\r\n  {\r\n    ...props\r\n  }\r\n) => {\r\n  return (\r\n    (<FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>)\r\n  );\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\nconst FormItemContext = React.createContext({})\r\n\r\nconst FormItem = React.forwardRef(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    (<FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>)\r\n  );\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    (<Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props} />)\r\n  );\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    (<Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props} />)\r\n  );\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    (<p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props} />)\r\n  );\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message) : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    (<p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}>\r\n      {body}\r\n    </p>)\r\n  );\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":["Form","FormProvider","FormFieldContext","React.createContext","createContext","FormField","props","jsx","Provider","value","name","children","Controller","useFormField","fieldContext","React.useContext","useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","Error","id","formItemId","formDescriptionId","formMessageId","FormItem","React.forwardRef","forwardRef","className","ref","React.useId","cn","displayName","FormLabel","error","Label","htmlFor","FormControl","Slot","FormMessage","body","String","message"],"mappings":"kKAOA,MAAMA,EAAOC,EAEPC,EAAmBC,EAAoBC,cAAA,IAEvCC,EAAY,KAEXC,KAIDC,EAAAA,IAAAL,EAAiBM,SAAjB,CAA0BC,MAAO,CAAEC,KAAMJ,EAAMI,MAC/CC,SAAAJ,EAAAA,IAACK,EAAY,IAAGN,MAKhBO,EAAe,KACb,MAAAC,EAAeC,EAAMC,WAAWd,GAChCe,EAAcF,EAAMC,WAAWE,IAC/BC,cAAEA,EAAAC,UAAeA,GAAcC,IAE/BC,EAAaH,EAAcL,EAAaJ,KAAMU,GAEpD,IAAKN,EACG,MAAA,IAAIS,MAAM,kDAGZ,MAAAC,GAAEA,GAAOP,EAER,MAAA,CACLO,KACAd,KAAMI,EAAaJ,KACnBe,WAAY,GAAGD,cACfE,kBAAmB,GAAGF,0BACtBG,cAAe,GAAGH,yBACfF,EACL,EAGIJ,EAAkBf,EAAoBC,cAAA,IAEtCwB,EAAWC,EAAiBC,YAAA,EAAGC,eAAczB,GAAS0B,KACpD,MAAAR,EAAKS,EAAAA,QAEX,aACIf,EAAgBV,SAAhB,CAAyBC,MAAO,CAAEe,MAClCb,SAAAJ,EAAAA,IAAC,MAAI,CAAAyB,MAAUD,UAAWG,EAAG,YAAaH,MAAgBzB,KAC5D,IAGJsB,EAASO,YAAc,WAEjB,MAAAC,EAAYP,EAAiBC,YAAA,EAAGC,eAAczB,GAAS0B,KAC3D,MAAMK,MAAEA,EAAAZ,WAAOA,GAAeZ,IAG3B,OAAAN,EAAAA,IAAC+B,EAAA,CACAN,MACAD,UAAWG,EAAGG,GAAS,mBAAoBN,GAC3CQ,QAASd,KACLnB,GAAO,IAGjB8B,EAAUD,YAAc,YAElB,MAAAK,EAAcX,EAAAA,YAAiB,KAAMvB,GAAS0B,KAClD,MAAMK,MAAEA,EAAOZ,WAAAA,EAAAC,kBAAYA,EAAmBC,cAAAA,GAAkBd,IAG7D,OAAAN,EAAAA,IAACkC,EAAA,CACAT,MACAR,GAAIC,EACJ,mBACGY,EAEG,GAAGX,KAAqBC,IADxB,GAAGD,IAGT,iBAAgBW,KACZ/B,GAAO,IAGjBkC,EAAYL,YAAc,cAEFN,EAAiBC,YAAA,EAAGC,eAAczB,GAAS0B,KAC3D,MAAAN,kBAAEA,GAAsBb,IAG3B,OAAAN,EAAAA,IAAC,IAAA,CACAyB,MACAR,GAAIE,EACJK,UAAWG,EAAG,gCAAiCH,MAC3CzB,GAAO,IAGD6B,YAAc,kBAExB,MAAAO,EAAcb,EAAMC,YAAW,EAAGC,YAAWpB,cAAaL,GAAS0B,KACvE,MAAMK,MAAEA,EAAAV,cAAOA,GAAkBd,IAC3B8B,EAAON,EAAQO,OAAOP,GAAOQ,SAAWlC,EAE9C,OAAKgC,EAKFpC,EAAAA,IAAC,IAAA,CACAyB,MACAR,GAAIG,EACJI,UAAWG,EAAG,uCAAwCH,MAClDzB,EACHK,SAAAgC,IATI,IAUP,IAGJD,EAAYP,YAAc"}