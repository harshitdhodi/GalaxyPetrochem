{"version":3,"file":"CareerForm-CyTtt4IW.js","sources":["../../src/websiteBackend/career/CareerForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, Card, Breadcrumb, message, Upload } from 'antd';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { \r\n    useSubmitApplicationMutation,\r\n    useUpdateApplicationMutation,\r\n    useGetApplicationByIdQuery\r\n} from '../../slice/career/CareerForm';\r\n\r\nconst CareerAdminForm = () => {\r\n    const [form] = Form.useForm();\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const isEditMode = !!id;\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    // API hooks\r\n    const [submitApplication] = useSubmitApplicationMutation();\r\n    const [updateApplication] = useUpdateApplicationMutation();\r\n    const { data: editData, isLoading: isLoadingEdit } = useGetApplicationByIdQuery(id, {\r\n        skip: !isEditMode\r\n    });\r\n\r\n    // Set form values when editing\r\n    useEffect(() => {\r\n        if (isEditMode && editData?.data) {\r\n            form.setFieldsValue({\r\n                name: editData.data.name,\r\n                email: editData.data.email,\r\n                contactNo: editData.data.contactNo,\r\n                address: editData.data.address,\r\n                postAppliedFor: editData.data.postAppliedFor,\r\n            });\r\n            \r\n            // Set existing resume file\r\n            if (editData.data.resumeFile) {\r\n                setFileList([\r\n                    {\r\n                        uid: '-1',\r\n                        name: editData.data.resumeFile.split('/').pop(),\r\n                        status: 'done',\r\n                        url: editData.data.resumeFile,\r\n                    }\r\n                ]);\r\n            }\r\n        }\r\n    }, [editData, form, isEditMode]);\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', values.name);\r\n            formData.append('email', values.email);\r\n            formData.append('contactNo', values.contactNo);\r\n            formData.append('address', values.address);\r\n            formData.append('postAppliedFor', values.postAppliedFor);\r\n\r\n            // Only append file if a new one is uploaded\r\n            if (fileList[0]?.originFileObj) {\r\n                formData.append('resumeFile', fileList[0].originFileObj);\r\n            }\r\n\r\n            if (isEditMode) {\r\n                await updateApplication({ id, formData }).unwrap();\r\n                message.success('Application updated successfully!');\r\n            } else {\r\n                await submitApplication(formData).unwrap();\r\n                message.success('Application submitted successfully!');\r\n            }\r\n            navigate('/career-table');\r\n        } catch (error) {\r\n            message.error(error.message || 'Something went wrong');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadProps = {\r\n        beforeUpload: (file) => {\r\n            const isPDF = file.type === 'application/pdf';\r\n            if (!isPDF) {\r\n                message.error('You can only upload PDF files!');\r\n                return false;\r\n            }\r\n            return false; // Prevent automatic upload\r\n        },\r\n        maxCount: 1,\r\n        fileList,\r\n        onChange: handleFileChange,\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <Breadcrumb\r\n                items={[\r\n                    { \r\n                        title: <span onClick={() => navigate('/dashboard')} style={{ cursor: 'pointer' }}>\r\n                            Dashboard\r\n                        </span>\r\n                    },\r\n                    { \r\n                        title: <span onClick={() => navigate('/career-table')} style={{ cursor: 'pointer' }}>\r\n                            Career Applications\r\n                        </span>\r\n                    },\r\n                    { title: isEditMode ? 'Edit Application' : 'Add Application' }\r\n                ]}\r\n                style={{ marginBottom: '16px' }}\r\n            />\r\n\r\n            <Card title={isEditMode ? 'Edit Application' : 'Add New Application'}>\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                    onFinish={onFinish}\r\n                    disabled={isLoadingEdit}\r\n                >\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        rules={[\r\n                            { required: true, message: 'Please enter name' },\r\n                            { min: 2, message: 'Name must be at least 2 characters' }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[\r\n                            { required: true, message: 'Please enter email' },\r\n                            { type: 'email', message: 'Please enter a valid email' }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"contactNo\"\r\n                        label=\"Contact Number\"\r\n                        rules={[\r\n                            { required: true, message: 'Please enter contact number' },\r\n                            { pattern: /^[0-9]{10}$/, message: 'Please enter a valid 10-digit number' }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"address\"\r\n                        label=\"Address\"\r\n                        rules={[\r\n                            { required: true, message: 'Please enter address' },\r\n                            { min: 5, message: 'Address must be at least 5 characters' }\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={4} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"postAppliedFor\"\r\n                        label=\"Post Applied For\"\r\n                        rules={[{ required: true, message: 'Please enter post applied for' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"resumeFile\"\r\n                        label=\"Resume\"\r\n                        rules={[\r\n                            { \r\n                                required: !isEditMode && !fileList.length, \r\n                                message: 'Please upload resume' \r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Upload {...uploadProps}>\r\n                            <Button icon={<UploadOutlined />}>\r\n                                {fileList.length ? 'Replace Resume' : 'Upload Resume'}\r\n                            </Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" loading={isLoadingEdit}>\r\n                            {isEditMode ? 'Update' : 'Submit'}\r\n                        </Button>\r\n                        <Button \r\n                            style={{ marginLeft: '10px' }}\r\n                            onClick={() => navigate('/career-table')}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CareerAdminForm; "],"names":["CareerAdminForm","form","Form","useForm","navigate","useNavigate","id","useParams","isEditMode","fileList","setFileList","useState","submitApplication","useSubmitApplicationMutation","updateApplication","useUpdateApplicationMutation","data","editData","isLoading","isLoadingEdit","useGetApplicationByIdQuery","skip","useEffect","setFieldsValue","name","email","contactNo","address","postAppliedFor","resumeFile","uid","split","pop","status","url","uploadProps","beforeUpload","file","type","message","error","maxCount","onChange","newFileList","style","padding","children","jsx","Breadcrumb","items","title","onClick","cursor","marginBottom","Card","jsxs","layout","onFinish","async","values","formData","FormData","append","originFileObj","unwrap","success","disabled","Item","label","rules","required","min","Input","pattern","TextArea","rows","length","Upload","Button","icon","UploadOutlined","htmlType","loading","marginLeft"],"mappings":"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"}