import{j as l,r as s,b4 as z,b5 as D,b6 as L,b7 as G,b8 as v,b9 as k,ba as B,bb as Y,bc as q,bd as Z,be as J,bf as y,bg as K,bh as Q,bi as d,bj as x}from"./index-2C6dvy5y-1746272272211.js";var U=s.forwardRef((e,t)=>{const{children:a,...o}=e,r=s.Children.toArray(a),n=r.find(X);if(n){const i=n.props.children,p=r.map(g=>g===n?s.Children.count(i)>1?s.Children.only(null):s.isValidElement(i)?i.props.children:null:g);return l.jsx(m,{...o,ref:t,children:s.isValidElement(i)?s.cloneElement(i,void 0,p):null})}return l.jsx(m,{...o,ref:t,children:a})});U.displayName="Slot";var m=s.forwardRef((e,t)=>{const{children:a,...o}=e;if(s.isValidElement(a)){const r=te(a),n=ee(o,a.props);return a.type!==s.Fragment&&(n.ref=t?z(t,r):r),s.cloneElement(a,n)}return s.Children.count(a)>1?s.Children.only(null):null});m.displayName="SlotClone";var N=({children:e})=>l.jsx(l.Fragment,{children:e});function X(e){return s.isValidElement(e)&&e.type===N}function ee(e,t){const a={...t};for(const o in t){const r=e[o],n=t[o];/^on[A-Z]/.test(o)?r&&n?a[o]=(...p)=>{n(...p),r(...p)}:r&&(a[o]=r):o==="style"?a[o]={...r,...n}:o==="className"&&(a[o]=[r,n].filter(Boolean).join(" "))}return{...e,...a}}function te(e){var o,r;let t=(o=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:o.get,a=t&&"isReactWarning"in t&&t.isReactWarning;return a?e.ref:(t=(r=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:r.get,a=t&&"isReactWarning"in t&&t.isReactWarning,a?e.props.ref:e.props.ref||e.ref)}var b="AlertDialog",[ae,be]=B(b,[D]),c=D(),R=e=>{const{__scopeAlertDialog:t,...a}=e,o=c(t);return l.jsx(L,{...o,...a,modal:!0})};R.displayName=b;var oe="AlertDialogTrigger",re=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(Q,{...r,...o,ref:t})});re.displayName=oe;var se="AlertDialogPortal",h=e=>{const{__scopeAlertDialog:t,...a}=e,o=c(t);return l.jsx(G,{...o,...a})};h.displayName=se;var le="AlertDialogOverlay",j=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(K,{...r,...o,ref:t})});j.displayName=le;var f="AlertDialogContent",[ne,ie]=ae(f),E=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,children:o,...r}=e,n=c(a),i=s.useRef(null),p=v(t,i),g=s.useRef(null);return l.jsx(k,{contentName:f,titleName:C,docsSlug:"alert-dialog",children:l.jsx(ne,{scope:a,cancelRef:g,children:l.jsxs(Y,{role:"alertdialog",...n,...r,ref:p,onOpenAutoFocus:q(r.onOpenAutoFocus,u=>{var A;u.preventDefault(),(A=g.current)==null||A.focus({preventScroll:!0})}),onPointerDownOutside:u=>u.preventDefault(),onInteractOutside:u=>u.preventDefault(),children:[l.jsx(N,{children:o}),l.jsx(de,{contentRef:i})]})})})});E.displayName=f;var C="AlertDialogTitle",_=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(Z,{...r,...o,ref:t})});_.displayName=C;var w="AlertDialogDescription",P=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(J,{...r,...o,ref:t})});P.displayName=w;var ce="AlertDialogAction",S=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(y,{...r,...o,ref:t})});S.displayName=ce;var O="AlertDialogCancel",T=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,{cancelRef:r}=ie(O,a),n=c(a),i=v(t,r);return l.jsx(y,{...n,...o,ref:i})});T.displayName=O;var de=({contentRef:e})=>{const t=`\`${f}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${f}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${f}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var o;document.getElementById((o=e.current)==null?void 0:o.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},pe=R,fe=h,$=j,M=E,I=S,V=T,F=_,W=P;const Re=pe,ge=fe,H=s.forwardRef(({className:e,...t},a)=>l.jsx($,{className:d("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:a}));H.displayName=$.displayName;const ue=s.forwardRef(({className:e,...t},a)=>l.jsxs(ge,{children:[l.jsx(H,{}),l.jsx(M,{ref:a,className:d("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...t})]}));ue.displayName=M.displayName;const me=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col space-y-2 text-center sm:text-left",e),...t});me.displayName="AlertDialogHeader";const Ae=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});Ae.displayName="AlertDialogFooter";const De=s.forwardRef(({className:e,...t},a)=>l.jsx(F,{ref:a,className:d("text-lg font-semibold",e),...t}));De.displayName=F.displayName;const ve=s.forwardRef(({className:e,...t},a)=>l.jsx(W,{ref:a,className:d("text-sm text-muted-foreground",e),...t}));ve.displayName=W.displayName;const ye=s.forwardRef(({className:e,...t},a)=>l.jsx(I,{ref:a,className:d(x(),e),...t}));ye.displayName=I.displayName;const xe=s.forwardRef(({className:e,...t},a)=>l.jsx(V,{ref:a,className:d(x({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));xe.displayName=V.displayName;export{Re as A,ue as a,me as b,De as c,ve as d,Ae as e,xe as f,ye as g};
