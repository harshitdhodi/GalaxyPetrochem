{"version":3,"file":"BlogCategoryForm-sY19Zoge.js","sources":["../../src/BlogCategory/BlogCategoryForm.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { \r\n  useAddCategoryMutation, \r\n  useGetCategoryByIdQuery, \r\n  useUpdateCategoryMutation \r\n} from '@/slice/blog/blogCategory';\r\n\r\nconst CategoryForm = () => {\r\n  // Get the ID from URL\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Mutation and Query Hooks\r\n  const [addCategory, { isLoading: isAddLoading }] = useAddCategoryMutation();\r\n  const [updateCategory, { isLoading: isUpdateLoading }] = useUpdateCategoryMutation();\r\n  const { data: existingCategory, isLoading: isFetchLoading } = useGetCategoryByIdQuery(id, {\r\n    skip: !id // Only run the query if id exists\r\n  });\r\n\r\n  // Initialize react-hook-form\r\n  const { \r\n    register, \r\n    handleSubmit, \r\n    formState: { errors },\r\n    reset,\r\n    setValue\r\n  } = useForm();\r\n\r\n  // Populate form with existing data if editing\r\n  useEffect(() => {\r\n    if (existingCategory) {\r\n      // Populate all form fields with existing category data\r\n      Object.keys(existingCategory).forEach(key => {\r\n        setValue(key, existingCategory[key]);\r\n      });\r\n    }\r\n  }, [existingCategory, setValue]);\r\n\r\n  // Form submission handler\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      // Convert priority to number if it's not already\r\n      const formData = {\r\n        ...data,\r\n        priority: data.priority ? Number(data.priority) : undefined\r\n      };\r\n  \r\n      let response;\r\n      if (id) {\r\n        // Update existing category with id as query parameter\r\n        response = await updateCategory({ id, categoryData: formData }).unwrap();\r\n      } else {\r\n        // Add new category\r\n        response = await addCategory(formData).unwrap();\r\n      }\r\n  \r\n      // Reset form after successful submission\r\n      reset();\r\n  \r\n      // Manually trigger refetch or state change for table update\r\n      // Navigate to category table and refetch data if necessary\r\n      navigate(\"/blog-category-table\", { replace: true });\r\n  \r\n      // Optionally, add a success toast or notification\r\n      console.log(id ? 'Category updated successfully' : 'Category added successfully', response);\r\n    } catch (submitError) {\r\n      // Handle submission error (you might want to add error handling)\r\n      console.error(id ? 'Failed to update category' : 'Failed to add category', submitError);\r\n    }\r\n  };\r\n  \r\n  // Determine loading and button text\r\n  const isLoading = isAddLoading || isUpdateLoading || isFetchLoading;\r\n  const isEditMode = !!id;\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-6 bg-white shadow-md rounded-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">\r\n        {isEditMode ? 'Update Category' : 'Add Category'}\r\n      </h2>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"text-center text-gray-600\">Loading...</div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n          {/* Category Field */}\r\n          <div>\r\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">\r\n              Category <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"category\"\r\n              {...register(\"category\", { \r\n                required: \"Category is required\",\r\n                minLength: { value: 2, message: \"Category must be at least 2 characters\" }\r\n              })}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n            {errors.category && (\r\n              <p className=\"text-red-500 text-xs mt-1\">{errors.category.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Slug Field */}\r\n          <div>\r\n            <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-700\">\r\n              Slug <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"slug\"\r\n              {...register(\"slug\", { \r\n                required: \"Slug is required\",\r\n                pattern: {\r\n                  value: /^[a-z0-9-]+$/,\r\n                  message: \"Slug must be lowercase, numbers, and hyphens only\"\r\n                }\r\n              })}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n            {errors.slug && (\r\n              <p className=\"text-red-500 text-xs mt-1\">{errors.slug.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Meta Title Field */}\r\n          <div>\r\n            <label htmlFor=\"metatitle\" className=\"block text-sm font-medium text-gray-700\">\r\n              Meta Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"metatitle\"\r\n              {...register(\"metatitle\")}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Meta Description Field */}\r\n          <div>\r\n            <label htmlFor=\"metadescription\" className=\"block text-sm font-medium text-gray-700\">\r\n              Meta Description\r\n            </label>\r\n            <textarea\r\n              id=\"metadescription\"\r\n              {...register(\"metadescription\")}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Meta Keywords Field */}\r\n          <div>\r\n            <label htmlFor=\"metakeywords\" className=\"block text-sm font-medium text-gray-700\">\r\n              Meta Keywords\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"metakeywords\"\r\n              {...register(\"metakeywords\")}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* URL Field */}\r\n          <div>\r\n            <label htmlFor=\"url\" className=\"block text-sm font-medium text-gray-700\">\r\n              URL\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              id=\"url\"\r\n              {...register(\"url\", {\r\n                pattern: {\r\n                  value: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/,\r\n                  message: \"Invalid URL format\"\r\n                }\r\n              })}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n            {errors.url && (\r\n              <p className=\"text-red-500 text-xs mt-1\">{errors.url.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Priority Field */}\r\n          <div>\r\n            <label htmlFor=\"priority\" className=\"block text-sm font-medium text-gray-700\">\r\n              Priority\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              {...register(\"priority\", {\r\n                min: { value: 0, message: \"Priority must be a non-negative number\" }\r\n              })}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n            {errors.priority && (\r\n              <p className=\"text-red-500 text-xs mt-1\">{errors.priority.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Other Meta Field */}\r\n          <div>\r\n            <label htmlFor=\"otherMeta\" className=\"block text-sm font-medium text-gray-700\">\r\n              Other Meta\r\n            </label>\r\n            <textarea\r\n              id=\"otherMeta\"\r\n              {...register(\"otherMeta\")}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"pt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 \r\n              disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading \r\n                ? 'Processing...' \r\n                : (isEditMode ? 'Update Category' : 'Add Category')\r\n              }\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n"],"names":["CategoryForm","id","useParams","navigate","useNavigate","addCategory","isLoading","isAddLoading","useAddCategoryMutation","updateCategory","isUpdateLoading","useUpdateCategoryMutation","data","existingCategory","isFetchLoading","useGetCategoryByIdQuery","skip","register","handleSubmit","formState","errors","reset","setValue","useForm","useEffect","Object","keys","forEach","key","isEditMode","jsxs","className","children","jsx","onSubmit","async","formData","priority","Number","response","categoryData","unwrap","replace","submitError","htmlFor","type","required","minLength","value","message","category","pattern","slug","url","min","disabled"],"mappings":"8LASA,MAAMA,EAAe,KAEb,MAAAC,GAAEA,GAAOC,IACTC,EAAWC,KAGVC,GAAeC,UAAWC,IAAkBC,KAC5CC,GAAkBH,UAAWI,IAAqBC,KACjDC,KAAMC,EAAkBP,UAAWQ,GAAmBC,EAAwBd,EAAI,CACxFe,MAAOf,KAIHgB,SACJA,EAAAC,aACAA,EACAC,WAAWC,OAAEA,GAAOC,MACpBA,EAAAC,SACAA,GACEC,IAGJC,EAAAA,WAAU,KACJX,GAEFY,OAAOC,KAAKb,GAAkBc,SAAeC,IAClCN,EAAAM,EAAKf,EAAiBe,GAAI,GACpC,GAEF,CAACf,EAAkBS,IAGhB,MAiCAhB,EAAYC,GAAgBG,GAAmBI,EAC/Ce,IAAe5B,EAGnB,OAAA6B,EAAAA,KAAC,MAAI,CAAAC,UAAU,qDACbC,SAAA,CAAAC,MAAC,KAAG,CAAAF,UAAU,sCACXC,SAAAH,EAAa,kBAAoB,iBAGnCvB,EACC2B,EAAAA,IAAC,MAAI,CAAAF,UAAU,4BAA4BC,SAAU,eAEpDF,EAAAA,KAAA,OAAA,CAAKI,SAAUhB,GA7CLiB,MAAOvB,IAClB,IAEF,MAAMwB,EAAW,IACZxB,EACHyB,SAAUzB,EAAKyB,SAAWC,OAAO1B,EAAKyB,eAAY,GAGhD,IAAAE,EAGSA,EAFTtC,QAEeQ,EAAe,CAAER,KAAIuC,aAAcJ,IAAYK,eAG/CpC,EAAY+B,GAAUK,SAInCpB,IAINlB,EAAS,uBAAwB,CAAEuC,SAAS,UAIrCC,GAE+E,KAiB5CZ,UAAU,YAEhDC,SAAA,CAAAF,OAAC,MACC,CAAAE,SAAA,CAAAF,EAAAA,KAAC,QAAM,CAAAc,QAAQ,WAAWb,UAAU,0CAA0CC,SAAA,CAAA,YAClEC,EAAAA,IAAA,OAAA,CAAKF,UAAU,eAAeC,SAAC,SAE3CC,EAAAA,IAAC,QAAA,CACCY,KAAK,OACL5C,GAAG,cACCgB,EAAS,WAAY,CACvB6B,SAAU,uBACVC,UAAW,CAAEC,MAAO,EAAGC,QAAS,4CAElClB,UAAU,6IAEXX,EAAO8B,UACLjB,MAAA,IAAA,CAAEF,UAAU,4BAA6BC,SAAAZ,EAAO8B,SAASD,oBAK7D,MACC,CAAAjB,SAAA,CAAAF,EAAAA,KAAC,QAAM,CAAAc,QAAQ,OAAOb,UAAU,0CAA0CC,SAAA,CAAA,QAClEC,EAAAA,IAAA,OAAA,CAAKF,UAAU,eAAeC,SAAC,SAEvCC,EAAAA,IAAC,QAAA,CACCY,KAAK,OACL5C,GAAG,UACCgB,EAAS,OAAQ,CACnB6B,SAAU,mBACVK,QAAS,CACPH,MAAO,eACPC,QAAS,uDAGblB,UAAU,6IAEXX,EAAOgC,MACLnB,MAAA,IAAA,CAAEF,UAAU,4BAA6BC,SAAAZ,EAAOgC,KAAKH,oBAKzD,MACC,CAAAjB,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,YAAYb,UAAU,0CAA0CC,SAE/E,eACAC,EAAAA,IAAC,QAAA,CACCY,KAAK,OACL5C,GAAG,eACCgB,EAAS,aACbc,UAAU,uJAKb,MACC,CAAAC,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,kBAAkBb,UAAU,0CAA0CC,SAErF,qBACAC,EAAAA,IAAC,WAAA,CACChC,GAAG,qBACCgB,EAAS,mBACbc,UAAU,uJAKb,MACC,CAAAC,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,eAAeb,UAAU,0CAA0CC,SAElF,kBACAC,EAAAA,IAAC,QAAA,CACCY,KAAK,OACL5C,GAAG,kBACCgB,EAAS,gBACbc,UAAU,uJAKb,MACC,CAAAC,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,MAAMb,UAAU,0CAA0CC,SAEzE,QACAC,EAAAA,IAAC,QAAA,CACCY,KAAK,MACL5C,GAAG,SACCgB,EAAS,MAAO,CAClBkC,QAAS,CACPH,MAAO,iEACPC,QAAS,wBAGblB,UAAU,6IAEXX,EAAOiC,KACLpB,MAAA,IAAA,CAAEF,UAAU,4BAA6BC,SAAAZ,EAAOiC,IAAIJ,oBAKxD,MACC,CAAAjB,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,WAAWb,UAAU,0CAA0CC,SAE9E,aACAC,EAAAA,IAAC,QAAA,CACCY,KAAK,SACL5C,GAAG,cACCgB,EAAS,WAAY,CACvBqC,IAAK,CAAEN,MAAO,EAAGC,QAAS,4CAE5BlB,UAAU,6IAEXX,EAAOiB,UACLJ,MAAA,IAAA,CAAEF,UAAU,4BAA6BC,SAAAZ,EAAOiB,SAASY,oBAK7D,MACC,CAAAjB,SAAA,CAAAC,MAAC,QAAM,CAAAW,QAAQ,YAAYb,UAAU,0CAA0CC,SAE/E,eACAC,EAAAA,IAAC,WAAA,CACChC,GAAG,eACCgB,EAAS,aACbc,UAAU,gJAKdE,EAAAA,IAAC,MAAI,CAAAF,UAAU,OACbC,SAAAC,EAAAA,IAAC,SAAA,CACCY,KAAK,SACLU,SAAUjD,EACVyB,UAAU,uNAGTC,SAAA1B,EACG,gBACCuB,EAAa,kBAAoB,wBAMhD"}