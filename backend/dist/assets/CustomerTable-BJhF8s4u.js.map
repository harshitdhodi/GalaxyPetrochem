{"version":3,"file":"CustomerTable-BJhF8s4u.js","sources":["../../src/customer/components/AddChemicalDialog.jsx","../../src/customer/components/ChemicalDialog.jsx","../../src/customer/components/SalesOrderTable.jsx","../../src/customer/CustomerTable.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\r\nimport { useGetChemicalsByAlphabetQuery } from '@/slice/supplierSlice/chemicalBySupplier'\r\nimport axios from 'axios'\r\n\r\nexport const AddChemicalDialog = ({ \r\n    open, \r\n    onOpenChange, \r\n    customerId, // Add customer ID as a prop\r\n    onAddChemical ,\r\n    customerRefatch,\r\n    refetch\r\n}) => {\r\n    const [supplierSearch, setSupplierSearch] = useState(\"\");\r\n    const [selectedChemicals, setSelectedChemicals] = useState([]); // Store selected chemicals\r\n  \r\n    // Fetch chemicals based on the search query\r\n    const { data: chemicals, isLoading, error } = useGetChemicalsByAlphabetQuery(\r\n        supplierSearch,\r\n        { skip: !supplierSearch || supplierSearch.length < 2 }\r\n    );\r\n\r\n    const handleAddChemical = async () => {\r\n        // Ensure we're using the chemical ID array\r\n        const chemicalIds = selectedChemicals.map((chemical) => chemical._id);\r\n  \r\n        const requestData = {\r\n            id: customerId, // Include customer ID in the request\r\n            chemicalId: chemicalIds // Match the exact key expected by backend\r\n        };\r\n  \r\n        try {\r\n            // Sending request to add chemicals\r\n            await axios.put(`/api/customer/addChemicalIdsToCustomer?id=${customerId}`, requestData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n  \r\n            onOpenChange(false);  // Close the modal\r\n            if (onAddChemical) onAddChemical(selectedChemicals); // Optional callback\r\n            customerRefatch();\r\n            refetch();\r\n        } catch (err) {\r\n            console.error(\"Error adding chemicals:\", err);\r\n            // Optionally handle error (show toast, alert, etc.)\r\n        }\r\n    };\r\n  \r\n    const handleSelectChemical = (chemical) => {\r\n        // Prevent adding duplicate chemicals\r\n        if (!selectedChemicals.some(selected => selected._id === chemical._id)) {\r\n            setSelectedChemicals((prevSelected) => {\r\n                const updatedSelected = [...prevSelected, chemical];\r\n                setSupplierSearch(\"\"); // Clear the search input after selection\r\n                return updatedSelected;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemoveChemical = (chemicalId) => {\r\n        // Remove the selected chemical from the list\r\n        setSelectedChemicals((prevSelected) => \r\n            prevSelected.filter((chemical) => chemical._id !== chemicalId)\r\n        );\r\n        refetch();\r\n    };\r\n  \r\n    return (\r\n        <Dialog open={open} onOpenChange={(isOpen) => !isOpen && onOpenChange(false)}>\r\n            <DialogContent className=\"max-w-lg p-6\">\r\n                <DialogHeader>\r\n                    <DialogTitle className=\"text-lg font-semibold text-[#3b1f91]\">\r\n                        Add Chemicals to Customer\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className=\"mt-4\">\r\n                    <Input\r\n                        placeholder=\"Search chemicals\"\r\n                        value={supplierSearch}\r\n                        onChange={(e) => setSupplierSearch(e.target.value)}\r\n                        className=\"w-full mb-4\"\r\n                    />\r\n\r\n                    {/* Dynamic Dropdown for Chemical Suggestions */}\r\n                    {isLoading ? (\r\n                        <div>Loading...</div>\r\n                    ) : (\r\n                        supplierSearch &&\r\n                        chemicals &&\r\n                        chemicals.length > 0 && (\r\n                            <ul className=\"border bg-white rounded max-h-40 overflow-y-auto\">\r\n                                {chemicals\r\n                                    .filter(chemical => \r\n                                        !selectedChemicals.some(selected => selected._id === chemical._id)\r\n                                    )\r\n                                    .map((chemical) => (\r\n                                    <li\r\n                                        key={chemical._id}\r\n                                        onClick={() => handleSelectChemical(chemical)}\r\n                                        className=\"p-2 hover:bg-gray-200 cursor-pointer\"\r\n                                    >\r\n                                        {chemical.name}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                    )}\r\n\r\n                    {chemicals?.length === 0 && !isLoading && supplierSearch && (\r\n                        <div className=\"p-2 text-gray-500\">No chemicals found</div>\r\n                    )}\r\n\r\n                    {/* Show selected chemicals */}\r\n                    <div className=\"mt-4\">\r\n                        {selectedChemicals.length > 0 && (\r\n                            <div className=\"space-y-2\">\r\n                                {selectedChemicals.map((chemical) => (\r\n                                    <div\r\n                                        key={chemical._id}\r\n                                        className=\"flex justify-between items-center bg-gray-100 p-2 rounded\"\r\n                                    >\r\n                                        <span>{chemical.name}</span>\r\n                                        <Button\r\n                                            variant=\"outline\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => handleRemoveChemical(chemical._id)}\r\n                                            className=\"text-red-500\"\r\n                                        >\r\n                                            Remove\r\n                                        </Button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between mt-4\">\r\n                        <Button\r\n                            onClick={handleAddChemical}\r\n                            className=\"bg-[#3b1f91] hover:bg-purple-700\"\r\n                            disabled={selectedChemicals.length === 0}\r\n                        >\r\n                            + Add Chemicals\r\n                        </Button>\r\n                        <Button \r\n                            onClick={() => onOpenChange(false)} \r\n                            className=\"bg-red-600 hover:bg-red-700\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default AddChemicalDialog;","import React, { useState } from 'react';\r\nimport { \r\n  Dialog, \r\n  DialogContent, \r\n  DialogHeader, \r\n  DialogTitle \r\n} from \"@/components/ui/dialog\";\r\nimport { \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableHead, \r\n  TableHeader, \r\n  TableRow \r\n} from \"@/components/ui/table\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Plus, Trash } from 'lucide-react';  // Import Trash icon\r\nimport { AddChemicalDialog } from \"./AddChemicalDialog\";\r\nimport { useGetCustomerByIdQuery, useRemoveChemicalFromCustomerMutation } from '@/slice/customerSlice/customerApiSlice';\r\n\r\nexport const ChemicalsDialog = ({ \r\n  customerId, \r\n  customerName, \r\n  open, \r\n  onOpenChange,\r\n  customerRefatch\r\n}) => {\r\n  const [showAddChemical, setShowAddChemical] = useState(false);\r\n  \r\n  // Fetch customer data including chemicals\r\n  const { \r\n    data: customerResponse, \r\n    isLoading, \r\n    isError,\r\n    refetch\r\n  } = useGetCustomerByIdQuery(customerId, {\r\n    // Only fetch when the dialog is open\r\n    skip: !open\r\n  });\r\n\r\n  // Use mutation for deleting chemical\r\n  const [deleteChemical, { isLoading: isDeleting }] = useRemoveChemicalFromCustomerMutation();\r\n\r\n  // Handle adding a new chemical\r\n  const handleAddChemical = (newChemical) => {\r\n    // Implement your add chemical logic here\r\n    console.log('Adding chemical:', newChemical);\r\n    setShowAddChemical(false);\r\n  };\r\n\r\n  // Handle deleting a chemical\r\n  const handleDeleteChemical = async (chemicalId) => {\r\n    try {\r\n      await deleteChemical({ customerId, chemicalId });  // Call delete mutation\r\n      refetch();  // Refetch customer data to update the list of chemicals\r\n    } catch (error) {\r\n      console.error('Error deleting chemical:', error);\r\n    }\r\n  };\r\n\r\n  // Render loading state\r\n  if (isLoading) {\r\n    return (\r\n      <Dialog open={open} onOpenChange={onOpenChange}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Loading Chemicals...</DialogTitle>\r\n          </DialogHeader>\r\n          <p>Fetching chemical data...</p>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  // Render error state\r\n  if (isError) {\r\n    return (\r\n      <Dialog open={open} onOpenChange={onOpenChange}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Error Loading Chemicals</DialogTitle>\r\n          </DialogHeader>\r\n          <p>Unable to fetch chemical data. Please try again.</p>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  // Destructure chemicalId from the response data\r\n  const chemicals = customerResponse?.data?.chemicalId || [];\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onOpenChange={onOpenChange}>\r\n        <DialogContent className=\"max-w-3xl\">\r\n          <DialogHeader>\r\n            <div className=\"flex justify-between items-center\">\r\n              <DialogTitle>Chemicals for {customerName}</DialogTitle>\r\n              <Button className=\"m-3\" onClick={() => setShowAddChemical(true)}>\r\n                <Plus className=\"mr-2 h-4 w-4\" /> Add Chemical\r\n              </Button>\r\n            </div>\r\n          </DialogHeader>\r\n          \r\n          {chemicals.length > 0 ? (\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Name</TableHead>\r\n                  <TableHead>CAS Number</TableHead>\r\n                  <TableHead>Actions</TableHead> {/* Add Actions column */}\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {chemicals.map((chemical) => (\r\n                  <TableRow key={chemical._id}>\r\n                    <TableCell>{chemical.name}</TableCell>\r\n                    <TableCell>{chemical.cas_number}</TableCell>\r\n                    <TableCell>\r\n                      {/* Delete button for each chemical */}\r\n                      <Button \r\n                        variant=\"destructive\" \r\n                        size=\"sm\" \r\n                        onClick={() => handleDeleteChemical(chemical._id)} \r\n                        disabled={isDeleting}\r\n                      >\r\n                        <Trash />\r\n                      \r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <p className=\"text-center py-4\">No chemicals found for this customer</p>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <AddChemicalDialog \r\n        open={showAddChemical} \r\n        onOpenChange={setShowAddChemical}\r\n        customerId={customerId}\r\n        onAddChemical={handleAddChemical}\r\n        customerRefatch={customerRefatch}\r\n        refetch={refetch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","'use client';\r\n\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\n\r\nconst SalesOrderTable = ({ salesOrders = [] }) => { // Default to an empty array if salesOrders is not provided\r\n  return (\r\n    <Table>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead>Created Date</TableHead>\r\n          <TableHead>Order Number</TableHead>\r\n          <TableHead>Payment Status</TableHead>\r\n          <TableHead>Total Discount</TableHead>\r\n          <TableHead>Total Tax</TableHead>\r\n          <TableHead>Total Amount</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {salesOrders.length === 0 ? (\r\n          <TableRow>\r\n            <TableCell colSpan={6} className=\"text-center\">No Data Found</TableCell>\r\n          </TableRow>\r\n        ) : (\r\n          salesOrders.map((order) => (\r\n            <TableRow key={order.orderNumber}>\r\n              <TableCell>{order.createdDate}</TableCell>\r\n              <TableCell>{order.orderNumber}</TableCell>\r\n              <TableCell>{order.paymentStatus}</TableCell>\r\n              <TableCell>{order.totalDiscount}</TableCell>\r\n              <TableCell>{order.totalTax}</TableCell>\r\n              <TableCell>{order.totalAmount}</TableCell>\r\n            </TableRow>\r\n          ))\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default SalesOrderTable;\r\n","'use client'\r\n\r\nimport { useState } from 'react'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { ChevronDown, ChevronUp, MoreVertical, Plus, Search, X } from 'lucide-react'\r\nimport { useDeleteCustomerMutation, useGetCustomersQuery } from '@/slice/customerSlice/customerApiSlice'\r\nimport { Link } from 'react-router-dom'\r\nimport { ChemicalsDialog } from './components/ChemicalDialog'\r\nimport { AddChemicalDialog } from './components/AddChemicalDialog'\r\nimport SalesOrderTable from './components/SalesOrderTable'\r\nimport { BreadcrumbWithCustomSeparator } from '@/breadCrumb/BreadCrumb'\r\n\r\nconst breadcrumbItems = [\r\n  { label: \"Dashboard\", href: \"/dashboard\" },\r\n  { label: \"Customer Table\", href: \"/supplier-table\" },\r\n]\r\n\r\nconst CustomerTable = () => {\r\n  const [expandedRowId, setExpandedRowId] = useState(null);\r\n  const [showChemicals, setShowChemicals] = useState(false)\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n  const [deleteCustomer] = useDeleteCustomerMutation(); // Destructure the delete mutation\r\n  const [isDeleting, setIsDeleting] = useState(false); // To track the loading state\r\n\r\n  const [showAddChemical, setShowAddChemical] = useState(false)\r\n  // Fetch customers using RTK Query\r\n  const { data: responseData, isLoading, error , refetch } = useGetCustomersQuery();\r\n  const customers = responseData || [];\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error loading customers</div>;\r\n\r\n \r\n  const handleExpand = (customerId) => {\r\n    setExpandedRowId(prevExpandedRowId => \r\n      prevExpandedRowId === customerId ? null : customerId // Toggle logic\r\n    );\r\n  };\r\n  const handleAddChemical = (chemicalName) => {\r\n    // Implement chemical addition logic\r\n    console.log(`Adding chemical: ${chemicalName}`);\r\n  }\r\n  const handleShowChemicals = (customer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowChemicals(true);\r\n  }\r\n\r\n  const handleDeleteCustomer = async (supplierId) => {\r\n    try {\r\n        setIsDeleting(true); // Start loading\r\n        await deleteCustomer(supplierId); // Call the mutation with the supplier ID\r\n        // Handle success (e.g., show a success message or update the UI)\r\n        alert(\"Customer deleted successfully\");\r\n    } catch (error) {\r\n        // Handle error\r\n        alert(\"Failed to delete customer\");\r\n    } finally {\r\n        setIsDeleting(false); // End loading\r\n    }\r\n};\r\n  return (\r\n    <>\r\n       <div className=\"ml-1\">\r\n          <BreadcrumbWithCustomSeparator items={breadcrumbItems} />\r\n    \r\n        </div>\r\n    <div className=\"space-y-4 mt-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-medium text-[#3b1f91]\">Customers</h2>\r\n        <Link to=\"/customer-form\">\r\n          <Button>\r\n            <Plus className=\"mr-2 h-4 w-4 \" /> \r\n            Add Customer\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <hr className=\"border-[#3b1f91] border my-4\" />\r\n\r\n      <div className=\"rounded-md border\">\r\n  <Table>\r\n    <TableHeader className=\"bg-gray-100 \">\r\n      <TableRow>\r\n        <TableHead className=\"w-[50px] border-r-gray-300 bg-gray-100\"></TableHead>\r\n        <TableHead className=\"text-black border-r-gray-300 font-semibold\">Name</TableHead>\r\n        <TableHead className=\"text-black border-r-gray-300 font-semibold\">Contact Person</TableHead>\r\n        <TableHead className=\"text-black border-r-gray-300 font-semibold\">Email</TableHead>\r\n        <TableHead className=\"text-black border-r-gray-300 font-semibold\">Mobile/Phone</TableHead>\r\n        <TableHead className=\"text-black border-r-gray-300 font-semibold\">Website</TableHead>\r\n        <TableHead className=\"text-black  font-semibold\">Chemicals Count</TableHead>\r\n        {/* <TableHead className=\"text-black font-semibold\">Location</TableHead>  */}\r\n        {/* New Column */}\r\n        {/* <TableHead className=\"w-[50px]\"></TableHead> */}\r\n      </TableRow>\r\n    </TableHeader>\r\n    <TableBody>\r\n      {/* Filter Row */}\r\n      <TableRow className=\"bg-gray-100\">\r\n        <TableCell></TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter name...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter contact...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter email...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter phone...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter website...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        <TableCell>\r\n          <Input placeholder=\"Filter chemicals...\" className=\"max-w-sm\" />\r\n        </TableCell>\r\n        {/* <TableCell>\r\n          <Input placeholder=\"Filter location...\" className=\"max-w-sm\" /> \r\n\r\n        </TableCell> */}\r\n        {/* <TableCell></TableCell> */}\r\n      </TableRow>\r\n\r\n      {/* Customer Rows */}\r\n      {customers.map((customer) => (\r\n        <>\r\n          <TableRow key={customer.id}>\r\n            <TableCell>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleExpand(customer.id)} // Toggle row expansion\r\n                >\r\n                  {expandedRowId === customer.id ? (\r\n                    <ChevronUp className=\"h-4 w-4\" />\r\n                  ) : (\r\n                    <ChevronDown className=\"h-4 w-4\" />\r\n                  )}\r\n                </Button>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"sm\">\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"end\">\r\n                    <Link to={`/edit-customer-form/${customer._id}`}>\r\n                    <DropdownMenuItem>Edit</DropdownMenuItem>\r\n                    </Link>\r\n                    <DropdownMenuItem\r\n                      className=\"text-red-600\"\r\n                      onClick={() => handleDeleteCustomer(customer._id)} // Call delete function\r\n                      disabled={isDeleting} // Optionally disable if mutation is in progress\r\n                    >\r\n                      {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem\r\n                      onClick={() => {\r\n                        setSelectedCustomer(customer);\r\n                        setShowAddChemical(true);\r\n                      }}\r\n                    >\r\n                      Add Chemical\r\n                    </DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell>{customer.name}</TableCell>\r\n            <TableCell>{customer.contactPerson}</TableCell>\r\n            <TableCell>{customer.email}</TableCell>\r\n            <TableCell>{customer.phone}</TableCell>\r\n            <TableCell>{customer.website}</TableCell>\r\n            <TableCell>\r\n              <Button\r\n              className=\"hover:bg-[#4f359c]\"\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                onClick={() => handleShowChemicals(customer)}\r\n              >\r\n                Chemicals ({customer.chemicalId.length})\r\n              </Button>\r\n            </TableCell>\r\n            {/* <TableCell>{customer.location}</TableCell>\r\n            <TableCell></TableCell> */}\r\n          </TableRow>\r\n          {expandedRowId === customer.id && (\r\n            <TableRow>\r\n              <TableCell colSpan={9}>\r\n                <div className=\"p-4\">\r\n                  {/* Display the Sales Orders Table for the customer */}\r\n                  <SalesOrderTable customerId={customer._id} />\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </>\r\n      ))}\r\n\r\n    \r\n    </TableBody>\r\n  </Table>\r\n</div>\r\n\r\n\r\n      {/* Chemicals Dialog */}\r\n      <ChemicalsDialog\r\n        open={showChemicals}\r\n        onOpenChange={setShowChemicals}\r\n        customerName={selectedCustomer?.name}\r\n        customerId={selectedCustomer?._id} // Pass selected \r\n        onAddChemical={handleAddChemical}\r\n        customerRefatch = {refetch}\r\n      />\r\n      {/* Add Chemical Dialog */}\r\n      <AddChemicalDialog\r\n        open={showAddChemical}\r\n        onOpenChange={setShowAddChemical}\r\n        onAddChemical={handleAddChemical}\r\n        customerId={selectedCustomer?._id}\r\n      />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerTable\r\n"],"names":["AddChemicalDialog","open","onOpenChange","customerId","onAddChemical","customerRefatch","refetch","supplierSearch","setSupplierSearch","useState","selectedChemicals","setSelectedChemicals","data","chemicals","isLoading","error","useGetChemicalsByAlphabetQuery","skip","length","jsx","Dialog","isOpen","children","jsxs","DialogContent","className","DialogHeader","DialogTitle","Input","placeholder","value","onChange","e","target","filter","chemical","some","selected","_id","map","onClick","prevSelected","updatedSelected","handleSelectChemical","name","Button","variant","size","handleRemoveChemical","chemicalId","async","chemicalIds","requestData","id","axios","put","headers","err","disabled","ChemicalsDialog","customerName","showAddChemical","setShowAddChemical","customerResponse","isError","useGetCustomerByIdQuery","deleteChemical","isDeleting","useRemoveChemicalFromCustomerMutation","Fragment","Plus","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","cas_number","handleDeleteChemical","Trash","newChemical","SalesOrderTable","salesOrders","colSpan","order","createdDate","orderNumber","paymentStatus","totalDiscount","totalTax","totalAmount","breadcrumbItems","label","href","CustomerTable","expandedRowId","setExpandedRowId","showChemicals","setShowChemicals","selectedCustomer","setSelectedCustomer","deleteCustomer","useDeleteCustomerMutation","setIsDeleting","responseData","useGetCustomersQuery","customers","handleAddChemical","chemicalName","BreadcrumbWithCustomSeparator","items","Link","to","customer","handleExpand","prevExpandedRowId","ChevronUp","ChevronDown","DropdownMenu","DropdownMenuTrigger","asChild","MoreVertical","DropdownMenuContent","align","DropdownMenuItem","supplierId","alert","handleDeleteCustomer","contactPerson","email","phone","website","handleShowChemicals"],"mappings":"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"}